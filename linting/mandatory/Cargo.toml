[package]
name = "ink_linting_mandatory"
version.workspace = true
authors.workspace = true
edition.workspace = true

license.workspace = true
readme = "README.md"
repository.workspace = true
documentation = "https://docs.rs/ink_linting_mandatory"
homepage.workspace = true
description = "Mandatory ink! linting rules"
keywords.workspace = true
include = ["Cargo.toml", "*.rs", "LICENSE"]

[lib]
crate-type = ["cdylib"]

[dependencies]
dylint_linting = "3.3.0"
if_chain = "1.0.2"
log = "0.4.14"
regex = "1.5.4"
ink_linting_utils = { workspace = true }


# The ink! dependencies used to build the `ui` tests and to compile the linting
# library with `--default-features=std` (see the `features` section bellow).
#
# These cannot be moved to the workspace level because `cargo` does not provide
# the `[[workspace.dev-dependencies]]` directive.
#ink = { version = "=6.0.0-alpha", path = "../../crates/ink", default-features = false }
#ink = { version = "=6.0.0-alpha", path = "../../crates/ink", features = ["std"], default-features = true }
#ink = { version = "=6.0.0-alpha", path = "../../crates/ink", features = ["std"] }
#ink_env = { version = "=6.0.0-alpha", path = "../../crates/env" }
#ink_metadata = { version = "=6.0.0-alpha", path = "../../crates/metadata" }
#ink_primitives = { version = "=6.0.0-alpha", path = "../../crates/primitives" }
#ink_storage = { version = "=6.0.0-alpha", path = "../../crates/storage" }
#scale = { package = "parity-scale-codec", version = "3.6.12", default-features = false, features = ["derive"] }
#scale-info = { version = "2.6", default-features = false, features = ["derive"] }

#ink_macro = { version = "=6.0.0-alpha", path = "../../crates/ink/macro", features = ["std"], default-features = true }
#ink_codegen = { version = "=6.0.0-alpha", path = "../../crates/ink/codegen", features = ["std"], default-features = true }
[dev-dependencies]
dylint_testing = "3.5.1"
#dylint_testing = { path = "/Users/michi/projects/dylint/utils/testing" }

ink = { version = "=6.0.0-alpha", path = "../../crates/ink", features = ["std"] }
#ink_primitives = { version = "=6.0.0-alpha", path = "../../crates/primitives", default-features = false }

#ink = { version = "=6.0.0-alpha", path = "../../crates/ink", default-features = false }
#ink_env = { version = "=6.0.0-alpha", path = "../../crates/env", default-features = false }
#ink_metadata = { version = "=6.0.0-alpha", path = "../../crates/metadata", default-features = false }
#ink_primitives = { version = "=6.0.0-alpha", path = "../../crates/primitives", default-features = false }
#ink_storage = { version = "=6.0.0-alpha", path = "../../crates/storage", default-features = false }
#scale = { package = "parity-scale-codec", version = "3.6.12", default-features = false, features = ["derive"] }
#scale-info = { version = "2.6", default-features = false, features = ["derive"] }

#ink = { version = "=6.0.0-alpha", path = "../../crates/ink", default-features = false, features = ["std"] }
#ink_env = { version = "=6.0.0-alpha", path = "../../crates/env", default-features = false, features = ["std"]  }
#ink_metadata = { version = "=6.0.0-alpha", path = "../../crates/metadata", default-features = false, features = ["std"]  }
#ink_primitives = { version = "=6.0.0-alpha", path = "../../crates/primitives", default-features = false, features = ["std"] }
#ink_storage = { version = "=6.0.0-alpha", path = "../../crates/storage", default-features = false, features = ["std"]  }
#scale = { package = "parity-scale-codec", version = "3.6.12", default-features = false, features = ["derive"] }
#scale-info = { version = "2.6", default-features = false, features = ["derive"] }

# For the moment we have to include the tests as examples and
# then use `dylint_testing::ui_test_examples`.
#
# The reason is that the `dylint_testing` API currently does not
# provide any other option to run the tests on those files
# *while giving us the option to specify the dependencies*.
#
# Those files require the ink! dependencies though, by having
# them as examples here, they inherit the `dev-dependencies`.
[[example]]
name = "no_main_pass"
path = "ui/pass/no_main.rs"
#features = ["std"]

[package.metadata.rust-analyzer]
rustc_private = true

[features]
#default = ["std"]
default = ["std"]
std = [
    #"ink/std",
    #"ink_env/std",
    #"ink_metadata/std",
    #"ink_primitives/std",
    #"ink_storage/std",
    #"scale/std",
    #"scale-info/std",
]
ink-as-dependency = []

[lints.rust]
unexpected_cfgs = { level = "warn", check-cfg = ['cfg(dylint_lib, values("ink_linting"))'] }
