(function() {
    var type_impls = Object.fromEntries([["ink_e2e",[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BeforeAllRuntimeMigrations-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-BeforeAllRuntimeMigrations-for-Pallet%3CT%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T&gt; BeforeAllRuntimeMigrations for Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.before_all_runtime_migrations\" class=\"method trait-impl\"><a href=\"#method.before_all_runtime_migrations\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">before_all_runtime_migrations</a>() -&gt; <a class=\"struct\" href=\"ink_e2e/struct.Weight.html\" title=\"struct ink_e2e::Weight\">Weight</a></h4></section></summary><div class='docblock'>Something that should happen before runtime migrations are executed.</div></details></div></details>","BeforeAllRuntimeMigrations","ink_e2e::preset::mock_network::parachain::Contracts"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Callable%3CT%3E-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-Callable%3CT%3E-for-Pallet%3CT%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T&gt; Callable&lt;T&gt; for Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,\n    &lt;&lt;T as Config&gt;::Currency as Inspect&lt;&lt;T as Config&gt;::AccountId&gt;&gt;::Balance: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;U256&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;U256&gt;,\n    &lt;&lt;T as Config&gt;::Time as Time&gt;::Moment: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;U256&gt;,\n    &lt;T as Config&gt;::Hash: IsType&lt;H256&gt;,</div></h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.RuntimeCall\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.RuntimeCall\" class=\"anchor\">ยง</a><h4 class=\"code-header\">type <a class=\"associatedtype\">RuntimeCall</a> = Call&lt;T&gt;</h4></section></div></details>","Callable<T>","ink_e2e::preset::mock_network::parachain::Contracts"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-Clone-for-Pallet%3CT%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for Pallet&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a href=\"#method.clone\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.86.0/core/clone/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; Pallet&lt;T&gt;</h4></section></summary><div class='docblock'>Returns a copy of the value. <a href=\"https://doc.rust-lang.org/1.86.0/core/clone/trait.Clone.html#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> ยท <a class=\"src\" href=\"https://doc.rust-lang.org/1.86.0/src/core/clone.rs.html#174\">Source</a></span><a href=\"#method.clone_from\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.86.0/core/clone/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, source: &amp;Self)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"https://doc.rust-lang.org/1.86.0/core/clone/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","ink_e2e::preset::mock_network::parachain::Contracts"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-Debug-for-Pallet%3CT%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for Pallet&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a href=\"#method.fmt\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.86.0/core/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, fmt: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.86.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.86.0/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/1.86.0/core/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","ink_e2e::preset::mock_network::parachain::Contracts"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-DispatchViewFunction-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-DispatchViewFunction-for-Pallet%3CT%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T&gt; DispatchViewFunction for Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.dispatch_view_function\" class=\"method trait-impl\"><a href=\"#method.dispatch_view_function\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">dispatch_view_function</a>&lt;O&gt;(\n    id: &amp;ViewFunctionId,\n    input: &amp;mut &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.u8.html\">u8</a>],\n    output: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.reference.html\">&amp;mut O</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.unit.html\">()</a>, ViewFunctionDispatchError&gt;<div class=\"where\">where\n    O: Output,</div></h4></section></div></details>","DispatchViewFunction","ink_e2e::preset::mock_network::parachain::Contracts"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-GetStorageVersion-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-GetStorageVersion-for-Pallet%3CT%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T&gt; GetStorageVersion for Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.InCodeStorageVersion\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.InCodeStorageVersion\" class=\"anchor\">ยง</a><h4 class=\"code-header\">type <a class=\"associatedtype\">InCodeStorageVersion</a> = StorageVersion</h4></section></summary><div class='docblock'>This type is generated by the <a href=\"crate::pallet\"><code>pallet</code></a> macro. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.in_code_storage_version\" class=\"method trait-impl\"><a href=\"#method.in_code_storage_version\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">in_code_storage_version</a>() -&gt; &lt;Pallet&lt;T&gt; as GetStorageVersion&gt;::InCodeStorageVersion</h4></section></summary><div class='docblock'>Returns the in-code storage version as specified in the\n<a href=\"crate::pallet_macros::storage_version\"><code>storage_version</code></a> attribute, or\n[<code>NoStorageVersionSet</code>] if the attribute is missing.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_chain_storage_version\" class=\"method trait-impl\"><a href=\"#method.on_chain_storage_version\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">on_chain_storage_version</a>() -&gt; StorageVersion</h4></section></summary><div class='docblock'>Returns the storage version of the pallet as last set in the actual on-chain storage.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.current_storage_version\" class=\"method trait-impl\"><a href=\"#method.current_storage_version\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">current_storage_version</a>() -&gt; Self::InCodeStorageVersion</h4></section></summary><span class=\"item-info\"><div class=\"stab deprecated\"><span class=\"emoji\">๐</span><span>Deprecated: This method has been renamed to <code>in_code_storage_version</code> and will be removed after March 2024.</span></div></span><div class='docblock'>DEPRECATED: Use [<code>Self::current_storage_version</code>] instead. <a>Read more</a></div></details></div></details>","GetStorageVersion","ink_e2e::preset::mock_network::parachain::Contracts"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Hooks%3C%3C%3C%3CT+as+SysConfig%3E::Block+as+HeaderProvider%3E::HeaderT+as+Header%3E::Number%3E-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-Hooks%3C%3C%3C%3CT+as+SysConfig%3E::Block+as+HeaderProvider%3E::HeaderT+as+Header%3E::Number%3E-for-Pallet%3CT%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T&gt; Hooks&lt;&lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number&gt; for Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_idle\" class=\"method trait-impl\"><a href=\"#method.on_idle\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">on_idle</a>(\n    _block: &lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number,\n    limit: <a class=\"struct\" href=\"ink_e2e/struct.Weight.html\" title=\"struct ink_e2e::Weight\">Weight</a>,\n) -&gt; <a class=\"struct\" href=\"ink_e2e/struct.Weight.html\" title=\"struct ink_e2e::Weight\">Weight</a></h4></section></summary><div class='docblock'>Hook to consume a blockโs idle time. This will run when the block is being finalized (before\n[<code>Hooks::on_finalize</code>]). <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.integrity_test\" class=\"method trait-impl\"><a href=\"#method.integrity_test\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">integrity_test</a>()</h4></section></summary><div class='docblock'>Check the integrity of this palletโs configuration. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_initialize\" class=\"method trait-impl\"><a href=\"#method.on_initialize\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">on_initialize</a>(_n: BlockNumber) -&gt; <a class=\"struct\" href=\"ink_e2e/struct.Weight.html\" title=\"struct ink_e2e::Weight\">Weight</a></h4></section></summary><div class='docblock'>Block initialization hook. This is called at the very beginning of block execution. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_finalize\" class=\"method trait-impl\"><a href=\"#method.on_finalize\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">on_finalize</a>(_n: BlockNumber)</h4></section></summary><div class='docblock'>Block finalization hook. This is called at the very end of block execution. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_poll\" class=\"method trait-impl\"><a href=\"#method.on_poll\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">on_poll</a>(_n: BlockNumber, _weight: &amp;mut WeightMeter)</h4></section></summary><div class='docblock'>A hook to run logic after inherent application. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_runtime_upgrade\" class=\"method trait-impl\"><a href=\"#method.on_runtime_upgrade\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">on_runtime_upgrade</a>() -&gt; <a class=\"struct\" href=\"ink_e2e/struct.Weight.html\" title=\"struct ink_e2e::Weight\">Weight</a></h4></section></summary><div class='docblock'>Hook executed when a code change (aka. a โruntime upgradeโ) is detected by the FRAME\n<code>Executive</code> pallet. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.offchain_worker\" class=\"method trait-impl\"><a href=\"#method.offchain_worker\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">offchain_worker</a>(_n: BlockNumber)</h4></section></summary><div class='docblock'>Implementing this function on a pallet allows you to perform long-running tasks that are\ndispatched as separate threads, and entirely independent of the main blockchain execution. <a>Read more</a></div></details></div></details>","Hooks<<<<T as Config>::Block as HeaderProvider>::HeaderT as Header>::Number>","ink_e2e::preset::mock_network::parachain::Contracts"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IntegrityTest-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-IntegrityTest-for-Pallet%3CT%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T&gt; IntegrityTest for Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.integrity_test\" class=\"method trait-impl\"><a href=\"#method.integrity_test\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">integrity_test</a>()</h4></section></summary><div class='docblock'>See [<code>Hooks::integrity_test</code>].</div></details></div></details>","IntegrityTest","ink_e2e::preset::mock_network::parachain::Contracts"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OffchainWorker%3C%3C%3C%3CT+as+SysConfig%3E::Block+as+HeaderProvider%3E::HeaderT+as+Header%3E::Number%3E-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-OffchainWorker%3C%3C%3C%3CT+as+SysConfig%3E::Block+as+HeaderProvider%3E::HeaderT+as+Header%3E::Number%3E-for-Pallet%3CT%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T&gt; OffchainWorker&lt;&lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number&gt; for Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.offchain_worker\" class=\"method trait-impl\"><a href=\"#method.offchain_worker\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">offchain_worker</a>(\n    n: &lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number,\n)</h4></section></summary><div class='docblock'>This function is being called after every block import (when fully synced). <a>Read more</a></div></details></div></details>","OffchainWorker<<<<T as Config>::Block as HeaderProvider>::HeaderT as Header>::Number>","ink_e2e::preset::mock_network::parachain::Contracts"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OnFinalize%3C%3C%3C%3CT+as+SysConfig%3E::Block+as+HeaderProvider%3E::HeaderT+as+Header%3E::Number%3E-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-OnFinalize%3C%3C%3C%3CT+as+SysConfig%3E::Block+as+HeaderProvider%3E::HeaderT+as+Header%3E::Number%3E-for-Pallet%3CT%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T&gt; OnFinalize&lt;&lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number&gt; for Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_finalize\" class=\"method trait-impl\"><a href=\"#method.on_finalize\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">on_finalize</a>(\n    n: &lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number,\n)</h4></section></summary><div class='docblock'>See [<code>Hooks::on_finalize</code>].</div></details></div></details>","OnFinalize<<<<T as Config>::Block as HeaderProvider>::HeaderT as Header>::Number>","ink_e2e::preset::mock_network::parachain::Contracts"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OnGenesis-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-OnGenesis-for-Pallet%3CT%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T&gt; OnGenesis for Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_genesis\" class=\"method trait-impl\"><a href=\"#method.on_genesis\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">on_genesis</a>()</h4></section></summary><div class='docblock'>Something that should happen at genesis.</div></details></div></details>","OnGenesis","ink_e2e::preset::mock_network::parachain::Contracts"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OnIdle%3C%3C%3C%3CT+as+SysConfig%3E::Block+as+HeaderProvider%3E::HeaderT+as+Header%3E::Number%3E-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-OnIdle%3C%3C%3C%3CT+as+SysConfig%3E::Block+as+HeaderProvider%3E::HeaderT+as+Header%3E::Number%3E-for-Pallet%3CT%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T&gt; OnIdle&lt;&lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number&gt; for Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_idle\" class=\"method trait-impl\"><a href=\"#method.on_idle\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">on_idle</a>(\n    n: &lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number,\n    remaining_weight: <a class=\"struct\" href=\"ink_e2e/struct.Weight.html\" title=\"struct ink_e2e::Weight\">Weight</a>,\n) -&gt; <a class=\"struct\" href=\"ink_e2e/struct.Weight.html\" title=\"struct ink_e2e::Weight\">Weight</a></h4></section></summary><div class='docblock'>See [<code>Hooks::on_idle</code>].</div></details></div></details>","OnIdle<<<<T as Config>::Block as HeaderProvider>::HeaderT as Header>::Number>","ink_e2e::preset::mock_network::parachain::Contracts"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OnInitialize%3C%3C%3C%3CT+as+SysConfig%3E::Block+as+HeaderProvider%3E::HeaderT+as+Header%3E::Number%3E-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-OnInitialize%3C%3C%3C%3CT+as+SysConfig%3E::Block+as+HeaderProvider%3E::HeaderT+as+Header%3E::Number%3E-for-Pallet%3CT%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T&gt; OnInitialize&lt;&lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number&gt; for Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_initialize\" class=\"method trait-impl\"><a href=\"#method.on_initialize\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">on_initialize</a>(\n    n: &lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number,\n) -&gt; <a class=\"struct\" href=\"ink_e2e/struct.Weight.html\" title=\"struct ink_e2e::Weight\">Weight</a></h4></section></summary><div class='docblock'>See [<code>Hooks::on_initialize</code>].</div></details></div></details>","OnInitialize<<<<T as Config>::Block as HeaderProvider>::HeaderT as Header>::Number>","ink_e2e::preset::mock_network::parachain::Contracts"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OnPoll%3C%3C%3C%3CT+as+SysConfig%3E::Block+as+HeaderProvider%3E::HeaderT+as+Header%3E::Number%3E-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-OnPoll%3C%3C%3C%3CT+as+SysConfig%3E::Block+as+HeaderProvider%3E::HeaderT+as+Header%3E::Number%3E-for-Pallet%3CT%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T&gt; OnPoll&lt;&lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number&gt; for Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_poll\" class=\"method trait-impl\"><a href=\"#method.on_poll\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">on_poll</a>(\n    n: &lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number,\n    weight: &amp;mut WeightMeter,\n)</h4></section></summary><div class='docblock'>Code to execute every now and then at the beginning of the block after inherent application. <a>Read more</a></div></details></div></details>","OnPoll<<<<T as Config>::Block as HeaderProvider>::HeaderT as Header>::Number>","ink_e2e::preset::mock_network::parachain::Contracts"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OnRuntimeUpgrade-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-OnRuntimeUpgrade-for-Pallet%3CT%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T&gt; OnRuntimeUpgrade for Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_runtime_upgrade\" class=\"method trait-impl\"><a href=\"#method.on_runtime_upgrade\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">on_runtime_upgrade</a>() -&gt; <a class=\"struct\" href=\"ink_e2e/struct.Weight.html\" title=\"struct ink_e2e::Weight\">Weight</a></h4></section></summary><div class='docblock'>See [<code>Hooks::on_runtime_upgrade</code>].</div></details></div></details>","OnRuntimeUpgrade","ink_e2e::preset::mock_network::parachain::Contracts"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-Pallet%3CT%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T&gt; Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,\n    &lt;&lt;T as Config&gt;::Currency as Inspect&lt;&lt;T as Config&gt;::AccountId&gt;&gt;::Balance: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;U256&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;U256&gt; + <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/bounds/trait.Bounded.html\" title=\"trait num_traits::bounds::Bounded\">Bounded</a>,\n    &lt;&lt;T as Config&gt;::Time as Time&gt;::Moment: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;U256&gt;,\n    &lt;T as Config&gt;::Hash: IsType&lt;H256&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bare_call\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">bare_call</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    dest: H160,\n    value: &lt;&lt;T as Config&gt;::Currency as Inspect&lt;&lt;T as Config&gt;::AccountId&gt;&gt;::Balance,\n    gas_limit: <a class=\"struct\" href=\"ink_e2e/struct.Weight.html\" title=\"struct ink_e2e::Weight\">Weight</a>,\n    storage_deposit_limit: DepositLimit&lt;&lt;&lt;T as Config&gt;::Currency as Inspect&lt;&lt;T as Config&gt;::AccountId&gt;&gt;::Balance&gt;,\n    data: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.86.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.u8.html\">u8</a>&gt;,\n) -&gt; ContractResult&lt;ExecReturnValue, &lt;&lt;T as Config&gt;::Currency as Inspect&lt;&lt;T as Config&gt;::AccountId&gt;&gt;::Balance&gt;</h4></section></summary><div class=\"docblock\"><p>A generalized version of [<code>Self::call</code>].</p>\n<p>Identical to [<code>Self::call</code>] but tailored towards being called by other code within the\nruntime as opposed to from an extrinsic. It returns more information and allows the\nenablement of features that are not suitable for an extrinsic (debugging, event\ncollection).</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bare_instantiate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">bare_instantiate</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    value: &lt;&lt;T as Config&gt;::Currency as Inspect&lt;&lt;T as Config&gt;::AccountId&gt;&gt;::Balance,\n    gas_limit: <a class=\"struct\" href=\"ink_e2e/struct.Weight.html\" title=\"struct ink_e2e::Weight\">Weight</a>,\n    storage_deposit_limit: DepositLimit&lt;&lt;&lt;T as Config&gt;::Currency as Inspect&lt;&lt;T as Config&gt;::AccountId&gt;&gt;::Balance&gt;,\n    code: Code,\n    data: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.86.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.u8.html\">u8</a>&gt;,\n    salt: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.array.html\">32</a>]&gt;,\n) -&gt; ContractResult&lt;InstantiateReturnValue, &lt;&lt;T as Config&gt;::Currency as Inspect&lt;&lt;T as Config&gt;::AccountId&gt;&gt;::Balance&gt;</h4></section></summary><div class=\"docblock\"><p>A generalized version of [<code>Self::instantiate</code>] or [<code>Self::instantiate_with_code</code>].</p>\n<p>Identical to [<code>Self::instantiate</code>] or [<code>Self::instantiate_with_code</code>] but tailored towards\nbeing called by other code within the runtime as opposed to from an extrinsic. It returns\nmore information to the caller useful to estimate the cost of the operation.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bare_eth_transact\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">bare_eth_transact</a>(\n    tx: GenericTransaction,\n    gas_limit: <a class=\"struct\" href=\"ink_e2e/struct.Weight.html\" title=\"struct ink_e2e::Weight\">Weight</a>,\n    tx_fee: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(Call&lt;T&gt;, DispatchInfo) -&gt; &lt;&lt;T as Config&gt;::Currency as Inspect&lt;&lt;T as Config&gt;::AccountId&gt;&gt;::Balance,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;EthTransactInfo&lt;&lt;&lt;T as Config&gt;::Currency as Inspect&lt;&lt;T as Config&gt;::AccountId&gt;&gt;::Balance&gt;, EthTransactError&gt;<div class=\"where\">where\n    &lt;T as Config&gt;::RuntimeCall: Dispatchable&lt;Info = DispatchInfo&gt;,\n    &lt;T as Config&gt;::RuntimeCall: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;Call&lt;T&gt;&gt; + Encode,\n    &lt;T as Config&gt;::Nonce: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;U256&gt;,\n    &lt;T as Config&gt;::Hash: IsType&lt;H256&gt;,</div></h4></section></summary><div class=\"docblock\"><p>A version of [<code>Self::eth_transact</code>] used to dry-run Ethereum calls.</p>\n<h5 id=\"parameters\"><a class=\"doc-anchor\" href=\"#parameters\">ยง</a>Parameters</h5>\n<ul>\n<li><code>tx</code>: The Ethereum transaction to simulate.</li>\n<li><code>gas_limit</code>: The gas limit enforced during contract execution.</li>\n<li><code>tx_fee</code>: A function that returns the fee for the given call and dispatch info.</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.evm_balance\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">evm_balance</a>(address: &amp;H160) -&gt; U256</h4></section></summary><div class=\"docblock\"><p>Get the balance with EVM decimals of the given <code>address</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.evm_fee_to_gas\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">evm_fee_to_gas</a>(\n    fee: &lt;&lt;T as Config&gt;::Currency as Inspect&lt;&lt;T as Config&gt;::AccountId&gt;&gt;::Balance,\n) -&gt; U256</h4></section></summary><div class=\"docblock\"><p>Convert a substrate fee into a gas value, using the fixed <code>GAS_PRICE</code>.\nThe gas is calculated as <code>fee / GAS_PRICE</code>, rounded up to the nearest integer.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.evm_gas_from_weight\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">evm_gas_from_weight</a>(weight: <a class=\"struct\" href=\"ink_e2e/struct.Weight.html\" title=\"struct ink_e2e::Weight\">Weight</a>) -&gt; U256</h4></section></summary><div class=\"docblock\"><p>Convert a weight to a gas value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.evm_block_gas_limit\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">evm_block_gas_limit</a>() -&gt; U256</h4></section></summary><div class=\"docblock\"><p>Get the block gas limit.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.evm_gas_price\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">evm_gas_price</a>() -&gt; U256</h4></section></summary><div class=\"docblock\"><p>Get the gas price.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bare_upload_code\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">bare_upload_code</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    code: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.86.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.u8.html\">u8</a>&gt;,\n    storage_deposit_limit: &lt;&lt;T as Config&gt;::Currency as Inspect&lt;&lt;T as Config&gt;::AccountId&gt;&gt;::Balance,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;CodeUploadReturnValue&lt;&lt;&lt;T as Config&gt;::Currency as Inspect&lt;&lt;T as Config&gt;::AccountId&gt;&gt;::Balance&gt;, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>A generalized version of [<code>Self::upload_code</code>].</p>\n<p>It is identical to [<code>Self::upload_code</code>] and only differs in the information it returns.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_storage\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">get_storage</a>(\n    address: H160,\n    key: [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.array.html\">32</a>],\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.86.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.u8.html\">u8</a>&gt;&gt;, ContractAccessError&gt;</h4></section></summary><div class=\"docblock\"><p>Query storage of a specified contract under a specified key.</p>\n</div></details></div></details>",0,"ink_e2e::preset::mock_network::parachain::Contracts"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-Pallet%3CT%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T&gt; Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,\n    &lt;&lt;T as Config&gt;::Currency as Inspect&lt;&lt;T as Config&gt;::AccountId&gt;&gt;::Balance: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;U256&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;U256&gt;,\n    &lt;&lt;T as Config&gt;::Time as Time&gt;::Moment: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;U256&gt;,\n    &lt;T as Config&gt;::Hash: IsType&lt;H256&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eth_transact\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">eth_transact</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    payload: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.86.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.u8.html\">u8</a>&gt;,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;PostDispatchInfo, DispatchErrorWithPostInfo&lt;PostDispatchInfo&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>A raw EVM transaction, typically dispatched by an Ethereum JSON-RPC server.</p>\n<h5 id=\"parameters\"><a class=\"doc-anchor\" href=\"#parameters\">ยง</a>Parameters</h5>\n<ul>\n<li><code>payload</code>: The encoded [<code>crate::evm::TransactionSigned</code>].</li>\n<li><code>gas_limit</code>: The gas limit enforced during contract execution.</li>\n<li><code>storage_deposit_limit</code>: The maximum balance that can be charged to the caller for\nstorage usage.</li>\n</ul>\n<h5 id=\"note\"><a class=\"doc-anchor\" href=\"#note\">ยง</a>Note</h5>\n<p>This call cannot be dispatched directly; attempting to do so will result in a failed\ntransaction. It serves as a wrapper for an Ethereum transaction. When submitted, the\nruntime converts it into a [<code>sp_runtime::generic::CheckedExtrinsic</code>] by recovering the\nsigner and validating the transaction.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.call\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">call</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    dest: H160,\n    value: &lt;&lt;T as Config&gt;::Currency as Inspect&lt;&lt;T as Config&gt;::AccountId&gt;&gt;::Balance,\n    gas_limit: <a class=\"struct\" href=\"ink_e2e/struct.Weight.html\" title=\"struct ink_e2e::Weight\">Weight</a>,\n    storage_deposit_limit: &lt;&lt;T as Config&gt;::Currency as Inspect&lt;&lt;T as Config&gt;::AccountId&gt;&gt;::Balance,\n    data: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.86.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.u8.html\">u8</a>&gt;,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;PostDispatchInfo, DispatchErrorWithPostInfo&lt;PostDispatchInfo&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Makes a call to an account, optionally transferring some balance.</p>\n<h5 id=\"parameters-1\"><a class=\"doc-anchor\" href=\"#parameters-1\">ยง</a>Parameters</h5>\n<ul>\n<li>\n<p><code>dest</code>: Address of the contract to call.</p>\n</li>\n<li>\n<p><code>value</code>: The balance to transfer from the <code>origin</code> to <code>dest</code>.</p>\n</li>\n<li>\n<p><code>gas_limit</code>: The gas limit enforced when executing the constructor.</p>\n</li>\n<li>\n<p><code>storage_deposit_limit</code>: The maximum amount of balance that can be charged from the\ncaller to pay for the storage consumed.</p>\n</li>\n<li>\n<p><code>data</code>: The input data to pass to the contract.</p>\n</li>\n<li>\n<p>If the account is a smart-contract account, the associated code will be\nexecuted and any value will be transferred.</p>\n</li>\n<li>\n<p>If the account is a regular account, any value will be transferred.</p>\n</li>\n<li>\n<p>If no account exists and the call value is not less than <code>existential_deposit</code>,\na regular account will be created and any value will be transferred.</p>\n</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.instantiate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">instantiate</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    value: &lt;&lt;T as Config&gt;::Currency as Inspect&lt;&lt;T as Config&gt;::AccountId&gt;&gt;::Balance,\n    gas_limit: <a class=\"struct\" href=\"ink_e2e/struct.Weight.html\" title=\"struct ink_e2e::Weight\">Weight</a>,\n    storage_deposit_limit: &lt;&lt;T as Config&gt;::Currency as Inspect&lt;&lt;T as Config&gt;::AccountId&gt;&gt;::Balance,\n    code_hash: H256,\n    data: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.86.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.u8.html\">u8</a>&gt;,\n    salt: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.array.html\">32</a>]&gt;,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;PostDispatchInfo, DispatchErrorWithPostInfo&lt;PostDispatchInfo&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Instantiates a contract from a previously deployed wasm binary.</p>\n<p>This function is identical to [<code>Self::instantiate_with_code</code>] but without the\ncode deployment step. Instead, the <code>code_hash</code> of an on-chain deployed wasm binary\nmust be supplied.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.instantiate_with_code\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">instantiate_with_code</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    value: &lt;&lt;T as Config&gt;::Currency as Inspect&lt;&lt;T as Config&gt;::AccountId&gt;&gt;::Balance,\n    gas_limit: <a class=\"struct\" href=\"ink_e2e/struct.Weight.html\" title=\"struct ink_e2e::Weight\">Weight</a>,\n    storage_deposit_limit: &lt;&lt;T as Config&gt;::Currency as Inspect&lt;&lt;T as Config&gt;::AccountId&gt;&gt;::Balance,\n    code: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.86.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.u8.html\">u8</a>&gt;,\n    data: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.86.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.u8.html\">u8</a>&gt;,\n    salt: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.array.html\">32</a>]&gt;,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;PostDispatchInfo, DispatchErrorWithPostInfo&lt;PostDispatchInfo&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Instantiates a new contract from the supplied <code>code</code> optionally transferring\nsome balance.</p>\n<p>This dispatchable has the same effect as calling [<code>Self::upload_code</code>] +\n[<code>Self::instantiate</code>]. Bundling them together provides efficiency gains. Please\nalso check the documentation of [<code>Self::upload_code</code>].</p>\n<h5 id=\"parameters-2\"><a class=\"doc-anchor\" href=\"#parameters-2\">ยง</a>Parameters</h5>\n<ul>\n<li><code>value</code>: The balance to transfer from the <code>origin</code> to the newly created contract.</li>\n<li><code>gas_limit</code>: The gas limit enforced when executing the constructor.</li>\n<li><code>storage_deposit_limit</code>: The maximum amount of balance that can be charged/reserved\nfrom the caller to pay for the storage consumed.</li>\n<li><code>code</code>: The contract code to deploy in raw bytes.</li>\n<li><code>data</code>: The input data to pass to the contract constructor.</li>\n<li><code>salt</code>: Used for the address derivation. If <code>Some</code> is supplied then <code>CREATE2</code>\nsemantics are used. If <code>None</code> then <code>CRATE1</code> is used.</li>\n</ul>\n<p>Instantiation is executed as follows:</p>\n<ul>\n<li>The supplied <code>code</code> is deployed, and a <code>code_hash</code> is created for that code.</li>\n<li>If the <code>code_hash</code> already exists on the chain the underlying <code>code</code> will be shared.</li>\n<li>The destination address is computed based on the sender, code_hash and the salt.</li>\n<li>The smart-contract account is created at the computed address.</li>\n<li>The <code>value</code> is transferred to the new account.</li>\n<li>The <code>deploy</code> function is executed in the context of the newly-created account.</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.upload_code\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">upload_code</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    code: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.86.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.u8.html\">u8</a>&gt;,\n    storage_deposit_limit: &lt;&lt;T as Config&gt;::Currency as Inspect&lt;&lt;T as Config&gt;::AccountId&gt;&gt;::Balance,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Upload new <code>code</code> without instantiating a contract from it.</p>\n<p>If the code does not already exist a deposit is reserved from the caller\nand unreserved only when [<code>Self::remove_code</code>] is called. The size of the reserve\ndepends on the size of the supplied <code>code</code>.</p>\n<h5 id=\"note-1\"><a class=\"doc-anchor\" href=\"#note-1\">ยง</a>Note</h5>\n<p>Anyone can instantiate a contract from any uploaded code and thus prevent its removal.\nTo avoid this situation a constructor could employ access control so that it can\nonly be instantiated by permissioned entities. The same is true when uploading\nthrough [<code>Self::instantiate_with_code</code>].</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.remove_code\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">remove_code</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    code_hash: H256,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;PostDispatchInfo, DispatchErrorWithPostInfo&lt;PostDispatchInfo&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Remove the code stored under <code>code_hash</code> and refund the deposit to its owner.</p>\n<p>A code can only be removed by its original uploader (its owner) and only if it is\nnot used by any contract.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set_code\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">set_code</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    dest: H160,\n    code_hash: H256,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Privileged function that changes the code of an existing contract.</p>\n<p>This takes care of updating refcounts and all other necessary operations. Returns\nan error if either the <code>code_hash</code> or <code>dest</code> do not exist.</p>\n<h5 id=\"note-2\"><a class=\"doc-anchor\" href=\"#note-2\">ยง</a>Note</h5>\n<p>This does <strong>not</strong> change the address of the contract in question. This means\nthat the contract address is no longer derived from its code hash after calling\nthis dispatchable.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.map_account\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">map_account</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Register the callers account id so that it can be used in contract interactions.</p>\n<p>This will error if the origin is already mapped or is a eth native <code>Address20</code>. It will\ntake a deposit that can be released by calling [<code>Self::unmap_account</code>].</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.unmap_account\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">unmap_account</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Unregister the callers account id in order to free the deposit.</p>\n<p>There is no reason to ever call this function other than freeing up the deposit.\nThis is only useful when the account should no longer be used.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.dispatch_as_fallback_account\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">dispatch_as_fallback_account</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    call: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.86.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;&lt;T as Config&gt;::RuntimeCall&gt;,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;PostDispatchInfo, DispatchErrorWithPostInfo&lt;PostDispatchInfo&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Dispatch an <code>call</code> with the origin set to the callers fallback address.</p>\n<p>Every <code>AccountId32</code> can control its corresponding fallback account. The fallback account\nis the <code>AccountId20</code> with the last 12 bytes set to <code>0xEE</code>. This is essentially a\nrecovery function in case an <code>AccountId20</code> was used without creating a mapping first.</p>\n</div></details></div></details>",0,"ink_e2e::preset::mock_network::parachain::Contracts"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PalletInfoAccess-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-PalletInfoAccess-for-Pallet%3CT%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T&gt; PalletInfoAccess for Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.index\" class=\"method trait-impl\"><a href=\"#method.index\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">index</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Index of the pallet as configured in the runtime.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.name\" class=\"method trait-impl\"><a href=\"#method.name\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">name</a>() -&gt; &amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.str.html\">str</a></h4></section></summary><div class='docblock'>Name of the pallet as configured in the runtime.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.name_hash\" class=\"method trait-impl\"><a href=\"#method.name_hash\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">name_hash</a>() -&gt; [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.array.html\">16</a>]</h4></section></summary><div class='docblock'>Two128 hash of name.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.module_name\" class=\"method trait-impl\"><a href=\"#method.module_name\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">module_name</a>() -&gt; &amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.str.html\">str</a></h4></section></summary><div class='docblock'>Name of the Rust module containing the pallet.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.crate_version\" class=\"method trait-impl\"><a href=\"#method.crate_version\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">crate_version</a>() -&gt; CrateVersion</h4></section></summary><div class='docblock'>Version of the crate containing the pallet.</div></details></div></details>","PalletInfoAccess","ink_e2e::preset::mock_network::parachain::Contracts"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PalletsInfoAccess-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-PalletsInfoAccess-for-Pallet%3CT%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T&gt; PalletsInfoAccess for Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.count\" class=\"method trait-impl\"><a href=\"#method.count\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">count</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>The number of palletsโ information that this type represents. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.infos\" class=\"method trait-impl\"><a href=\"#method.infos\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">infos</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.86.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;PalletInfoData&gt;</h4></section></summary><div class='docblock'>All of the palletsโ information that this type represents.</div></details></div></details>","PalletsInfoAccess","ink_e2e::preset::mock_network::parachain::Contracts"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-PartialEq-for-Pallet%3CT%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a> for Pallet&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a href=\"#method.eq\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.86.0/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;Pallet&lt;T&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>self</code> and <code>other</code> values to be equal, and is used by <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> ยท <a class=\"src\" href=\"https://doc.rust-lang.org/1.86.0/src/core/cmp.rs.html#261\">Source</a></span><a href=\"#method.ne\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.86.0/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>!=</code>. The default implementation is almost always sufficient,\nand should not be overridden without very good reason.</div></details></div></details>","PartialEq","ink_e2e::preset::mock_network::parachain::Contracts"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageInfoTrait-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-StorageInfoTrait-for-Pallet%3CT%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T&gt; StorageInfoTrait for Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.storage_info\" class=\"method trait-impl\"><a href=\"#method.storage_info\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.86.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","StorageInfoTrait","ink_e2e::preset::mock_network::parachain::Contracts"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ViewFunctionIdPrefix-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-ViewFunctionIdPrefix-for-Pallet%3CT%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T&gt; ViewFunctionIdPrefix for Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.prefix\" class=\"method trait-impl\"><a href=\"#method.prefix\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">prefix</a>() -&gt; [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.array.html\">16</a>]</h4></section></div></details>","ViewFunctionIdPrefix","ink_e2e::preset::mock_network::parachain::Contracts"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-WhitelistedStorageKeys-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-WhitelistedStorageKeys-for-Pallet%3CT%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T&gt; WhitelistedStorageKeys for Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.whitelisted_storage_keys\" class=\"method trait-impl\"><a href=\"#method.whitelisted_storage_keys\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">whitelisted_storage_keys</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.86.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;TrackedStorageKey&gt;</h4></section></summary><div class='docblock'>Returns a <a href=\"https://doc.rust-lang.org/1.86.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\"><code>Vec&lt;TrackedStorageKey&gt;</code></a> indicating the storage keys that\nshould be whitelisted during benchmarking. This means that those keys\nwill be excluded from the benchmarking performance calculation.</div></details></div></details>","WhitelistedStorageKeys","ink_e2e::preset::mock_network::parachain::Contracts"],["<section id=\"impl-Eq-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-Eq-for-Pallet%3CT%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> for Pallet&lt;T&gt;</h3></section>","Eq","ink_e2e::preset::mock_network::parachain::Contracts"]]],["ink_sandbox",[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BeforeAllRuntimeMigrations-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-BeforeAllRuntimeMigrations-for-Pallet%3CT%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T&gt; BeforeAllRuntimeMigrations for Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.before_all_runtime_migrations\" class=\"method trait-impl\"><a href=\"#method.before_all_runtime_migrations\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">before_all_runtime_migrations</a>() -&gt; <a class=\"struct\" href=\"ink_sandbox/struct.Weight.html\" title=\"struct ink_sandbox::Weight\">Weight</a></h4></section></summary><div class='docblock'>Something that should happen before runtime migrations are executed.</div></details></div></details>","BeforeAllRuntimeMigrations","ink_sandbox::macros::construct_runtime::Revive"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Callable%3CT%3E-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-Callable%3CT%3E-for-Pallet%3CT%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T&gt; Callable&lt;T&gt; for Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,\n    &lt;&lt;T as Config&gt;::Currency as Inspect&lt;&lt;T as Config&gt;::AccountId&gt;&gt;::Balance: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;U256&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;U256&gt;,\n    &lt;&lt;T as Config&gt;::Time as Time&gt;::Moment: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;U256&gt;,\n    &lt;T as Config&gt;::Hash: IsType&lt;<a class=\"struct\" href=\"ink_sandbox/struct.H256.html\" title=\"struct ink_sandbox::H256\">H256</a>&gt;,</div></h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.RuntimeCall\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.RuntimeCall\" class=\"anchor\">ยง</a><h4 class=\"code-header\">type <a class=\"associatedtype\">RuntimeCall</a> = Call&lt;T&gt;</h4></section></div></details>","Callable<T>","ink_sandbox::macros::construct_runtime::Revive"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-Clone-for-Pallet%3CT%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for Pallet&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a href=\"#method.clone\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.86.0/core/clone/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; Pallet&lt;T&gt;</h4></section></summary><div class='docblock'>Returns a copy of the value. <a href=\"https://doc.rust-lang.org/1.86.0/core/clone/trait.Clone.html#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> ยท <a class=\"src\" href=\"https://doc.rust-lang.org/1.86.0/src/core/clone.rs.html#174\">Source</a></span><a href=\"#method.clone_from\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.86.0/core/clone/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, source: &amp;Self)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"https://doc.rust-lang.org/1.86.0/core/clone/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","ink_sandbox::macros::construct_runtime::Revive"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-Debug-for-Pallet%3CT%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for Pallet&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a href=\"#method.fmt\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.86.0/core/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, fmt: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.86.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.86.0/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/1.86.0/core/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","ink_sandbox::macros::construct_runtime::Revive"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-DispatchViewFunction-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-DispatchViewFunction-for-Pallet%3CT%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T&gt; DispatchViewFunction for Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.dispatch_view_function\" class=\"method trait-impl\"><a href=\"#method.dispatch_view_function\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">dispatch_view_function</a>&lt;O&gt;(\n    id: &amp;ViewFunctionId,\n    input: &amp;mut &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.u8.html\">u8</a>],\n    output: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.reference.html\">&amp;mut O</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.unit.html\">()</a>, ViewFunctionDispatchError&gt;<div class=\"where\">where\n    O: Output,</div></h4></section></div></details>","DispatchViewFunction","ink_sandbox::macros::construct_runtime::Revive"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-GetStorageVersion-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-GetStorageVersion-for-Pallet%3CT%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T&gt; GetStorageVersion for Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.InCodeStorageVersion\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.InCodeStorageVersion\" class=\"anchor\">ยง</a><h4 class=\"code-header\">type <a class=\"associatedtype\">InCodeStorageVersion</a> = StorageVersion</h4></section></summary><div class='docblock'>This type is generated by the <a href=\"crate::pallet\"><code>pallet</code></a> macro. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.in_code_storage_version\" class=\"method trait-impl\"><a href=\"#method.in_code_storage_version\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">in_code_storage_version</a>() -&gt; &lt;Pallet&lt;T&gt; as GetStorageVersion&gt;::InCodeStorageVersion</h4></section></summary><div class='docblock'>Returns the in-code storage version as specified in the\n<a href=\"crate::pallet_macros::storage_version\"><code>storage_version</code></a> attribute, or\n[<code>NoStorageVersionSet</code>] if the attribute is missing.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_chain_storage_version\" class=\"method trait-impl\"><a href=\"#method.on_chain_storage_version\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">on_chain_storage_version</a>() -&gt; StorageVersion</h4></section></summary><div class='docblock'>Returns the storage version of the pallet as last set in the actual on-chain storage.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.current_storage_version\" class=\"method trait-impl\"><a href=\"#method.current_storage_version\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">current_storage_version</a>() -&gt; Self::InCodeStorageVersion</h4></section></summary><span class=\"item-info\"><div class=\"stab deprecated\"><span class=\"emoji\">๐</span><span>Deprecated: This method has been renamed to <code>in_code_storage_version</code> and will be removed after March 2024.</span></div></span><div class='docblock'>DEPRECATED: Use [<code>Self::current_storage_version</code>] instead. <a>Read more</a></div></details></div></details>","GetStorageVersion","ink_sandbox::macros::construct_runtime::Revive"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Hooks%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+Header%3E::Number%3E-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-Hooks%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+Header%3E::Number%3E-for-Pallet%3CT%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T&gt; Hooks&lt;&lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number&gt; for Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_idle\" class=\"method trait-impl\"><a href=\"#method.on_idle\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">on_idle</a>(\n    _block: &lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number,\n    limit: <a class=\"struct\" href=\"ink_sandbox/struct.Weight.html\" title=\"struct ink_sandbox::Weight\">Weight</a>,\n) -&gt; <a class=\"struct\" href=\"ink_sandbox/struct.Weight.html\" title=\"struct ink_sandbox::Weight\">Weight</a></h4></section></summary><div class='docblock'>Hook to consume a blockโs idle time. This will run when the block is being finalized (before\n[<code>Hooks::on_finalize</code>]). <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.integrity_test\" class=\"method trait-impl\"><a href=\"#method.integrity_test\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">integrity_test</a>()</h4></section></summary><div class='docblock'>Check the integrity of this palletโs configuration. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_initialize\" class=\"method trait-impl\"><a href=\"#method.on_initialize\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">on_initialize</a>(_n: BlockNumber) -&gt; <a class=\"struct\" href=\"ink_sandbox/struct.Weight.html\" title=\"struct ink_sandbox::Weight\">Weight</a></h4></section></summary><div class='docblock'>Block initialization hook. This is called at the very beginning of block execution. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_finalize\" class=\"method trait-impl\"><a href=\"#method.on_finalize\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">on_finalize</a>(_n: BlockNumber)</h4></section></summary><div class='docblock'>Block finalization hook. This is called at the very end of block execution. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_poll\" class=\"method trait-impl\"><a href=\"#method.on_poll\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">on_poll</a>(_n: BlockNumber, _weight: &amp;mut WeightMeter)</h4></section></summary><div class='docblock'>A hook to run logic after inherent application. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_runtime_upgrade\" class=\"method trait-impl\"><a href=\"#method.on_runtime_upgrade\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">on_runtime_upgrade</a>() -&gt; <a class=\"struct\" href=\"ink_sandbox/struct.Weight.html\" title=\"struct ink_sandbox::Weight\">Weight</a></h4></section></summary><div class='docblock'>Hook executed when a code change (aka. a โruntime upgradeโ) is detected by the FRAME\n<code>Executive</code> pallet. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.offchain_worker\" class=\"method trait-impl\"><a href=\"#method.offchain_worker\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">offchain_worker</a>(_n: BlockNumber)</h4></section></summary><div class='docblock'>Implementing this function on a pallet allows you to perform long-running tasks that are\ndispatched as separate threads, and entirely independent of the main blockchain execution. <a>Read more</a></div></details></div></details>","Hooks<<<<T as Config>::Block as HeaderProvider>::HeaderT as Header>::Number>","ink_sandbox::macros::construct_runtime::Revive"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IntegrityTest-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-IntegrityTest-for-Pallet%3CT%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T&gt; IntegrityTest for Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.integrity_test\" class=\"method trait-impl\"><a href=\"#method.integrity_test\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">integrity_test</a>()</h4></section></summary><div class='docblock'>See [<code>Hooks::integrity_test</code>].</div></details></div></details>","IntegrityTest","ink_sandbox::macros::construct_runtime::Revive"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OffchainWorker%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+Header%3E::Number%3E-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-OffchainWorker%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+Header%3E::Number%3E-for-Pallet%3CT%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T&gt; OffchainWorker&lt;&lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number&gt; for Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.offchain_worker\" class=\"method trait-impl\"><a href=\"#method.offchain_worker\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">offchain_worker</a>(\n    n: &lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number,\n)</h4></section></summary><div class='docblock'>This function is being called after every block import (when fully synced). <a>Read more</a></div></details></div></details>","OffchainWorker<<<<T as Config>::Block as HeaderProvider>::HeaderT as Header>::Number>","ink_sandbox::macros::construct_runtime::Revive"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OnFinalize%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+Header%3E::Number%3E-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-OnFinalize%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+Header%3E::Number%3E-for-Pallet%3CT%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T&gt; OnFinalize&lt;&lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number&gt; for Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_finalize\" class=\"method trait-impl\"><a href=\"#method.on_finalize\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">on_finalize</a>(\n    n: &lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number,\n)</h4></section></summary><div class='docblock'>See [<code>Hooks::on_finalize</code>].</div></details></div></details>","OnFinalize<<<<T as Config>::Block as HeaderProvider>::HeaderT as Header>::Number>","ink_sandbox::macros::construct_runtime::Revive"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OnGenesis-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-OnGenesis-for-Pallet%3CT%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T&gt; OnGenesis for Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_genesis\" class=\"method trait-impl\"><a href=\"#method.on_genesis\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">on_genesis</a>()</h4></section></summary><div class='docblock'>Something that should happen at genesis.</div></details></div></details>","OnGenesis","ink_sandbox::macros::construct_runtime::Revive"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OnIdle%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+Header%3E::Number%3E-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-OnIdle%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+Header%3E::Number%3E-for-Pallet%3CT%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T&gt; OnIdle&lt;&lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number&gt; for Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_idle\" class=\"method trait-impl\"><a href=\"#method.on_idle\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">on_idle</a>(\n    n: &lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number,\n    remaining_weight: <a class=\"struct\" href=\"ink_sandbox/struct.Weight.html\" title=\"struct ink_sandbox::Weight\">Weight</a>,\n) -&gt; <a class=\"struct\" href=\"ink_sandbox/struct.Weight.html\" title=\"struct ink_sandbox::Weight\">Weight</a></h4></section></summary><div class='docblock'>See [<code>Hooks::on_idle</code>].</div></details></div></details>","OnIdle<<<<T as Config>::Block as HeaderProvider>::HeaderT as Header>::Number>","ink_sandbox::macros::construct_runtime::Revive"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OnInitialize%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+Header%3E::Number%3E-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-OnInitialize%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+Header%3E::Number%3E-for-Pallet%3CT%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T&gt; OnInitialize&lt;&lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number&gt; for Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_initialize\" class=\"method trait-impl\"><a href=\"#method.on_initialize\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">on_initialize</a>(\n    n: &lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number,\n) -&gt; <a class=\"struct\" href=\"ink_sandbox/struct.Weight.html\" title=\"struct ink_sandbox::Weight\">Weight</a></h4></section></summary><div class='docblock'>See [<code>Hooks::on_initialize</code>].</div></details></div></details>","OnInitialize<<<<T as Config>::Block as HeaderProvider>::HeaderT as Header>::Number>","ink_sandbox::macros::construct_runtime::Revive"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OnPoll%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+Header%3E::Number%3E-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-OnPoll%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+Header%3E::Number%3E-for-Pallet%3CT%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T&gt; OnPoll&lt;&lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number&gt; for Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_poll\" class=\"method trait-impl\"><a href=\"#method.on_poll\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">on_poll</a>(\n    n: &lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number,\n    weight: &amp;mut WeightMeter,\n)</h4></section></summary><div class='docblock'>Code to execute every now and then at the beginning of the block after inherent application. <a>Read more</a></div></details></div></details>","OnPoll<<<<T as Config>::Block as HeaderProvider>::HeaderT as Header>::Number>","ink_sandbox::macros::construct_runtime::Revive"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OnRuntimeUpgrade-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-OnRuntimeUpgrade-for-Pallet%3CT%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T&gt; OnRuntimeUpgrade for Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_runtime_upgrade\" class=\"method trait-impl\"><a href=\"#method.on_runtime_upgrade\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">on_runtime_upgrade</a>() -&gt; <a class=\"struct\" href=\"ink_sandbox/struct.Weight.html\" title=\"struct ink_sandbox::Weight\">Weight</a></h4></section></summary><div class='docblock'>See [<code>Hooks::on_runtime_upgrade</code>].</div></details></div></details>","OnRuntimeUpgrade","ink_sandbox::macros::construct_runtime::Revive"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-Pallet%3CT%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T&gt; Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,\n    &lt;&lt;T as Config&gt;::Currency as Inspect&lt;&lt;T as Config&gt;::AccountId&gt;&gt;::Balance: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;U256&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;U256&gt; + <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/bounds/trait.Bounded.html\" title=\"trait num_traits::bounds::Bounded\">Bounded</a>,\n    &lt;&lt;T as Config&gt;::Time as Time&gt;::Moment: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;U256&gt;,\n    &lt;T as Config&gt;::Hash: IsType&lt;<a class=\"struct\" href=\"ink_sandbox/struct.H256.html\" title=\"struct ink_sandbox::H256\">H256</a>&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bare_call\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">bare_call</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    dest: H160,\n    value: &lt;&lt;T as Config&gt;::Currency as Inspect&lt;&lt;T as Config&gt;::AccountId&gt;&gt;::Balance,\n    gas_limit: <a class=\"struct\" href=\"ink_sandbox/struct.Weight.html\" title=\"struct ink_sandbox::Weight\">Weight</a>,\n    storage_deposit_limit: DepositLimit&lt;&lt;&lt;T as Config&gt;::Currency as Inspect&lt;&lt;T as Config&gt;::AccountId&gt;&gt;::Balance&gt;,\n    data: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.86.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.u8.html\">u8</a>&gt;,\n) -&gt; ContractResult&lt;ExecReturnValue, &lt;&lt;T as Config&gt;::Currency as Inspect&lt;&lt;T as Config&gt;::AccountId&gt;&gt;::Balance&gt;</h4></section></summary><div class=\"docblock\"><p>A generalized version of [<code>Self::call</code>].</p>\n<p>Identical to [<code>Self::call</code>] but tailored towards being called by other code within the\nruntime as opposed to from an extrinsic. It returns more information and allows the\nenablement of features that are not suitable for an extrinsic (debugging, event\ncollection).</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bare_instantiate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">bare_instantiate</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    value: &lt;&lt;T as Config&gt;::Currency as Inspect&lt;&lt;T as Config&gt;::AccountId&gt;&gt;::Balance,\n    gas_limit: <a class=\"struct\" href=\"ink_sandbox/struct.Weight.html\" title=\"struct ink_sandbox::Weight\">Weight</a>,\n    storage_deposit_limit: DepositLimit&lt;&lt;&lt;T as Config&gt;::Currency as Inspect&lt;&lt;T as Config&gt;::AccountId&gt;&gt;::Balance&gt;,\n    code: Code,\n    data: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.86.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.u8.html\">u8</a>&gt;,\n    salt: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.array.html\">32</a>]&gt;,\n) -&gt; ContractResult&lt;InstantiateReturnValue, &lt;&lt;T as Config&gt;::Currency as Inspect&lt;&lt;T as Config&gt;::AccountId&gt;&gt;::Balance&gt;</h4></section></summary><div class=\"docblock\"><p>A generalized version of [<code>Self::instantiate</code>] or [<code>Self::instantiate_with_code</code>].</p>\n<p>Identical to [<code>Self::instantiate</code>] or [<code>Self::instantiate_with_code</code>] but tailored towards\nbeing called by other code within the runtime as opposed to from an extrinsic. It returns\nmore information to the caller useful to estimate the cost of the operation.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bare_eth_transact\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">bare_eth_transact</a>(\n    tx: GenericTransaction,\n    gas_limit: <a class=\"struct\" href=\"ink_sandbox/struct.Weight.html\" title=\"struct ink_sandbox::Weight\">Weight</a>,\n    tx_fee: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(Call&lt;T&gt;, DispatchInfo) -&gt; &lt;&lt;T as Config&gt;::Currency as Inspect&lt;&lt;T as Config&gt;::AccountId&gt;&gt;::Balance,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;EthTransactInfo&lt;&lt;&lt;T as Config&gt;::Currency as Inspect&lt;&lt;T as Config&gt;::AccountId&gt;&gt;::Balance&gt;, EthTransactError&gt;<div class=\"where\">where\n    &lt;T as Config&gt;::RuntimeCall: Dispatchable&lt;Info = DispatchInfo&gt;,\n    &lt;T as Config&gt;::RuntimeCall: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;Call&lt;T&gt;&gt; + Encode,\n    &lt;T as Config&gt;::Nonce: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;U256&gt;,\n    &lt;T as Config&gt;::Hash: IsType&lt;<a class=\"struct\" href=\"ink_sandbox/struct.H256.html\" title=\"struct ink_sandbox::H256\">H256</a>&gt;,</div></h4></section></summary><div class=\"docblock\"><p>A version of [<code>Self::eth_transact</code>] used to dry-run Ethereum calls.</p>\n<h5 id=\"parameters\"><a class=\"doc-anchor\" href=\"#parameters\">ยง</a>Parameters</h5>\n<ul>\n<li><code>tx</code>: The Ethereum transaction to simulate.</li>\n<li><code>gas_limit</code>: The gas limit enforced during contract execution.</li>\n<li><code>tx_fee</code>: A function that returns the fee for the given call and dispatch info.</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.evm_balance\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">evm_balance</a>(address: &amp;H160) -&gt; U256</h4></section></summary><div class=\"docblock\"><p>Get the balance with EVM decimals of the given <code>address</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.evm_fee_to_gas\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">evm_fee_to_gas</a>(\n    fee: &lt;&lt;T as Config&gt;::Currency as Inspect&lt;&lt;T as Config&gt;::AccountId&gt;&gt;::Balance,\n) -&gt; U256</h4></section></summary><div class=\"docblock\"><p>Convert a substrate fee into a gas value, using the fixed <code>GAS_PRICE</code>.\nThe gas is calculated as <code>fee / GAS_PRICE</code>, rounded up to the nearest integer.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.evm_gas_from_weight\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">evm_gas_from_weight</a>(weight: <a class=\"struct\" href=\"ink_sandbox/struct.Weight.html\" title=\"struct ink_sandbox::Weight\">Weight</a>) -&gt; U256</h4></section></summary><div class=\"docblock\"><p>Convert a weight to a gas value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.evm_block_gas_limit\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">evm_block_gas_limit</a>() -&gt; U256</h4></section></summary><div class=\"docblock\"><p>Get the block gas limit.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.evm_gas_price\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">evm_gas_price</a>() -&gt; U256</h4></section></summary><div class=\"docblock\"><p>Get the gas price.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bare_upload_code\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">bare_upload_code</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    code: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.86.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.u8.html\">u8</a>&gt;,\n    storage_deposit_limit: &lt;&lt;T as Config&gt;::Currency as Inspect&lt;&lt;T as Config&gt;::AccountId&gt;&gt;::Balance,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;CodeUploadReturnValue&lt;&lt;&lt;T as Config&gt;::Currency as Inspect&lt;&lt;T as Config&gt;::AccountId&gt;&gt;::Balance&gt;, <a class=\"enum\" href=\"ink_sandbox/enum.DispatchError.html\" title=\"enum ink_sandbox::DispatchError\">DispatchError</a>&gt;</h4></section></summary><div class=\"docblock\"><p>A generalized version of [<code>Self::upload_code</code>].</p>\n<p>It is identical to [<code>Self::upload_code</code>] and only differs in the information it returns.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_storage\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">get_storage</a>(\n    address: H160,\n    key: [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.array.html\">32</a>],\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.86.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.u8.html\">u8</a>&gt;&gt;, ContractAccessError&gt;</h4></section></summary><div class=\"docblock\"><p>Query storage of a specified contract under a specified key.</p>\n</div></details></div></details>",0,"ink_sandbox::macros::construct_runtime::Revive"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-Pallet%3CT%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T&gt; Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,\n    &lt;&lt;T as Config&gt;::Currency as Inspect&lt;&lt;T as Config&gt;::AccountId&gt;&gt;::Balance: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;U256&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;U256&gt;,\n    &lt;&lt;T as Config&gt;::Time as Time&gt;::Moment: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;U256&gt;,\n    &lt;T as Config&gt;::Hash: IsType&lt;<a class=\"struct\" href=\"ink_sandbox/struct.H256.html\" title=\"struct ink_sandbox::H256\">H256</a>&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eth_transact\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">eth_transact</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    payload: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.86.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.u8.html\">u8</a>&gt;,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;PostDispatchInfo, DispatchErrorWithPostInfo&lt;PostDispatchInfo&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>A raw EVM transaction, typically dispatched by an Ethereum JSON-RPC server.</p>\n<h5 id=\"parameters\"><a class=\"doc-anchor\" href=\"#parameters\">ยง</a>Parameters</h5>\n<ul>\n<li><code>payload</code>: The encoded [<code>crate::evm::TransactionSigned</code>].</li>\n<li><code>gas_limit</code>: The gas limit enforced during contract execution.</li>\n<li><code>storage_deposit_limit</code>: The maximum balance that can be charged to the caller for\nstorage usage.</li>\n</ul>\n<h5 id=\"note\"><a class=\"doc-anchor\" href=\"#note\">ยง</a>Note</h5>\n<p>This call cannot be dispatched directly; attempting to do so will result in a failed\ntransaction. It serves as a wrapper for an Ethereum transaction. When submitted, the\nruntime converts it into a [<code>sp_runtime::generic::CheckedExtrinsic</code>] by recovering the\nsigner and validating the transaction.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.call\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">call</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    dest: H160,\n    value: &lt;&lt;T as Config&gt;::Currency as Inspect&lt;&lt;T as Config&gt;::AccountId&gt;&gt;::Balance,\n    gas_limit: <a class=\"struct\" href=\"ink_sandbox/struct.Weight.html\" title=\"struct ink_sandbox::Weight\">Weight</a>,\n    storage_deposit_limit: &lt;&lt;T as Config&gt;::Currency as Inspect&lt;&lt;T as Config&gt;::AccountId&gt;&gt;::Balance,\n    data: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.86.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.u8.html\">u8</a>&gt;,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;PostDispatchInfo, DispatchErrorWithPostInfo&lt;PostDispatchInfo&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Makes a call to an account, optionally transferring some balance.</p>\n<h5 id=\"parameters-1\"><a class=\"doc-anchor\" href=\"#parameters-1\">ยง</a>Parameters</h5>\n<ul>\n<li>\n<p><code>dest</code>: Address of the contract to call.</p>\n</li>\n<li>\n<p><code>value</code>: The balance to transfer from the <code>origin</code> to <code>dest</code>.</p>\n</li>\n<li>\n<p><code>gas_limit</code>: The gas limit enforced when executing the constructor.</p>\n</li>\n<li>\n<p><code>storage_deposit_limit</code>: The maximum amount of balance that can be charged from the\ncaller to pay for the storage consumed.</p>\n</li>\n<li>\n<p><code>data</code>: The input data to pass to the contract.</p>\n</li>\n<li>\n<p>If the account is a smart-contract account, the associated code will be\nexecuted and any value will be transferred.</p>\n</li>\n<li>\n<p>If the account is a regular account, any value will be transferred.</p>\n</li>\n<li>\n<p>If no account exists and the call value is not less than <code>existential_deposit</code>,\na regular account will be created and any value will be transferred.</p>\n</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.instantiate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">instantiate</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    value: &lt;&lt;T as Config&gt;::Currency as Inspect&lt;&lt;T as Config&gt;::AccountId&gt;&gt;::Balance,\n    gas_limit: <a class=\"struct\" href=\"ink_sandbox/struct.Weight.html\" title=\"struct ink_sandbox::Weight\">Weight</a>,\n    storage_deposit_limit: &lt;&lt;T as Config&gt;::Currency as Inspect&lt;&lt;T as Config&gt;::AccountId&gt;&gt;::Balance,\n    code_hash: <a class=\"struct\" href=\"ink_sandbox/struct.H256.html\" title=\"struct ink_sandbox::H256\">H256</a>,\n    data: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.86.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.u8.html\">u8</a>&gt;,\n    salt: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.array.html\">32</a>]&gt;,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;PostDispatchInfo, DispatchErrorWithPostInfo&lt;PostDispatchInfo&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Instantiates a contract from a previously deployed wasm binary.</p>\n<p>This function is identical to [<code>Self::instantiate_with_code</code>] but without the\ncode deployment step. Instead, the <code>code_hash</code> of an on-chain deployed wasm binary\nmust be supplied.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.instantiate_with_code\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">instantiate_with_code</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    value: &lt;&lt;T as Config&gt;::Currency as Inspect&lt;&lt;T as Config&gt;::AccountId&gt;&gt;::Balance,\n    gas_limit: <a class=\"struct\" href=\"ink_sandbox/struct.Weight.html\" title=\"struct ink_sandbox::Weight\">Weight</a>,\n    storage_deposit_limit: &lt;&lt;T as Config&gt;::Currency as Inspect&lt;&lt;T as Config&gt;::AccountId&gt;&gt;::Balance,\n    code: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.86.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.u8.html\">u8</a>&gt;,\n    data: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.86.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.u8.html\">u8</a>&gt;,\n    salt: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.array.html\">32</a>]&gt;,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;PostDispatchInfo, DispatchErrorWithPostInfo&lt;PostDispatchInfo&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Instantiates a new contract from the supplied <code>code</code> optionally transferring\nsome balance.</p>\n<p>This dispatchable has the same effect as calling [<code>Self::upload_code</code>] +\n[<code>Self::instantiate</code>]. Bundling them together provides efficiency gains. Please\nalso check the documentation of [<code>Self::upload_code</code>].</p>\n<h5 id=\"parameters-2\"><a class=\"doc-anchor\" href=\"#parameters-2\">ยง</a>Parameters</h5>\n<ul>\n<li><code>value</code>: The balance to transfer from the <code>origin</code> to the newly created contract.</li>\n<li><code>gas_limit</code>: The gas limit enforced when executing the constructor.</li>\n<li><code>storage_deposit_limit</code>: The maximum amount of balance that can be charged/reserved\nfrom the caller to pay for the storage consumed.</li>\n<li><code>code</code>: The contract code to deploy in raw bytes.</li>\n<li><code>data</code>: The input data to pass to the contract constructor.</li>\n<li><code>salt</code>: Used for the address derivation. If <code>Some</code> is supplied then <code>CREATE2</code>\nsemantics are used. If <code>None</code> then <code>CRATE1</code> is used.</li>\n</ul>\n<p>Instantiation is executed as follows:</p>\n<ul>\n<li>The supplied <code>code</code> is deployed, and a <code>code_hash</code> is created for that code.</li>\n<li>If the <code>code_hash</code> already exists on the chain the underlying <code>code</code> will be shared.</li>\n<li>The destination address is computed based on the sender, code_hash and the salt.</li>\n<li>The smart-contract account is created at the computed address.</li>\n<li>The <code>value</code> is transferred to the new account.</li>\n<li>The <code>deploy</code> function is executed in the context of the newly-created account.</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.upload_code\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">upload_code</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    code: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.86.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.u8.html\">u8</a>&gt;,\n    storage_deposit_limit: &lt;&lt;T as Config&gt;::Currency as Inspect&lt;&lt;T as Config&gt;::AccountId&gt;&gt;::Balance,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.unit.html\">()</a>, <a class=\"enum\" href=\"ink_sandbox/enum.DispatchError.html\" title=\"enum ink_sandbox::DispatchError\">DispatchError</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Upload new <code>code</code> without instantiating a contract from it.</p>\n<p>If the code does not already exist a deposit is reserved from the caller\nand unreserved only when [<code>Self::remove_code</code>] is called. The size of the reserve\ndepends on the size of the supplied <code>code</code>.</p>\n<h5 id=\"note-1\"><a class=\"doc-anchor\" href=\"#note-1\">ยง</a>Note</h5>\n<p>Anyone can instantiate a contract from any uploaded code and thus prevent its removal.\nTo avoid this situation a constructor could employ access control so that it can\nonly be instantiated by permissioned entities. The same is true when uploading\nthrough [<code>Self::instantiate_with_code</code>].</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.remove_code\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">remove_code</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    code_hash: <a class=\"struct\" href=\"ink_sandbox/struct.H256.html\" title=\"struct ink_sandbox::H256\">H256</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;PostDispatchInfo, DispatchErrorWithPostInfo&lt;PostDispatchInfo&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Remove the code stored under <code>code_hash</code> and refund the deposit to its owner.</p>\n<p>A code can only be removed by its original uploader (its owner) and only if it is\nnot used by any contract.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set_code\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">set_code</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    dest: H160,\n    code_hash: <a class=\"struct\" href=\"ink_sandbox/struct.H256.html\" title=\"struct ink_sandbox::H256\">H256</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.unit.html\">()</a>, <a class=\"enum\" href=\"ink_sandbox/enum.DispatchError.html\" title=\"enum ink_sandbox::DispatchError\">DispatchError</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Privileged function that changes the code of an existing contract.</p>\n<p>This takes care of updating refcounts and all other necessary operations. Returns\nan error if either the <code>code_hash</code> or <code>dest</code> do not exist.</p>\n<h5 id=\"note-2\"><a class=\"doc-anchor\" href=\"#note-2\">ยง</a>Note</h5>\n<p>This does <strong>not</strong> change the address of the contract in question. This means\nthat the contract address is no longer derived from its code hash after calling\nthis dispatchable.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.map_account\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">map_account</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.unit.html\">()</a>, <a class=\"enum\" href=\"ink_sandbox/enum.DispatchError.html\" title=\"enum ink_sandbox::DispatchError\">DispatchError</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Register the callers account id so that it can be used in contract interactions.</p>\n<p>This will error if the origin is already mapped or is a eth native <code>Address20</code>. It will\ntake a deposit that can be released by calling [<code>Self::unmap_account</code>].</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.unmap_account\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">unmap_account</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.unit.html\">()</a>, <a class=\"enum\" href=\"ink_sandbox/enum.DispatchError.html\" title=\"enum ink_sandbox::DispatchError\">DispatchError</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Unregister the callers account id in order to free the deposit.</p>\n<p>There is no reason to ever call this function other than freeing up the deposit.\nThis is only useful when the account should no longer be used.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.dispatch_as_fallback_account\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">dispatch_as_fallback_account</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    call: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.86.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;&lt;T as Config&gt;::RuntimeCall&gt;,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;PostDispatchInfo, DispatchErrorWithPostInfo&lt;PostDispatchInfo&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Dispatch an <code>call</code> with the origin set to the callers fallback address.</p>\n<p>Every <code>AccountId32</code> can control its corresponding fallback account. The fallback account\nis the <code>AccountId20</code> with the last 12 bytes set to <code>0xEE</code>. This is essentially a\nrecovery function in case an <code>AccountId20</code> was used without creating a mapping first.</p>\n</div></details></div></details>",0,"ink_sandbox::macros::construct_runtime::Revive"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PalletInfoAccess-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-PalletInfoAccess-for-Pallet%3CT%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T&gt; PalletInfoAccess for Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.index\" class=\"method trait-impl\"><a href=\"#method.index\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">index</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Index of the pallet as configured in the runtime.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.name\" class=\"method trait-impl\"><a href=\"#method.name\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">name</a>() -&gt; &amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.str.html\">str</a></h4></section></summary><div class='docblock'>Name of the pallet as configured in the runtime.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.name_hash\" class=\"method trait-impl\"><a href=\"#method.name_hash\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">name_hash</a>() -&gt; [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.array.html\">16</a>]</h4></section></summary><div class='docblock'>Two128 hash of name.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.module_name\" class=\"method trait-impl\"><a href=\"#method.module_name\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">module_name</a>() -&gt; &amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.str.html\">str</a></h4></section></summary><div class='docblock'>Name of the Rust module containing the pallet.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.crate_version\" class=\"method trait-impl\"><a href=\"#method.crate_version\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">crate_version</a>() -&gt; CrateVersion</h4></section></summary><div class='docblock'>Version of the crate containing the pallet.</div></details></div></details>","PalletInfoAccess","ink_sandbox::macros::construct_runtime::Revive"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PalletsInfoAccess-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-PalletsInfoAccess-for-Pallet%3CT%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T&gt; PalletsInfoAccess for Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.count\" class=\"method trait-impl\"><a href=\"#method.count\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">count</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>The number of palletsโ information that this type represents. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.infos\" class=\"method trait-impl\"><a href=\"#method.infos\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">infos</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.86.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;PalletInfoData&gt;</h4></section></summary><div class='docblock'>All of the palletsโ information that this type represents.</div></details></div></details>","PalletsInfoAccess","ink_sandbox::macros::construct_runtime::Revive"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-PartialEq-for-Pallet%3CT%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a> for Pallet&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a href=\"#method.eq\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.86.0/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;Pallet&lt;T&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>self</code> and <code>other</code> values to be equal, and is used by <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> ยท <a class=\"src\" href=\"https://doc.rust-lang.org/1.86.0/src/core/cmp.rs.html#261\">Source</a></span><a href=\"#method.ne\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.86.0/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>!=</code>. The default implementation is almost always sufficient,\nand should not be overridden without very good reason.</div></details></div></details>","PartialEq","ink_sandbox::macros::construct_runtime::Revive"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageInfoTrait-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-StorageInfoTrait-for-Pallet%3CT%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T&gt; StorageInfoTrait for Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.storage_info\" class=\"method trait-impl\"><a href=\"#method.storage_info\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.86.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","StorageInfoTrait","ink_sandbox::macros::construct_runtime::Revive"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ViewFunctionIdPrefix-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-ViewFunctionIdPrefix-for-Pallet%3CT%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T&gt; ViewFunctionIdPrefix for Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.prefix\" class=\"method trait-impl\"><a href=\"#method.prefix\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">prefix</a>() -&gt; [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.array.html\">16</a>]</h4></section></div></details>","ViewFunctionIdPrefix","ink_sandbox::macros::construct_runtime::Revive"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-WhitelistedStorageKeys-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-WhitelistedStorageKeys-for-Pallet%3CT%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T&gt; WhitelistedStorageKeys for Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.whitelisted_storage_keys\" class=\"method trait-impl\"><a href=\"#method.whitelisted_storage_keys\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">whitelisted_storage_keys</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.86.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;TrackedStorageKey&gt;</h4></section></summary><div class='docblock'>Returns a <a href=\"https://doc.rust-lang.org/1.86.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\"><code>Vec&lt;TrackedStorageKey&gt;</code></a> indicating the storage keys that\nshould be whitelisted during benchmarking. This means that those keys\nwill be excluded from the benchmarking performance calculation.</div></details></div></details>","WhitelistedStorageKeys","ink_sandbox::macros::construct_runtime::Revive"],["<section id=\"impl-Eq-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-Eq-for-Pallet%3CT%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> for Pallet&lt;T&gt;</h3></section>","Eq","ink_sandbox::macros::construct_runtime::Revive"]]]]);
    if (window.register_type_impls) {
        window.register_type_impls(type_impls);
    } else {
        window.pending_type_impls = type_impls;
    }
})()
//{"start":55,"fragment_lengths":[59736,60937]}