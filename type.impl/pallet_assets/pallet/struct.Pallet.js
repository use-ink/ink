(function() {
    var type_impls = Object.fromEntries([["ink_e2e",[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AccountTouch%3C%3CT+as+Config%3CI%3E%3E::AssetId,+%3CT+as+SysConfig%3E::AccountId%3E-for-Pallet%3CT,+I%3E\" class=\"impl\"><a href=\"#impl-AccountTouch%3C%3CT+as+Config%3CI%3E%3E::AssetId,+%3CT+as+SysConfig%3E::AccountId%3E-for-Pallet%3CT,+I%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, I&gt; AccountTouch&lt;&lt;T as Config&lt;I&gt;&gt;::AssetId, &lt;T as Config&gt;::AccountId&gt; for Pallet&lt;T, I&gt;<div class=\"where\">where\n    T: Config&lt;I&gt;,\n    I: 'static,</div></h3><div class=\"docblock\"><p>Implements [<code>AccountTouch</code>] trait.\nNote that a depositor can be any account, without any specific privilege.\nThis implementation is supposed to be used only for creation of system accounts.</p>\n</div></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Balance\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Balance\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Balance</a> = &lt;&lt;T as Config&lt;I&gt;&gt;::Currency as Currency&lt;&lt;T as Config&gt;::AccountId&gt;&gt;::Balance</h4></section></summary><div class='docblock'>The type for currency units of the deposit.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.deposit_required\" class=\"method trait-impl\"><a href=\"#method.deposit_required\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">deposit_required</a>(\n    _: &lt;T as Config&lt;I&gt;&gt;::AssetId,\n) -&gt; &lt;Pallet&lt;T, I&gt; as AccountTouch&lt;&lt;T as Config&lt;I&gt;&gt;::AssetId, &lt;T as Config&gt;::AccountId&gt;&gt;::Balance</h4></section></summary><div class='docblock'>The deposit amount of a native currency required for touching an account of the <code>asset</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.should_touch\" class=\"method trait-impl\"><a href=\"#method.should_touch\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">should_touch</a>(\n    asset: &lt;T as Config&lt;I&gt;&gt;::AssetId,\n    who: &amp;&lt;T as Config&gt;::AccountId,\n) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Check if an account for a given asset should be touched to meet the existence requirements.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.touch\" class=\"method trait-impl\"><a href=\"#method.touch\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">touch</a>(\n    asset: &lt;T as Config&lt;I&gt;&gt;::AssetId,\n    who: &amp;&lt;T as Config&gt;::AccountId,\n    depositor: &amp;&lt;T as Config&gt;::AccountId,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class='docblock'>Create an account for <code>who</code> of the <code>asset</code> with a deposit taken from the <code>depositor</code>.</div></details></div></details>","AccountTouch<<T as Config<I>>::AssetId, <T as Config>::AccountId>","ink_e2e::preset::mock_network::parachain::Assets"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Balanced%3C%3CT+as+SysConfig%3E::AccountId%3E-for-Pallet%3CT,+I%3E\" class=\"impl\"><a href=\"#impl-Balanced%3C%3CT+as+SysConfig%3E::AccountId%3E-for-Pallet%3CT,+I%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, I&gt; Balanced&lt;&lt;T as Config&gt;::AccountId&gt; for Pallet&lt;T, I&gt;<div class=\"where\">where\n    T: Config&lt;I&gt;,\n    I: 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.OnDropCredit\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.OnDropCredit\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">OnDropCredit</a> = DecreaseIssuance&lt;&lt;T as Config&gt;::AccountId, Pallet&lt;T, I&gt;&gt;</h4></section></summary><div class='docblock'>The type for managing what happens when an instance of <code>Credit</code> is dropped without being\nused.</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.OnDropDebt\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.OnDropDebt\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">OnDropDebt</a> = IncreaseIssuance&lt;&lt;T as Config&gt;::AccountId, Pallet&lt;T, I&gt;&gt;</h4></section></summary><div class='docblock'>The type for managing what happens when an instance of <code>Debt</code> is dropped without being used.</div></details><section id=\"method.done_deposit\" class=\"method trait-impl\"><a href=\"#method.done_deposit\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">done_deposit</a>(\n    asset_id: &lt;Pallet&lt;T, I&gt; as Inspect&lt;&lt;T as Config&gt;::AccountId&gt;&gt;::AssetId,\n    who: &amp;&lt;T as Config&gt;::AccountId,\n    amount: &lt;Pallet&lt;T, I&gt; as Inspect&lt;&lt;T as Config&gt;::AccountId&gt;&gt;::Balance,\n)</h4></section><section id=\"method.done_withdraw\" class=\"method trait-impl\"><a href=\"#method.done_withdraw\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">done_withdraw</a>(\n    asset_id: &lt;Pallet&lt;T, I&gt; as Inspect&lt;&lt;T as Config&gt;::AccountId&gt;&gt;::AssetId,\n    who: &amp;&lt;T as Config&gt;::AccountId,\n    amount: &lt;Pallet&lt;T, I&gt; as Inspect&lt;&lt;T as Config&gt;::AccountId&gt;&gt;::Balance,\n)</h4></section><details class=\"toggle method-toggle\" open><summary><section id=\"method.rescind\" class=\"method trait-impl\"><a href=\"#method.rescind\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">rescind</a>(\n    asset: Self::AssetId,\n    amount: Self::Balance,\n) -&gt; Imbalance&lt;Self::AssetId, Self::Balance, Self::OnDropDebt, Self::OnDropCredit&gt;</h4></section></summary><div class='docblock'>Reduce the total issuance by <code>amount</code> and return the according imbalance. The imbalance will\ntypically be used to reduce an account by the same amount with e.g. <code>settle</code>. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.issue\" class=\"method trait-impl\"><a href=\"#method.issue\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">issue</a>(\n    asset: Self::AssetId,\n    amount: Self::Balance,\n) -&gt; Imbalance&lt;Self::AssetId, Self::Balance, Self::OnDropCredit, Self::OnDropDebt&gt;</h4></section></summary><div class='docblock'>Increase the total issuance by <code>amount</code> and return the according imbalance. The imbalance\nwill typically be used to increase an account by the same amount with e.g.\n<code>resolve_into_existing</code> or <code>resolve_creating</code>. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.pair\" class=\"method trait-impl\"><a href=\"#method.pair\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">pair</a>(\n    asset: Self::AssetId,\n    amount: Self::Balance,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;(Imbalance&lt;Self::AssetId, Self::Balance, Self::OnDropDebt, Self::OnDropCredit&gt;, Imbalance&lt;Self::AssetId, Self::Balance, Self::OnDropCredit, Self::OnDropDebt&gt;), DispatchError&gt;</h4></section></summary><div class='docblock'>Produce a pair of imbalances that cancel each other out exactly. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.deposit\" class=\"method trait-impl\"><a href=\"#method.deposit\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">deposit</a>(\n    asset: Self::AssetId,\n    who: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.reference.html\">&amp;AccountId</a>,\n    value: Self::Balance,\n    precision: Precision,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Imbalance&lt;Self::AssetId, Self::Balance, Self::OnDropDebt, Self::OnDropCredit&gt;, DispatchError&gt;</h4></section></summary><div class='docblock'>Mints <code>value</code> into the account of <code>who</code>, creating it as needed. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.withdraw\" class=\"method trait-impl\"><a href=\"#method.withdraw\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">withdraw</a>(\n    asset: Self::AssetId,\n    who: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.reference.html\">&amp;AccountId</a>,\n    value: Self::Balance,\n    precision: Precision,\n    preservation: Preservation,\n    force: Fortitude,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Imbalance&lt;Self::AssetId, Self::Balance, Self::OnDropCredit, Self::OnDropDebt&gt;, DispatchError&gt;</h4></section></summary><div class='docblock'>Removes <code>value</code> balance from <code>who</code> account if possible. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.resolve\" class=\"method trait-impl\"><a href=\"#method.resolve\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">resolve</a>(\n    who: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.reference.html\">&amp;AccountId</a>,\n    credit: Imbalance&lt;Self::AssetId, Self::Balance, Self::OnDropCredit, Self::OnDropDebt&gt;,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.unit.html\">()</a>, Imbalance&lt;Self::AssetId, Self::Balance, Self::OnDropCredit, Self::OnDropDebt&gt;&gt;</h4></section></summary><div class='docblock'>The balance of <code>who</code> is increased in order to counter <code>credit</code>. If the whole of <code>credit</code>\ncannot be countered, then nothing is changed and the original <code>credit</code> is returned in an\n<code>Err</code>. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.settle\" class=\"method trait-impl\"><a href=\"#method.settle\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">settle</a>(\n    who: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.reference.html\">&amp;AccountId</a>,\n    debt: Imbalance&lt;Self::AssetId, Self::Balance, Self::OnDropDebt, Self::OnDropCredit&gt;,\n    preservation: Preservation,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Imbalance&lt;Self::AssetId, Self::Balance, Self::OnDropCredit, Self::OnDropDebt&gt;, Imbalance&lt;Self::AssetId, Self::Balance, Self::OnDropDebt, Self::OnDropCredit&gt;&gt;</h4></section></summary><div class='docblock'>The balance of <code>who</code> is decreased in order to counter <code>debt</code>. If the whole of <code>debt</code>\ncannot be countered, then nothing is changed and the original <code>debt</code> is returned in an\n<code>Err</code>.</div></details><section id=\"method.done_rescind\" class=\"method trait-impl\"><a href=\"#method.done_rescind\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">done_rescind</a>(_asset: Self::AssetId, _amount: Self::Balance)</h4></section><section id=\"method.done_issue\" class=\"method trait-impl\"><a href=\"#method.done_issue\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">done_issue</a>(_asset: Self::AssetId, _amount: Self::Balance)</h4></section></div></details>","Balanced<<T as Config>::AccountId>","ink_e2e::preset::mock_network::parachain::Assets"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BeforeAllRuntimeMigrations-for-Pallet%3CT,+I%3E\" class=\"impl\"><a href=\"#impl-BeforeAllRuntimeMigrations-for-Pallet%3CT,+I%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, I&gt; BeforeAllRuntimeMigrations for Pallet&lt;T, I&gt;<div class=\"where\">where\n    T: Config&lt;I&gt;,\n    I: 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.before_all_runtime_migrations\" class=\"method trait-impl\"><a href=\"#method.before_all_runtime_migrations\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">before_all_runtime_migrations</a>() -&gt; <a class=\"struct\" href=\"ink_e2e/struct.Weight.html\" title=\"struct ink_e2e::Weight\">Weight</a></h4></section></summary><div class='docblock'>Something that should happen before runtime migrations are executed.</div></details></div></details>","BeforeAllRuntimeMigrations","ink_e2e::preset::mock_network::parachain::Assets"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Callable%3CT%3E-for-Pallet%3CT,+I%3E\" class=\"impl\"><a href=\"#impl-Callable%3CT%3E-for-Pallet%3CT,+I%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, I&gt; Callable&lt;T&gt; for Pallet&lt;T, I&gt;<div class=\"where\">where\n    T: Config&lt;I&gt;,\n    I: 'static,</div></h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.RuntimeCall\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.RuntimeCall\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">RuntimeCall</a> = Call&lt;T, I&gt;</h4></section></div></details>","Callable<T>","ink_e2e::preset::mock_network::parachain::Assets"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-Pallet%3CT,+I%3E\" class=\"impl\"><a href=\"#impl-Clone-for-Pallet%3CT,+I%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, I&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for Pallet&lt;T, I&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a href=\"#method.clone\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.86.0/core/clone/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; Pallet&lt;T, I&gt;</h4></section></summary><div class='docblock'>Returns a copy of the value. <a href=\"https://doc.rust-lang.org/1.86.0/core/clone/trait.Clone.html#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.86.0/src/core/clone.rs.html#174\">Source</a></span><a href=\"#method.clone_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.86.0/core/clone/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, source: &amp;Self)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"https://doc.rust-lang.org/1.86.0/core/clone/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","ink_e2e::preset::mock_network::parachain::Assets"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ContainsPair%3C%3CT+as+Config%3CI%3E%3E::AssetId,+%3CT+as+SysConfig%3E::AccountId%3E-for-Pallet%3CT,+I%3E\" class=\"impl\"><a href=\"#impl-ContainsPair%3C%3CT+as+Config%3CI%3E%3E::AssetId,+%3CT+as+SysConfig%3E::AccountId%3E-for-Pallet%3CT,+I%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, I&gt; ContainsPair&lt;&lt;T as Config&lt;I&gt;&gt;::AssetId, &lt;T as Config&gt;::AccountId&gt; for Pallet&lt;T, I&gt;<div class=\"where\">where\n    T: Config&lt;I&gt;,\n    I: 'static,</div></h3><div class=\"docblock\"><p>Implements [<code>ContainsPair</code>] trait for a pair of asset and account IDs.</p>\n</div></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.contains\" class=\"method trait-impl\"><a href=\"#method.contains\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">contains</a>(\n    asset: &amp;&lt;T as Config&lt;I&gt;&gt;::AssetId,\n    who: &amp;&lt;T as Config&gt;::AccountId,\n) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Check if an account with the given asset ID and account address exists.</p>\n</div></details></div></details>","ContainsPair<<T as Config<I>>::AssetId, <T as Config>::AccountId>","ink_e2e::preset::mock_network::parachain::Assets"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Create%3C%3CT+as+SysConfig%3E::AccountId%3E-for-Pallet%3CT,+I%3E\" class=\"impl\"><a href=\"#impl-Create%3C%3CT+as+SysConfig%3E::AccountId%3E-for-Pallet%3CT,+I%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, I&gt; Create&lt;&lt;T as Config&gt;::AccountId&gt; for Pallet&lt;T, I&gt;<div class=\"where\">where\n    T: Config&lt;I&gt;,\n    I: 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.create\" class=\"method trait-impl\"><a href=\"#method.create\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">create</a>(\n    id: &lt;T as Config&lt;I&gt;&gt;::AssetId,\n    admin: &lt;T as Config&gt;::AccountId,\n    is_sufficient: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.bool.html\">bool</a>,\n    min_balance: &lt;Pallet&lt;T, I&gt; as Inspect&lt;&lt;T as Config&gt;::AccountId&gt;&gt;::Balance,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class='docblock'>Create a new fungible asset.</div></details></div></details>","Create<<T as Config>::AccountId>","ink_e2e::preset::mock_network::parachain::Assets"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-Pallet%3CT,+I%3E\" class=\"impl\"><a href=\"#impl-Debug-for-Pallet%3CT,+I%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, I&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for Pallet&lt;T, I&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.86.0/core/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, fmt: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.86.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.86.0/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/1.86.0/core/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","ink_e2e::preset::mock_network::parachain::Assets"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Destroy%3C%3CT+as+SysConfig%3E::AccountId%3E-for-Pallet%3CT,+I%3E\" class=\"impl\"><a href=\"#impl-Destroy%3C%3CT+as+SysConfig%3E::AccountId%3E-for-Pallet%3CT,+I%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, I&gt; Destroy&lt;&lt;T as Config&gt;::AccountId&gt; for Pallet&lt;T, I&gt;<div class=\"where\">where\n    T: Config&lt;I&gt;,\n    I: 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.start_destroy\" class=\"method trait-impl\"><a href=\"#method.start_destroy\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">start_destroy</a>(\n    id: &lt;T as Config&lt;I&gt;&gt;::AssetId,\n    maybe_check_owner: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&lt;T as Config&gt;::AccountId&gt;,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class='docblock'>Start the destruction an existing fungible asset. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.destroy_accounts\" class=\"method trait-impl\"><a href=\"#method.destroy_accounts\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">destroy_accounts</a>(\n    id: &lt;T as Config&lt;I&gt;&gt;::AssetId,\n    max_items: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.u32.html\">u32</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.u32.html\">u32</a>, DispatchError&gt;</h4></section></summary><div class='docblock'>Destroy all accounts associated with a given asset.\n<code>destroy_accounts</code> should only be called after <code>start_destroy</code> has been called, and the\nasset is in a <code>Destroying</code> state <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.destroy_approvals\" class=\"method trait-impl\"><a href=\"#method.destroy_approvals\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">destroy_approvals</a>(\n    id: &lt;T as Config&lt;I&gt;&gt;::AssetId,\n    max_items: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.u32.html\">u32</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.u32.html\">u32</a>, DispatchError&gt;</h4></section></summary><div class='docblock'>Destroy all approvals associated with a given asset up to the <code>max_items</code>\n<code>destroy_approvals</code> should only be called after <code>start_destroy</code> has been called, and the\nasset is in a <code>Destroying</code> state <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.finish_destroy\" class=\"method trait-impl\"><a href=\"#method.finish_destroy\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">finish_destroy</a>(id: &lt;T as Config&lt;I&gt;&gt;::AssetId) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class='docblock'>Complete destroying asset and unreserve currency.\n<code>finish_destroy</code> should only be called after <code>start_destroy</code> has been called, and the\nasset is in a <code>Destroying</code> state. All accounts or approvals should be destroyed before\nhand. <a>Read more</a></div></details></div></details>","Destroy<<T as Config>::AccountId>","ink_e2e::preset::mock_network::parachain::Assets"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-DispatchViewFunction-for-Pallet%3CT,+I%3E\" class=\"impl\"><a href=\"#impl-DispatchViewFunction-for-Pallet%3CT,+I%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, I&gt; DispatchViewFunction for Pallet&lt;T, I&gt;<div class=\"where\">where\n    T: Config&lt;I&gt;,\n    I: 'static,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.dispatch_view_function\" class=\"method trait-impl\"><a href=\"#method.dispatch_view_function\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">dispatch_view_function</a>&lt;O&gt;(\n    id: &amp;ViewFunctionId,\n    input: &amp;mut &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.u8.html\">u8</a>],\n    output: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.reference.html\">&amp;mut O</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.unit.html\">()</a>, ViewFunctionDispatchError&gt;<div class=\"where\">where\n    O: Output,</div></h4></section></div></details>","DispatchViewFunction","ink_e2e::preset::mock_network::parachain::Assets"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-GetStorageVersion-for-Pallet%3CT,+I%3E\" class=\"impl\"><a href=\"#impl-GetStorageVersion-for-Pallet%3CT,+I%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, I&gt; GetStorageVersion for Pallet&lt;T, I&gt;<div class=\"where\">where\n    T: Config&lt;I&gt;,\n    I: 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.InCodeStorageVersion\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.InCodeStorageVersion\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">InCodeStorageVersion</a> = StorageVersion</h4></section></summary><div class='docblock'>This type is generated by the <a href=\"crate::pallet\"><code>pallet</code></a> macro. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.in_code_storage_version\" class=\"method trait-impl\"><a href=\"#method.in_code_storage_version\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">in_code_storage_version</a>() -&gt; &lt;Pallet&lt;T, I&gt; as GetStorageVersion&gt;::InCodeStorageVersion</h4></section></summary><div class='docblock'>Returns the in-code storage version as specified in the\n<a href=\"crate::pallet_macros::storage_version\"><code>storage_version</code></a> attribute, or\n[<code>NoStorageVersionSet</code>] if the attribute is missing.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_chain_storage_version\" class=\"method trait-impl\"><a href=\"#method.on_chain_storage_version\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">on_chain_storage_version</a>() -&gt; StorageVersion</h4></section></summary><div class='docblock'>Returns the storage version of the pallet as last set in the actual on-chain storage.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.current_storage_version\" class=\"method trait-impl\"><a href=\"#method.current_storage_version\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">current_storage_version</a>() -&gt; Self::InCodeStorageVersion</h4></section></summary><span class=\"item-info\"><div class=\"stab deprecated\"><span class=\"emoji\">👎</span><span>Deprecated: This method has been renamed to <code>in_code_storage_version</code> and will be removed after March 2024.</span></div></span><div class='docblock'>DEPRECATED: Use [<code>Self::current_storage_version</code>] instead. <a>Read more</a></div></details></div></details>","GetStorageVersion","ink_e2e::preset::mock_network::parachain::Assets"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Hooks%3C%3C%3C%3CT+as+SysConfig%3E::Block+as+HeaderProvider%3E::HeaderT+as+Header%3E::Number%3E-for-Pallet%3CT,+I%3E\" class=\"impl\"><a href=\"#impl-Hooks%3C%3C%3C%3CT+as+SysConfig%3E::Block+as+HeaderProvider%3E::HeaderT+as+Header%3E::Number%3E-for-Pallet%3CT,+I%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, I&gt; Hooks&lt;&lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number&gt; for Pallet&lt;T, I&gt;<div class=\"where\">where\n    T: Config&lt;I&gt;,\n    I: 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_initialize\" class=\"method trait-impl\"><a href=\"#method.on_initialize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">on_initialize</a>(_n: BlockNumber) -&gt; <a class=\"struct\" href=\"ink_e2e/struct.Weight.html\" title=\"struct ink_e2e::Weight\">Weight</a></h4></section></summary><div class='docblock'>Block initialization hook. This is called at the very beginning of block execution. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_finalize\" class=\"method trait-impl\"><a href=\"#method.on_finalize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">on_finalize</a>(_n: BlockNumber)</h4></section></summary><div class='docblock'>Block finalization hook. This is called at the very end of block execution. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_idle\" class=\"method trait-impl\"><a href=\"#method.on_idle\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">on_idle</a>(_n: BlockNumber, _remaining_weight: <a class=\"struct\" href=\"ink_e2e/struct.Weight.html\" title=\"struct ink_e2e::Weight\">Weight</a>) -&gt; <a class=\"struct\" href=\"ink_e2e/struct.Weight.html\" title=\"struct ink_e2e::Weight\">Weight</a></h4></section></summary><div class='docblock'>Hook to consume a block’s idle time. This will run when the block is being finalized (before\n[<code>Hooks::on_finalize</code>]). <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_poll\" class=\"method trait-impl\"><a href=\"#method.on_poll\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">on_poll</a>(_n: BlockNumber, _weight: &amp;mut WeightMeter)</h4></section></summary><div class='docblock'>A hook to run logic after inherent application. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_runtime_upgrade\" class=\"method trait-impl\"><a href=\"#method.on_runtime_upgrade\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">on_runtime_upgrade</a>() -&gt; <a class=\"struct\" href=\"ink_e2e/struct.Weight.html\" title=\"struct ink_e2e::Weight\">Weight</a></h4></section></summary><div class='docblock'>Hook executed when a code change (aka. a “runtime upgrade”) is detected by the FRAME\n<code>Executive</code> pallet. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.offchain_worker\" class=\"method trait-impl\"><a href=\"#method.offchain_worker\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">offchain_worker</a>(_n: BlockNumber)</h4></section></summary><div class='docblock'>Implementing this function on a pallet allows you to perform long-running tasks that are\ndispatched as separate threads, and entirely independent of the main blockchain execution. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.integrity_test\" class=\"method trait-impl\"><a href=\"#method.integrity_test\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">integrity_test</a>()</h4></section></summary><div class='docblock'>Check the integrity of this pallet’s configuration. <a>Read more</a></div></details></div></details>","Hooks<<<<T as Config>::Block as HeaderProvider>::HeaderT as Header>::Number>","ink_e2e::preset::mock_network::parachain::Assets"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Inspect%3C%3CT+as+SysConfig%3E::AccountId%3E-for-Pallet%3CT,+I%3E\" class=\"impl\"><a href=\"#impl-Inspect%3C%3CT+as+SysConfig%3E::AccountId%3E-for-Pallet%3CT,+I%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, I&gt; Inspect&lt;&lt;T as Config&gt;::AccountId&gt; for Pallet&lt;T, I&gt;<div class=\"where\">where\n    T: Config&lt;I&gt;,\n    I: 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.AssetId\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.AssetId\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">AssetId</a> = &lt;T as Config&lt;I&gt;&gt;::AssetId</h4></section></summary><div class='docblock'>Means of identifying one asset class from another.</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Balance\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Balance\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Balance</a> = &lt;T as Config&lt;I&gt;&gt;::Balance</h4></section></summary><div class='docblock'>Scalar type for representing balance of an account.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.total_issuance\" class=\"method trait-impl\"><a href=\"#method.total_issuance\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">total_issuance</a>(\n    asset: &lt;Pallet&lt;T, I&gt; as Inspect&lt;&lt;T as Config&gt;::AccountId&gt;&gt;::AssetId,\n) -&gt; &lt;Pallet&lt;T, I&gt; as Inspect&lt;&lt;T as Config&gt;::AccountId&gt;&gt;::Balance</h4></section></summary><div class='docblock'>The total amount of issuance in the system.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.minimum_balance\" class=\"method trait-impl\"><a href=\"#method.minimum_balance\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">minimum_balance</a>(\n    asset: &lt;Pallet&lt;T, I&gt; as Inspect&lt;&lt;T as Config&gt;::AccountId&gt;&gt;::AssetId,\n) -&gt; &lt;Pallet&lt;T, I&gt; as Inspect&lt;&lt;T as Config&gt;::AccountId&gt;&gt;::Balance</h4></section></summary><div class='docblock'>The minimum balance any single account may have.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.balance\" class=\"method trait-impl\"><a href=\"#method.balance\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">balance</a>(\n    asset: &lt;Pallet&lt;T, I&gt; as Inspect&lt;&lt;T as Config&gt;::AccountId&gt;&gt;::AssetId,\n    who: &amp;&lt;T as Config&gt;::AccountId,\n) -&gt; &lt;Pallet&lt;T, I&gt; as Inspect&lt;&lt;T as Config&gt;::AccountId&gt;&gt;::Balance</h4></section></summary><div class='docblock'>Get the balance of <code>who</code> which does not include funds which are exclusively allocated to\nsubsystems of the chain (“on hold” or “reserved”). <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.total_balance\" class=\"method trait-impl\"><a href=\"#method.total_balance\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">total_balance</a>(\n    asset: &lt;Pallet&lt;T, I&gt; as Inspect&lt;&lt;T as Config&gt;::AccountId&gt;&gt;::AssetId,\n    who: &amp;&lt;T as Config&gt;::AccountId,\n) -&gt; &lt;Pallet&lt;T, I&gt; as Inspect&lt;&lt;T as Config&gt;::AccountId&gt;&gt;::Balance</h4></section></summary><div class='docblock'>Get the total amount of funds whose ultimate beneficial ownership can be determined as\n<code>who</code>. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.reducible_balance\" class=\"method trait-impl\"><a href=\"#method.reducible_balance\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">reducible_balance</a>(\n    asset: &lt;Pallet&lt;T, I&gt; as Inspect&lt;&lt;T as Config&gt;::AccountId&gt;&gt;::AssetId,\n    who: &amp;&lt;T as Config&gt;::AccountId,\n    preservation: Preservation,\n    _: Fortitude,\n) -&gt; &lt;Pallet&lt;T, I&gt; as Inspect&lt;&lt;T as Config&gt;::AccountId&gt;&gt;::Balance</h4></section></summary><div class='docblock'>Get the maximum amount that <code>who</code> can withdraw/transfer successfully based on whether the\naccount should be kept alive (<code>preservation</code>) or whether we are willing to force the\ntransfer and potentially go below user-level restrictions on the minimum amount of the\naccount. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.can_deposit\" class=\"method trait-impl\"><a href=\"#method.can_deposit\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">can_deposit</a>(\n    asset: &lt;Pallet&lt;T, I&gt; as Inspect&lt;&lt;T as Config&gt;::AccountId&gt;&gt;::AssetId,\n    who: &amp;&lt;T as Config&gt;::AccountId,\n    amount: &lt;Pallet&lt;T, I&gt; as Inspect&lt;&lt;T as Config&gt;::AccountId&gt;&gt;::Balance,\n    provenance: Provenance,\n) -&gt; DepositConsequence</h4></section></summary><div class='docblock'>Returns <code>true</code> if the <code>asset</code> balance of <code>who</code> may be increased by <code>amount</code>. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.can_withdraw\" class=\"method trait-impl\"><a href=\"#method.can_withdraw\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">can_withdraw</a>(\n    asset: &lt;Pallet&lt;T, I&gt; as Inspect&lt;&lt;T as Config&gt;::AccountId&gt;&gt;::AssetId,\n    who: &amp;&lt;T as Config&gt;::AccountId,\n    amount: &lt;Pallet&lt;T, I&gt; as Inspect&lt;&lt;T as Config&gt;::AccountId&gt;&gt;::Balance,\n) -&gt; WithdrawConsequence&lt;&lt;Pallet&lt;T, I&gt; as Inspect&lt;&lt;T as Config&gt;::AccountId&gt;&gt;::Balance&gt;</h4></section></summary><div class='docblock'>Returns <code>Failed</code> if the <code>asset</code> balance of <code>who</code> may not be decreased by <code>amount</code>, otherwise\nthe consequence.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.asset_exists\" class=\"method trait-impl\"><a href=\"#method.asset_exists\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">asset_exists</a>(\n    asset: &lt;Pallet&lt;T, I&gt; as Inspect&lt;&lt;T as Config&gt;::AccountId&gt;&gt;::AssetId,\n) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Returns <code>true</code> if an <code>asset</code> exists.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.active_issuance\" class=\"method trait-impl\"><a href=\"#method.active_issuance\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">active_issuance</a>(asset: Self::AssetId) -&gt; Self::Balance</h4></section></summary><div class='docblock'>The total amount of issuance in the system excluding those which are controlled by the\nsystem.</div></details></div></details>","Inspect<<T as Config>::AccountId>","ink_e2e::preset::mock_network::parachain::Assets"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Inspect%3C%3CT+as+SysConfig%3E::AccountId%3E-for-Pallet%3CT,+I%3E\" class=\"impl\"><a href=\"#impl-Inspect%3C%3CT+as+SysConfig%3E::AccountId%3E-for-Pallet%3CT,+I%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, I&gt; Inspect&lt;&lt;T as Config&gt;::AccountId&gt; for Pallet&lt;T, I&gt;<div class=\"where\">where\n    T: Config&lt;I&gt;,\n    I: 'static,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.allowance\" class=\"method trait-impl\"><a href=\"#method.allowance\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">allowance</a>(\n    asset: &lt;T as Config&lt;I&gt;&gt;::AssetId,\n    owner: &amp;&lt;T as Config&gt;::AccountId,\n    delegate: &amp;&lt;T as Config&gt;::AccountId,\n) -&gt; &lt;T as Config&lt;I&gt;&gt;::Balance</h4></section></div></details>","Inspect<<T as Config>::AccountId>","ink_e2e::preset::mock_network::parachain::Assets"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Inspect%3C%3CT+as+SysConfig%3E::AccountId%3E-for-Pallet%3CT,+I%3E\" class=\"impl\"><a href=\"#impl-Inspect%3C%3CT+as+SysConfig%3E::AccountId%3E-for-Pallet%3CT,+I%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, I&gt; Inspect&lt;&lt;T as Config&gt;::AccountId&gt; for Pallet&lt;T, I&gt;<div class=\"where\">where\n    T: Config&lt;I&gt;,\n    I: 'static,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.name\" class=\"method trait-impl\"><a href=\"#method.name\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">name</a>(asset: &lt;T as Config&lt;I&gt;&gt;::AssetId) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.86.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.u8.html\">u8</a>&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"Vec&lt;u8&gt;\">ⓘ</a></h4></section><section id=\"method.symbol\" class=\"method trait-impl\"><a href=\"#method.symbol\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">symbol</a>(asset: &lt;T as Config&lt;I&gt;&gt;::AssetId) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.86.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.u8.html\">u8</a>&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"Vec&lt;u8&gt;\">ⓘ</a></h4></section><section id=\"method.decimals\" class=\"method trait-impl\"><a href=\"#method.decimals\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">decimals</a>(asset: &lt;T as Config&lt;I&gt;&gt;::AssetId) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.u8.html\">u8</a></h4></section></div></details>","Inspect<<T as Config>::AccountId>","ink_e2e::preset::mock_network::parachain::Assets"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Inspect%3C%3CT+as+SysConfig%3E::AccountId%3E-for-Pallet%3CT,+I%3E\" class=\"impl\"><a href=\"#impl-Inspect%3C%3CT+as+SysConfig%3E::AccountId%3E-for-Pallet%3CT,+I%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, I&gt; Inspect&lt;&lt;T as Config&gt;::AccountId&gt; for Pallet&lt;T, I&gt;<div class=\"where\">where\n    T: Config&lt;I&gt;,\n    I: 'static,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.owner\" class=\"method trait-impl\"><a href=\"#method.owner\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">owner</a>(asset: &lt;T as Config&lt;I&gt;&gt;::AssetId) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&lt;T as Config&gt;::AccountId&gt;</h4></section><section id=\"method.issuer\" class=\"method trait-impl\"><a href=\"#method.issuer\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">issuer</a>(asset: &lt;T as Config&lt;I&gt;&gt;::AssetId) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&lt;T as Config&gt;::AccountId&gt;</h4></section><section id=\"method.admin\" class=\"method trait-impl\"><a href=\"#method.admin\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">admin</a>(asset: &lt;T as Config&lt;I&gt;&gt;::AssetId) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&lt;T as Config&gt;::AccountId&gt;</h4></section><section id=\"method.freezer\" class=\"method trait-impl\"><a href=\"#method.freezer\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">freezer</a>(asset: &lt;T as Config&lt;I&gt;&gt;::AssetId) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&lt;T as Config&gt;::AccountId&gt;</h4></section></div></details>","Inspect<<T as Config>::AccountId>","ink_e2e::preset::mock_network::parachain::Assets"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-InspectEnumerable%3C%3CT+as+SysConfig%3E::AccountId%3E-for-Pallet%3CT,+I%3E\" class=\"impl\"><a href=\"#impl-InspectEnumerable%3C%3CT+as+SysConfig%3E::AccountId%3E-for-Pallet%3CT,+I%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, I&gt; Inspect&lt;&lt;T as Config&gt;::AccountId&gt; for Pallet&lt;T, I&gt;<div class=\"where\">where\n    T: Config&lt;I&gt;,\n    I: 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.asset_ids\" class=\"method trait-impl\"><a href=\"#method.asset_ids\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">asset_ids</a>() -&gt; &lt;Pallet&lt;T, I&gt; as Inspect&lt;&lt;T as Config&gt;::AccountId&gt;&gt;::AssetsIterator</h4></section></summary><div class=\"docblock\"><p>Returns an iterator of the assets in existence.</p>\n<p>NOTE: iterating this list invokes a storage read per item.</p>\n</div></details><section id=\"associatedtype.AssetsIterator\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.AssetsIterator\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">AssetsIterator</a> = KeyPrefixIterator&lt;&lt;T as Config&lt;I&gt;&gt;::AssetId&gt;</h4></section></div></details>","Inspect<<T as Config>::AccountId>","ink_e2e::preset::mock_network::parachain::Assets"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IntegrityTest-for-Pallet%3CT,+I%3E\" class=\"impl\"><a href=\"#impl-IntegrityTest-for-Pallet%3CT,+I%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, I&gt; IntegrityTest for Pallet&lt;T, I&gt;<div class=\"where\">where\n    T: Config&lt;I&gt;,\n    I: 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.integrity_test\" class=\"method trait-impl\"><a href=\"#method.integrity_test\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">integrity_test</a>()</h4></section></summary><div class='docblock'>See [<code>Hooks::integrity_test</code>].</div></details></div></details>","IntegrityTest","ink_e2e::preset::mock_network::parachain::Assets"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MetadataDeposit%3C%3C%3CT+as+Config%3CI%3E%3E::Currency+as+Currency%3C%3CT+as+SysConfig%3E::AccountId%3E%3E::Balance%3E-for-Pallet%3CT,+I%3E\" class=\"impl\"><a href=\"#impl-MetadataDeposit%3C%3C%3CT+as+Config%3CI%3E%3E::Currency+as+Currency%3C%3CT+as+SysConfig%3E::AccountId%3E%3E::Balance%3E-for-Pallet%3CT,+I%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, I&gt; MetadataDeposit&lt;&lt;&lt;T as Config&lt;I&gt;&gt;::Currency as Currency&lt;&lt;T as Config&gt;::AccountId&gt;&gt;::Balance&gt; for Pallet&lt;T, I&gt;<div class=\"where\">where\n    T: Config&lt;I&gt;,\n    I: 'static,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.calc_metadata_deposit\" class=\"method trait-impl\"><a href=\"#method.calc_metadata_deposit\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">calc_metadata_deposit</a>(\n    name: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.u8.html\">u8</a>],\n    symbol: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.u8.html\">u8</a>],\n) -&gt; &lt;&lt;T as Config&lt;I&gt;&gt;::Currency as Currency&lt;&lt;T as Config&gt;::AccountId&gt;&gt;::Balance</h4></section></div></details>","MetadataDeposit<<<T as Config<I>>::Currency as Currency<<T as Config>::AccountId>>::Balance>","ink_e2e::preset::mock_network::parachain::Assets"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Mutate%3C%3CT+as+SysConfig%3E::AccountId%3E-for-Pallet%3CT,+I%3E\" class=\"impl\"><a href=\"#impl-Mutate%3C%3CT+as+SysConfig%3E::AccountId%3E-for-Pallet%3CT,+I%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, I&gt; Mutate&lt;&lt;T as Config&gt;::AccountId&gt; for Pallet&lt;T, I&gt;<div class=\"where\">where\n    T: Config&lt;I&gt;,\n    I: 'static,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.approve\" class=\"method trait-impl\"><a href=\"#method.approve\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">approve</a>(\n    asset: &lt;T as Config&lt;I&gt;&gt;::AssetId,\n    owner: &amp;&lt;T as Config&gt;::AccountId,\n    delegate: &amp;&lt;T as Config&gt;::AccountId,\n    amount: &lt;T as Config&lt;I&gt;&gt;::Balance,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section><section id=\"method.transfer_from\" class=\"method trait-impl\"><a href=\"#method.transfer_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">transfer_from</a>(\n    asset: &lt;T as Config&lt;I&gt;&gt;::AssetId,\n    owner: &amp;&lt;T as Config&gt;::AccountId,\n    delegate: &amp;&lt;T as Config&gt;::AccountId,\n    dest: &amp;&lt;T as Config&gt;::AccountId,\n    amount: &lt;T as Config&lt;I&gt;&gt;::Balance,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></div></details>","Mutate<<T as Config>::AccountId>","ink_e2e::preset::mock_network::parachain::Assets"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Mutate%3C%3CT+as+SysConfig%3E::AccountId%3E-for-Pallet%3CT,+I%3E\" class=\"impl\"><a href=\"#impl-Mutate%3C%3CT+as+SysConfig%3E::AccountId%3E-for-Pallet%3CT,+I%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, I&gt; Mutate&lt;&lt;T as Config&gt;::AccountId&gt; for Pallet&lt;T, I&gt;<div class=\"where\">where\n    T: Config&lt;I&gt;,\n    I: 'static,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.done_mint_into\" class=\"method trait-impl\"><a href=\"#method.done_mint_into\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">done_mint_into</a>(\n    asset_id: &lt;Pallet&lt;T, I&gt; as Inspect&lt;&lt;T as Config&gt;::AccountId&gt;&gt;::AssetId,\n    beneficiary: &amp;&lt;T as Config&gt;::AccountId,\n    amount: &lt;Pallet&lt;T, I&gt; as Inspect&lt;&lt;T as Config&gt;::AccountId&gt;&gt;::Balance,\n)</h4></section><section id=\"method.done_burn_from\" class=\"method trait-impl\"><a href=\"#method.done_burn_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">done_burn_from</a>(\n    asset_id: &lt;Pallet&lt;T, I&gt; as Inspect&lt;&lt;T as Config&gt;::AccountId&gt;&gt;::AssetId,\n    target: &amp;&lt;T as Config&gt;::AccountId,\n    balance: &lt;Pallet&lt;T, I&gt; as Inspect&lt;&lt;T as Config&gt;::AccountId&gt;&gt;::Balance,\n)</h4></section><section id=\"method.done_transfer\" class=\"method trait-impl\"><a href=\"#method.done_transfer\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">done_transfer</a>(\n    asset_id: &lt;Pallet&lt;T, I&gt; as Inspect&lt;&lt;T as Config&gt;::AccountId&gt;&gt;::AssetId,\n    source: &amp;&lt;T as Config&gt;::AccountId,\n    dest: &amp;&lt;T as Config&gt;::AccountId,\n    amount: &lt;Pallet&lt;T, I&gt; as Inspect&lt;&lt;T as Config&gt;::AccountId&gt;&gt;::Balance,\n)</h4></section><details class=\"toggle method-toggle\" open><summary><section id=\"method.mint_into\" class=\"method trait-impl\"><a href=\"#method.mint_into\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">mint_into</a>(\n    asset: Self::AssetId,\n    who: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.reference.html\">&amp;AccountId</a>,\n    amount: Self::Balance,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Self::Balance, DispatchError&gt;</h4></section></summary><div class='docblock'>Increase the balance of <code>who</code> by exactly <code>amount</code>, minting new tokens. If that isn’t\npossible then an <code>Err</code> is returned and nothing is changed.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.burn_from\" class=\"method trait-impl\"><a href=\"#method.burn_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">burn_from</a>(\n    asset: Self::AssetId,\n    who: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.reference.html\">&amp;AccountId</a>,\n    amount: Self::Balance,\n    preservation: Preservation,\n    precision: Precision,\n    force: Fortitude,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Self::Balance, DispatchError&gt;</h4></section></summary><div class='docblock'>Decrease the balance of <code>who</code> by at least <code>amount</code>, possibly slightly more in the case of\nminimum-balance requirements, burning the tokens. If that isn’t possible then an <code>Err</code> is\nreturned and nothing is changed. If successful, the amount of tokens reduced is returned.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.shelve\" class=\"method trait-impl\"><a href=\"#method.shelve\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">shelve</a>(\n    asset: Self::AssetId,\n    who: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.reference.html\">&amp;AccountId</a>,\n    amount: Self::Balance,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Self::Balance, DispatchError&gt;</h4></section></summary><div class='docblock'>Attempt to decrease the <code>asset</code> balance of <code>who</code> by <code>amount</code>. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.restore\" class=\"method trait-impl\"><a href=\"#method.restore\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">restore</a>(\n    asset: Self::AssetId,\n    who: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.reference.html\">&amp;AccountId</a>,\n    amount: Self::Balance,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Self::Balance, DispatchError&gt;</h4></section></summary><div class='docblock'>Attempt to increase the <code>asset</code> balance of <code>who</code> by <code>amount</code>. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.transfer\" class=\"method trait-impl\"><a href=\"#method.transfer\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">transfer</a>(\n    asset: Self::AssetId,\n    source: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.reference.html\">&amp;AccountId</a>,\n    dest: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.reference.html\">&amp;AccountId</a>,\n    amount: Self::Balance,\n    preservation: Preservation,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Self::Balance, DispatchError&gt;</h4></section></summary><div class='docblock'>Transfer funds from one account into another. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set_balance\" class=\"method trait-impl\"><a href=\"#method.set_balance\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">set_balance</a>(\n    asset: Self::AssetId,\n    who: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.reference.html\">&amp;AccountId</a>,\n    amount: Self::Balance,\n) -&gt; Self::Balance</h4></section></summary><div class='docblock'>Simple infallible function to force an account to have a particular balance, good for use\nin tests and benchmarks but not recommended for production code owing to the lack of\nerror reporting. <a>Read more</a></div></details><section id=\"method.done_shelve\" class=\"method trait-impl\"><a href=\"#method.done_shelve\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">done_shelve</a>(_asset: Self::AssetId, _who: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.reference.html\">&amp;AccountId</a>, _amount: Self::Balance)</h4></section><section id=\"method.done_restore\" class=\"method trait-impl\"><a href=\"#method.done_restore\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">done_restore</a>(_asset: Self::AssetId, _who: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.reference.html\">&amp;AccountId</a>, _amount: Self::Balance)</h4></section></div></details>","Mutate<<T as Config>::AccountId>","ink_e2e::preset::mock_network::parachain::Assets"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Mutate%3C%3CT+as+SysConfig%3E::AccountId%3E-for-Pallet%3CT,+I%3E\" class=\"impl\"><a href=\"#impl-Mutate%3C%3CT+as+SysConfig%3E::AccountId%3E-for-Pallet%3CT,+I%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, I&gt; Mutate&lt;&lt;T as Config&gt;::AccountId&gt; for Pallet&lt;T, I&gt;<div class=\"where\">where\n    T: Config&lt;I&gt;,\n    I: 'static,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.set\" class=\"method trait-impl\"><a href=\"#method.set\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">set</a>(\n    asset: &lt;T as Config&lt;I&gt;&gt;::AssetId,\n    from: &amp;&lt;T as Config&gt;::AccountId,\n    name: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.86.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.u8.html\">u8</a>&gt;,\n    symbol: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.86.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.u8.html\">u8</a>&gt;,\n    decimals: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.u8.html\">u8</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></div></details>","Mutate<<T as Config>::AccountId>","ink_e2e::preset::mock_network::parachain::Assets"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OffchainWorker%3C%3C%3C%3CT+as+SysConfig%3E::Block+as+HeaderProvider%3E::HeaderT+as+Header%3E::Number%3E-for-Pallet%3CT,+I%3E\" class=\"impl\"><a href=\"#impl-OffchainWorker%3C%3C%3C%3CT+as+SysConfig%3E::Block+as+HeaderProvider%3E::HeaderT+as+Header%3E::Number%3E-for-Pallet%3CT,+I%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, I&gt; OffchainWorker&lt;&lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number&gt; for Pallet&lt;T, I&gt;<div class=\"where\">where\n    T: Config&lt;I&gt;,\n    I: 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.offchain_worker\" class=\"method trait-impl\"><a href=\"#method.offchain_worker\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">offchain_worker</a>(\n    n: &lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number,\n)</h4></section></summary><div class='docblock'>This function is being called after every block import (when fully synced). <a>Read more</a></div></details></div></details>","OffchainWorker<<<<T as Config>::Block as HeaderProvider>::HeaderT as Header>::Number>","ink_e2e::preset::mock_network::parachain::Assets"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OnFinalize%3C%3C%3C%3CT+as+SysConfig%3E::Block+as+HeaderProvider%3E::HeaderT+as+Header%3E::Number%3E-for-Pallet%3CT,+I%3E\" class=\"impl\"><a href=\"#impl-OnFinalize%3C%3C%3C%3CT+as+SysConfig%3E::Block+as+HeaderProvider%3E::HeaderT+as+Header%3E::Number%3E-for-Pallet%3CT,+I%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, I&gt; OnFinalize&lt;&lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number&gt; for Pallet&lt;T, I&gt;<div class=\"where\">where\n    T: Config&lt;I&gt;,\n    I: 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_finalize\" class=\"method trait-impl\"><a href=\"#method.on_finalize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">on_finalize</a>(\n    n: &lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number,\n)</h4></section></summary><div class='docblock'>See [<code>Hooks::on_finalize</code>].</div></details></div></details>","OnFinalize<<<<T as Config>::Block as HeaderProvider>::HeaderT as Header>::Number>","ink_e2e::preset::mock_network::parachain::Assets"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OnGenesis-for-Pallet%3CT,+I%3E\" class=\"impl\"><a href=\"#impl-OnGenesis-for-Pallet%3CT,+I%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, I&gt; OnGenesis for Pallet&lt;T, I&gt;<div class=\"where\">where\n    T: Config&lt;I&gt;,\n    I: 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_genesis\" class=\"method trait-impl\"><a href=\"#method.on_genesis\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">on_genesis</a>()</h4></section></summary><div class='docblock'>Something that should happen at genesis.</div></details></div></details>","OnGenesis","ink_e2e::preset::mock_network::parachain::Assets"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OnIdle%3C%3C%3C%3CT+as+SysConfig%3E::Block+as+HeaderProvider%3E::HeaderT+as+Header%3E::Number%3E-for-Pallet%3CT,+I%3E\" class=\"impl\"><a href=\"#impl-OnIdle%3C%3C%3C%3CT+as+SysConfig%3E::Block+as+HeaderProvider%3E::HeaderT+as+Header%3E::Number%3E-for-Pallet%3CT,+I%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, I&gt; OnIdle&lt;&lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number&gt; for Pallet&lt;T, I&gt;<div class=\"where\">where\n    T: Config&lt;I&gt;,\n    I: 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_idle\" class=\"method trait-impl\"><a href=\"#method.on_idle\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">on_idle</a>(\n    n: &lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number,\n    remaining_weight: <a class=\"struct\" href=\"ink_e2e/struct.Weight.html\" title=\"struct ink_e2e::Weight\">Weight</a>,\n) -&gt; <a class=\"struct\" href=\"ink_e2e/struct.Weight.html\" title=\"struct ink_e2e::Weight\">Weight</a></h4></section></summary><div class='docblock'>See [<code>Hooks::on_idle</code>].</div></details></div></details>","OnIdle<<<<T as Config>::Block as HeaderProvider>::HeaderT as Header>::Number>","ink_e2e::preset::mock_network::parachain::Assets"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OnInitialize%3C%3C%3C%3CT+as+SysConfig%3E::Block+as+HeaderProvider%3E::HeaderT+as+Header%3E::Number%3E-for-Pallet%3CT,+I%3E\" class=\"impl\"><a href=\"#impl-OnInitialize%3C%3C%3C%3CT+as+SysConfig%3E::Block+as+HeaderProvider%3E::HeaderT+as+Header%3E::Number%3E-for-Pallet%3CT,+I%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, I&gt; OnInitialize&lt;&lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number&gt; for Pallet&lt;T, I&gt;<div class=\"where\">where\n    T: Config&lt;I&gt;,\n    I: 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_initialize\" class=\"method trait-impl\"><a href=\"#method.on_initialize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">on_initialize</a>(\n    n: &lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number,\n) -&gt; <a class=\"struct\" href=\"ink_e2e/struct.Weight.html\" title=\"struct ink_e2e::Weight\">Weight</a></h4></section></summary><div class='docblock'>See [<code>Hooks::on_initialize</code>].</div></details></div></details>","OnInitialize<<<<T as Config>::Block as HeaderProvider>::HeaderT as Header>::Number>","ink_e2e::preset::mock_network::parachain::Assets"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OnPoll%3C%3C%3C%3CT+as+SysConfig%3E::Block+as+HeaderProvider%3E::HeaderT+as+Header%3E::Number%3E-for-Pallet%3CT,+I%3E\" class=\"impl\"><a href=\"#impl-OnPoll%3C%3C%3C%3CT+as+SysConfig%3E::Block+as+HeaderProvider%3E::HeaderT+as+Header%3E::Number%3E-for-Pallet%3CT,+I%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, I&gt; OnPoll&lt;&lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number&gt; for Pallet&lt;T, I&gt;<div class=\"where\">where\n    T: Config&lt;I&gt;,\n    I: 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_poll\" class=\"method trait-impl\"><a href=\"#method.on_poll\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">on_poll</a>(\n    n: &lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number,\n    weight: &amp;mut WeightMeter,\n)</h4></section></summary><div class='docblock'>Code to execute every now and then at the beginning of the block after inherent application. <a>Read more</a></div></details></div></details>","OnPoll<<<<T as Config>::Block as HeaderProvider>::HeaderT as Header>::Number>","ink_e2e::preset::mock_network::parachain::Assets"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OnRuntimeUpgrade-for-Pallet%3CT,+I%3E\" class=\"impl\"><a href=\"#impl-OnRuntimeUpgrade-for-Pallet%3CT,+I%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, I&gt; OnRuntimeUpgrade for Pallet&lt;T, I&gt;<div class=\"where\">where\n    T: Config&lt;I&gt;,\n    I: 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_runtime_upgrade\" class=\"method trait-impl\"><a href=\"#method.on_runtime_upgrade\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">on_runtime_upgrade</a>() -&gt; <a class=\"struct\" href=\"ink_e2e/struct.Weight.html\" title=\"struct ink_e2e::Weight\">Weight</a></h4></section></summary><div class='docblock'>See [<code>Hooks::on_runtime_upgrade</code>].</div></details></div></details>","OnRuntimeUpgrade","ink_e2e::preset::mock_network::parachain::Assets"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Pallet%3CT,+I%3E\" class=\"impl\"><a href=\"#impl-Pallet%3CT,+I%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, I&gt; Pallet&lt;T, I&gt;<div class=\"where\">where\n    T: Config&lt;I&gt;,\n    I: 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.adjust_extra\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">adjust_extra</a>(\n    id: &lt;T as Config&lt;I&gt;&gt;::AssetId,\n    who: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/borrow/trait.Borrow.html\" title=\"trait core::borrow::Borrow\">Borrow</a>&lt;&lt;T as Config&gt;::AccountId&gt;,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;ExtraMutator&lt;T, I&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Return the extra “sid-car” data for <code>id</code>/<code>who</code>, or <code>None</code> if the account doesn’t exist.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.balance\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">balance</a>(\n    id: &lt;T as Config&lt;I&gt;&gt;::AssetId,\n    who: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/borrow/trait.Borrow.html\" title=\"trait core::borrow::Borrow\">Borrow</a>&lt;&lt;T as Config&gt;::AccountId&gt;,\n) -&gt; &lt;T as Config&lt;I&gt;&gt;::Balance</h4></section></summary><div class=\"docblock\"><p>Get the asset <code>id</code> balance of <code>who</code>, or zero if the asset-account doesn’t exist.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.maybe_balance\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">maybe_balance</a>(\n    id: &lt;T as Config&lt;I&gt;&gt;::AssetId,\n    who: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/borrow/trait.Borrow.html\" title=\"trait core::borrow::Borrow\">Borrow</a>&lt;&lt;T as Config&gt;::AccountId&gt;,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&lt;T as Config&lt;I&gt;&gt;::Balance&gt;</h4></section></summary><div class=\"docblock\"><p>Get the asset <code>id</code> balance of <code>who</code> if the asset-account exists.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.total_supply\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">total_supply</a>(id: &lt;T as Config&lt;I&gt;&gt;::AssetId) -&gt; &lt;T as Config&lt;I&gt;&gt;::Balance</h4></section></summary><div class=\"docblock\"><p>Get the total supply of an asset <code>id</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.maybe_total_supply\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">maybe_total_supply</a>(\n    id: &lt;T as Config&lt;I&gt;&gt;::AssetId,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&lt;T as Config&lt;I&gt;&gt;::Balance&gt;</h4></section></summary><div class=\"docblock\"><p>Get the total supply of an asset <code>id</code> if the asset exists.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.account_balances\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">account_balances</a>(\n    account: &lt;T as Config&gt;::AccountId,\n) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.86.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;(&lt;T as Config&lt;I&gt;&gt;::AssetId, &lt;T as Config&lt;I&gt;&gt;::Balance)&gt;</h4></section></summary><div class=\"docblock\"><p>Returns all the non-zero balances for all assets of the given <code>account</code>.</p>\n</div></details></div></details>",0,"ink_e2e::preset::mock_network::parachain::Assets"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Pallet%3CT,+I%3E\" class=\"impl\"><a href=\"#impl-Pallet%3CT,+I%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, I&gt; Pallet&lt;T, I&gt;<div class=\"where\">where\n    T: Config&lt;I&gt;,\n    I: 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.create\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">create</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    id: &lt;T as Config&lt;I&gt;&gt;::AssetIdParameter,\n    admin: &lt;&lt;T as Config&gt;::Lookup as StaticLookup&gt;::Source,\n    min_balance: &lt;T as Config&lt;I&gt;&gt;::Balance,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Issue a new class of fungible assets from a public origin.</p>\n<p>This new asset class has no assets initially and its owner is the origin.</p>\n<p>The origin must conform to the configured <code>CreateOrigin</code> and have sufficient funds free.</p>\n<p>Funds of sender are reserved by <code>AssetDeposit</code>.</p>\n<p>Parameters:</p>\n<ul>\n<li><code>id</code>: The identifier of the new asset. This must not be currently in use to identify\nan existing asset. If [<code>NextAssetId</code>] is set, then this must be equal to it.</li>\n<li><code>admin</code>: The admin of this class of assets. The admin is the initial address of each\nmember of the asset class’s admin team.</li>\n<li><code>min_balance</code>: The minimum balance of this new asset that any single account must\nhave. If an account’s balance is reduced below this, then it collapses to zero.</li>\n</ul>\n<p>Emits <code>Created</code> event when successful.</p>\n<p>Weight: <code>O(1)</code></p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.force_create\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">force_create</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    id: &lt;T as Config&lt;I&gt;&gt;::AssetIdParameter,\n    owner: &lt;&lt;T as Config&gt;::Lookup as StaticLookup&gt;::Source,\n    is_sufficient: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.bool.html\">bool</a>,\n    min_balance: &lt;T as Config&lt;I&gt;&gt;::Balance,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Issue a new class of fungible assets from a privileged origin.</p>\n<p>This new asset class has no assets initially.</p>\n<p>The origin must conform to <code>ForceOrigin</code>.</p>\n<p>Unlike <code>create</code>, no funds are reserved.</p>\n<ul>\n<li><code>id</code>: The identifier of the new asset. This must not be currently in use to identify\nan existing asset. If [<code>NextAssetId</code>] is set, then this must be equal to it.</li>\n<li><code>owner</code>: The owner of this class of assets. The owner has full superuser permissions\nover this asset, but may later change and configure the permissions using\n<code>transfer_ownership</code> and <code>set_team</code>.</li>\n<li><code>min_balance</code>: The minimum balance of this new asset that any single account must\nhave. If an account’s balance is reduced below this, then it collapses to zero.</li>\n</ul>\n<p>Emits <code>ForceCreated</code> event when successful.</p>\n<p>Weight: <code>O(1)</code></p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.start_destroy\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">start_destroy</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    id: &lt;T as Config&lt;I&gt;&gt;::AssetIdParameter,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Start the process of destroying a fungible asset class.</p>\n<p><code>start_destroy</code> is the first in a series of extrinsics that should be called, to allow\ndestruction of an asset class.</p>\n<p>The origin must conform to <code>ForceOrigin</code> or must be <code>Signed</code> by the asset’s <code>owner</code>.</p>\n<ul>\n<li><code>id</code>: The identifier of the asset to be destroyed. This must identify an existing\nasset.</li>\n</ul>\n<p>It will fail with either [<code>Error::ContainsHolds</code>] or [<code>Error::ContainsFreezes</code>] if\nan account contains holds or freezes in place.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.destroy_accounts\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">destroy_accounts</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    id: &lt;T as Config&lt;I&gt;&gt;::AssetIdParameter,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;PostDispatchInfo, DispatchErrorWithPostInfo&lt;PostDispatchInfo&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Destroy all accounts associated with a given asset.</p>\n<p><code>destroy_accounts</code> should only be called after <code>start_destroy</code> has been called, and the\nasset is in a <code>Destroying</code> state.</p>\n<p>Due to weight restrictions, this function may need to be called multiple times to fully\ndestroy all accounts. It will destroy <code>RemoveItemsLimit</code> accounts at a time.</p>\n<ul>\n<li><code>id</code>: The identifier of the asset to be destroyed. This must identify an existing\nasset.</li>\n</ul>\n<p>Each call emits the <code>Event::DestroyedAccounts</code> event.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.destroy_approvals\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">destroy_approvals</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    id: &lt;T as Config&lt;I&gt;&gt;::AssetIdParameter,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;PostDispatchInfo, DispatchErrorWithPostInfo&lt;PostDispatchInfo&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Destroy all approvals associated with a given asset up to the max (T::RemoveItemsLimit).</p>\n<p><code>destroy_approvals</code> should only be called after <code>start_destroy</code> has been called, and the\nasset is in a <code>Destroying</code> state.</p>\n<p>Due to weight restrictions, this function may need to be called multiple times to fully\ndestroy all approvals. It will destroy <code>RemoveItemsLimit</code> approvals at a time.</p>\n<ul>\n<li><code>id</code>: The identifier of the asset to be destroyed. This must identify an existing\nasset.</li>\n</ul>\n<p>Each call emits the <code>Event::DestroyedApprovals</code> event.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.finish_destroy\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">finish_destroy</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    id: &lt;T as Config&lt;I&gt;&gt;::AssetIdParameter,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Complete destroying asset and unreserve currency.</p>\n<p><code>finish_destroy</code> should only be called after <code>start_destroy</code> has been called, and the\nasset is in a <code>Destroying</code> state. All accounts or approvals should be destroyed before\nhand.</p>\n<ul>\n<li><code>id</code>: The identifier of the asset to be destroyed. This must identify an existing\nasset.</li>\n</ul>\n<p>Each successful call emits the <code>Event::Destroyed</code> event.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mint\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mint</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    id: &lt;T as Config&lt;I&gt;&gt;::AssetIdParameter,\n    beneficiary: &lt;&lt;T as Config&gt;::Lookup as StaticLookup&gt;::Source,\n    amount: &lt;T as Config&lt;I&gt;&gt;::Balance,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Mint assets of a particular class.</p>\n<p>The origin must be Signed and the sender must be the Issuer of the asset <code>id</code>.</p>\n<ul>\n<li><code>id</code>: The identifier of the asset to have some amount minted.</li>\n<li><code>beneficiary</code>: The account to be credited with the minted assets.</li>\n<li><code>amount</code>: The amount of the asset to be minted.</li>\n</ul>\n<p>Emits <code>Issued</code> event when successful.</p>\n<p>Weight: <code>O(1)</code>\nModes: Pre-existing balance of <code>beneficiary</code>; Account pre-existence of <code>beneficiary</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.burn\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">burn</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    id: &lt;T as Config&lt;I&gt;&gt;::AssetIdParameter,\n    who: &lt;&lt;T as Config&gt;::Lookup as StaticLookup&gt;::Source,\n    amount: &lt;T as Config&lt;I&gt;&gt;::Balance,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Reduce the balance of <code>who</code> by as much as possible up to <code>amount</code> assets of <code>id</code>.</p>\n<p>Origin must be Signed and the sender should be the Manager of the asset <code>id</code>.</p>\n<p>Bails with <code>NoAccount</code> if the <code>who</code> is already dead.</p>\n<ul>\n<li><code>id</code>: The identifier of the asset to have some amount burned.</li>\n<li><code>who</code>: The account to be debited from.</li>\n<li><code>amount</code>: The maximum amount by which <code>who</code>’s balance should be reduced.</li>\n</ul>\n<p>Emits <code>Burned</code> with the actual amount burned. If this takes the balance to below the\nminimum for the asset, then the amount burned is increased to take it to zero.</p>\n<p>Weight: <code>O(1)</code>\nModes: Post-existence of <code>who</code>; Pre &amp; post Zombie-status of <code>who</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.transfer\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">transfer</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    id: &lt;T as Config&lt;I&gt;&gt;::AssetIdParameter,\n    target: &lt;&lt;T as Config&gt;::Lookup as StaticLookup&gt;::Source,\n    amount: &lt;T as Config&lt;I&gt;&gt;::Balance,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Move some assets from the sender account to another.</p>\n<p>Origin must be Signed.</p>\n<ul>\n<li><code>id</code>: The identifier of the asset to have some amount transferred.</li>\n<li><code>target</code>: The account to be credited.</li>\n<li><code>amount</code>: The amount by which the sender’s balance of assets should be reduced and\n<code>target</code>’s balance increased. The amount actually transferred may be slightly greater in\nthe case that the transfer would otherwise take the sender balance above zero but below\nthe minimum balance. Must be greater than zero.</li>\n</ul>\n<p>Emits <code>Transferred</code> with the actual amount transferred. If this takes the source balance\nto below the minimum for the asset, then the amount transferred is increased to take it\nto zero.</p>\n<p>Weight: <code>O(1)</code>\nModes: Pre-existence of <code>target</code>; Post-existence of sender; Account pre-existence of\n<code>target</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.transfer_keep_alive\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">transfer_keep_alive</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    id: &lt;T as Config&lt;I&gt;&gt;::AssetIdParameter,\n    target: &lt;&lt;T as Config&gt;::Lookup as StaticLookup&gt;::Source,\n    amount: &lt;T as Config&lt;I&gt;&gt;::Balance,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Move some assets from the sender account to another, keeping the sender account alive.</p>\n<p>Origin must be Signed.</p>\n<ul>\n<li><code>id</code>: The identifier of the asset to have some amount transferred.</li>\n<li><code>target</code>: The account to be credited.</li>\n<li><code>amount</code>: The amount by which the sender’s balance of assets should be reduced and\n<code>target</code>’s balance increased. The amount actually transferred may be slightly greater in\nthe case that the transfer would otherwise take the sender balance above zero but below\nthe minimum balance. Must be greater than zero.</li>\n</ul>\n<p>Emits <code>Transferred</code> with the actual amount transferred. If this takes the source balance\nto below the minimum for the asset, then the amount transferred is increased to take it\nto zero.</p>\n<p>Weight: <code>O(1)</code>\nModes: Pre-existence of <code>target</code>; Post-existence of sender; Account pre-existence of\n<code>target</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.force_transfer\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">force_transfer</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    id: &lt;T as Config&lt;I&gt;&gt;::AssetIdParameter,\n    source: &lt;&lt;T as Config&gt;::Lookup as StaticLookup&gt;::Source,\n    dest: &lt;&lt;T as Config&gt;::Lookup as StaticLookup&gt;::Source,\n    amount: &lt;T as Config&lt;I&gt;&gt;::Balance,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Move some assets from one account to another.</p>\n<p>Origin must be Signed and the sender should be the Admin of the asset <code>id</code>.</p>\n<ul>\n<li><code>id</code>: The identifier of the asset to have some amount transferred.</li>\n<li><code>source</code>: The account to be debited.</li>\n<li><code>dest</code>: The account to be credited.</li>\n<li><code>amount</code>: The amount by which the <code>source</code>’s balance of assets should be reduced and\n<code>dest</code>’s balance increased. The amount actually transferred may be slightly greater in\nthe case that the transfer would otherwise take the <code>source</code> balance above zero but\nbelow the minimum balance. Must be greater than zero.</li>\n</ul>\n<p>Emits <code>Transferred</code> with the actual amount transferred. If this takes the source balance\nto below the minimum for the asset, then the amount transferred is increased to take it\nto zero.</p>\n<p>Weight: <code>O(1)</code>\nModes: Pre-existence of <code>dest</code>; Post-existence of <code>source</code>; Account pre-existence of\n<code>dest</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.freeze\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">freeze</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    id: &lt;T as Config&lt;I&gt;&gt;::AssetIdParameter,\n    who: &lt;&lt;T as Config&gt;::Lookup as StaticLookup&gt;::Source,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Disallow further unprivileged transfers of an asset <code>id</code> from an account <code>who</code>. <code>who</code>\nmust already exist as an entry in <code>Account</code>s of the asset. If you want to freeze an\naccount that does not have an entry, use <code>touch_other</code> first.</p>\n<p>Origin must be Signed and the sender should be the Freezer of the asset <code>id</code>.</p>\n<ul>\n<li><code>id</code>: The identifier of the asset to be frozen.</li>\n<li><code>who</code>: The account to be frozen.</li>\n</ul>\n<p>Emits <code>Frozen</code>.</p>\n<p>Weight: <code>O(1)</code></p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.thaw\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">thaw</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    id: &lt;T as Config&lt;I&gt;&gt;::AssetIdParameter,\n    who: &lt;&lt;T as Config&gt;::Lookup as StaticLookup&gt;::Source,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Allow unprivileged transfers to and from an account again.</p>\n<p>Origin must be Signed and the sender should be the Admin of the asset <code>id</code>.</p>\n<ul>\n<li><code>id</code>: The identifier of the asset to be frozen.</li>\n<li><code>who</code>: The account to be unfrozen.</li>\n</ul>\n<p>Emits <code>Thawed</code>.</p>\n<p>Weight: <code>O(1)</code></p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.freeze_asset\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">freeze_asset</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    id: &lt;T as Config&lt;I&gt;&gt;::AssetIdParameter,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Disallow further unprivileged transfers for the asset class.</p>\n<p>Origin must be Signed and the sender should be the Freezer of the asset <code>id</code>.</p>\n<ul>\n<li><code>id</code>: The identifier of the asset to be frozen.</li>\n</ul>\n<p>Emits <code>Frozen</code>.</p>\n<p>Weight: <code>O(1)</code></p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.thaw_asset\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">thaw_asset</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    id: &lt;T as Config&lt;I&gt;&gt;::AssetIdParameter,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Allow unprivileged transfers for the asset again.</p>\n<p>Origin must be Signed and the sender should be the Admin of the asset <code>id</code>.</p>\n<ul>\n<li><code>id</code>: The identifier of the asset to be thawed.</li>\n</ul>\n<p>Emits <code>Thawed</code>.</p>\n<p>Weight: <code>O(1)</code></p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.transfer_ownership\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">transfer_ownership</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    id: &lt;T as Config&lt;I&gt;&gt;::AssetIdParameter,\n    owner: &lt;&lt;T as Config&gt;::Lookup as StaticLookup&gt;::Source,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Change the Owner of an asset.</p>\n<p>Origin must be Signed and the sender should be the Owner of the asset <code>id</code>.</p>\n<ul>\n<li><code>id</code>: The identifier of the asset.</li>\n<li><code>owner</code>: The new Owner of this asset.</li>\n</ul>\n<p>Emits <code>OwnerChanged</code>.</p>\n<p>Weight: <code>O(1)</code></p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set_team\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">set_team</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    id: &lt;T as Config&lt;I&gt;&gt;::AssetIdParameter,\n    issuer: &lt;&lt;T as Config&gt;::Lookup as StaticLookup&gt;::Source,\n    admin: &lt;&lt;T as Config&gt;::Lookup as StaticLookup&gt;::Source,\n    freezer: &lt;&lt;T as Config&gt;::Lookup as StaticLookup&gt;::Source,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Change the Issuer, Admin and Freezer of an asset.</p>\n<p>Origin must be Signed and the sender should be the Owner of the asset <code>id</code>.</p>\n<ul>\n<li><code>id</code>: The identifier of the asset to be frozen.</li>\n<li><code>issuer</code>: The new Issuer of this asset.</li>\n<li><code>admin</code>: The new Admin of this asset.</li>\n<li><code>freezer</code>: The new Freezer of this asset.</li>\n</ul>\n<p>Emits <code>TeamChanged</code>.</p>\n<p>Weight: <code>O(1)</code></p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set_metadata\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">set_metadata</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    id: &lt;T as Config&lt;I&gt;&gt;::AssetIdParameter,\n    name: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.86.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.u8.html\">u8</a>&gt;,\n    symbol: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.86.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.u8.html\">u8</a>&gt;,\n    decimals: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.u8.html\">u8</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Set the metadata for an asset.</p>\n<p>Origin must be Signed and the sender should be the Owner of the asset <code>id</code>.</p>\n<p>Funds of sender are reserved according to the formula:\n<code>MetadataDepositBase + MetadataDepositPerByte * (name.len + symbol.len)</code> taking into\naccount any already reserved funds.</p>\n<ul>\n<li><code>id</code>: The identifier of the asset to update.</li>\n<li><code>name</code>: The user friendly name of this asset. Limited in length by <code>StringLimit</code>.</li>\n<li><code>symbol</code>: The exchange symbol for this asset. Limited in length by <code>StringLimit</code>.</li>\n<li><code>decimals</code>: The number of decimals this asset uses to represent one unit.</li>\n</ul>\n<p>Emits <code>MetadataSet</code>.</p>\n<p>Weight: <code>O(1)</code></p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clear_metadata\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">clear_metadata</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    id: &lt;T as Config&lt;I&gt;&gt;::AssetIdParameter,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Clear the metadata for an asset.</p>\n<p>Origin must be Signed and the sender should be the Owner of the asset <code>id</code>.</p>\n<p>Any deposit is freed for the asset owner.</p>\n<ul>\n<li><code>id</code>: The identifier of the asset to clear.</li>\n</ul>\n<p>Emits <code>MetadataCleared</code>.</p>\n<p>Weight: <code>O(1)</code></p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.force_set_metadata\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">force_set_metadata</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    id: &lt;T as Config&lt;I&gt;&gt;::AssetIdParameter,\n    name: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.86.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.u8.html\">u8</a>&gt;,\n    symbol: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.86.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.u8.html\">u8</a>&gt;,\n    decimals: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.u8.html\">u8</a>,\n    is_frozen: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.bool.html\">bool</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Force the metadata for an asset to some value.</p>\n<p>Origin must be ForceOrigin.</p>\n<p>Any deposit is left alone.</p>\n<ul>\n<li><code>id</code>: The identifier of the asset to update.</li>\n<li><code>name</code>: The user friendly name of this asset. Limited in length by <code>StringLimit</code>.</li>\n<li><code>symbol</code>: The exchange symbol for this asset. Limited in length by <code>StringLimit</code>.</li>\n<li><code>decimals</code>: The number of decimals this asset uses to represent one unit.</li>\n</ul>\n<p>Emits <code>MetadataSet</code>.</p>\n<p>Weight: <code>O(N + S)</code> where N and S are the length of the name and symbol respectively.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.force_clear_metadata\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">force_clear_metadata</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    id: &lt;T as Config&lt;I&gt;&gt;::AssetIdParameter,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Clear the metadata for an asset.</p>\n<p>Origin must be ForceOrigin.</p>\n<p>Any deposit is returned.</p>\n<ul>\n<li><code>id</code>: The identifier of the asset to clear.</li>\n</ul>\n<p>Emits <code>MetadataCleared</code>.</p>\n<p>Weight: <code>O(1)</code></p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.force_asset_status\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">force_asset_status</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    id: &lt;T as Config&lt;I&gt;&gt;::AssetIdParameter,\n    owner: &lt;&lt;T as Config&gt;::Lookup as StaticLookup&gt;::Source,\n    issuer: &lt;&lt;T as Config&gt;::Lookup as StaticLookup&gt;::Source,\n    admin: &lt;&lt;T as Config&gt;::Lookup as StaticLookup&gt;::Source,\n    freezer: &lt;&lt;T as Config&gt;::Lookup as StaticLookup&gt;::Source,\n    min_balance: &lt;T as Config&lt;I&gt;&gt;::Balance,\n    is_sufficient: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.bool.html\">bool</a>,\n    is_frozen: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.bool.html\">bool</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Alter the attributes of a given asset.</p>\n<p>Origin must be <code>ForceOrigin</code>.</p>\n<ul>\n<li><code>id</code>: The identifier of the asset.</li>\n<li><code>owner</code>: The new Owner of this asset.</li>\n<li><code>issuer</code>: The new Issuer of this asset.</li>\n<li><code>admin</code>: The new Admin of this asset.</li>\n<li><code>freezer</code>: The new Freezer of this asset.</li>\n<li><code>min_balance</code>: The minimum balance of this new asset that any single account must\nhave. If an account’s balance is reduced below this, then it collapses to zero.</li>\n<li><code>is_sufficient</code>: Whether a non-zero balance of this asset is deposit of sufficient\nvalue to account for the state bloat associated with its balance storage. If set to\n<code>true</code>, then non-zero balances may be stored without a <code>consumer</code> reference (and thus\nan ED in the Balances pallet or whatever else is used to control user-account state\ngrowth).</li>\n<li><code>is_frozen</code>: Whether this asset class is frozen except for permissioned/admin\ninstructions.</li>\n</ul>\n<p>Emits <code>AssetStatusChanged</code> with the identity of the asset.</p>\n<p>Weight: <code>O(1)</code></p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.approve_transfer\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">approve_transfer</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    id: &lt;T as Config&lt;I&gt;&gt;::AssetIdParameter,\n    delegate: &lt;&lt;T as Config&gt;::Lookup as StaticLookup&gt;::Source,\n    amount: &lt;T as Config&lt;I&gt;&gt;::Balance,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Approve an amount of asset for transfer by a delegated third-party account.</p>\n<p>Origin must be Signed.</p>\n<p>Ensures that <code>ApprovalDeposit</code> worth of <code>Currency</code> is reserved from signing account\nfor the purpose of holding the approval. If some non-zero amount of assets is already\napproved from signing account to <code>delegate</code>, then it is topped up or unreserved to\nmeet the right value.</p>\n<p>NOTE: The signing account does not need to own <code>amount</code> of assets at the point of\nmaking this call.</p>\n<ul>\n<li><code>id</code>: The identifier of the asset.</li>\n<li><code>delegate</code>: The account to delegate permission to transfer asset.</li>\n<li><code>amount</code>: The amount of asset that may be transferred by <code>delegate</code>. If there is\nalready an approval in place, then this acts additively.</li>\n</ul>\n<p>Emits <code>ApprovedTransfer</code> on success.</p>\n<p>Weight: <code>O(1)</code></p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.cancel_approval\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">cancel_approval</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    id: &lt;T as Config&lt;I&gt;&gt;::AssetIdParameter,\n    delegate: &lt;&lt;T as Config&gt;::Lookup as StaticLookup&gt;::Source,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Cancel all of some asset approved for delegated transfer by a third-party account.</p>\n<p>Origin must be Signed and there must be an approval in place between signer and\n<code>delegate</code>.</p>\n<p>Unreserves any deposit previously reserved by <code>approve_transfer</code> for the approval.</p>\n<ul>\n<li><code>id</code>: The identifier of the asset.</li>\n<li><code>delegate</code>: The account delegated permission to transfer asset.</li>\n</ul>\n<p>Emits <code>ApprovalCancelled</code> on success.</p>\n<p>Weight: <code>O(1)</code></p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.force_cancel_approval\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">force_cancel_approval</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    id: &lt;T as Config&lt;I&gt;&gt;::AssetIdParameter,\n    owner: &lt;&lt;T as Config&gt;::Lookup as StaticLookup&gt;::Source,\n    delegate: &lt;&lt;T as Config&gt;::Lookup as StaticLookup&gt;::Source,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Cancel all of some asset approved for delegated transfer by a third-party account.</p>\n<p>Origin must be either ForceOrigin or Signed origin with the signer being the Admin\naccount of the asset <code>id</code>.</p>\n<p>Unreserves any deposit previously reserved by <code>approve_transfer</code> for the approval.</p>\n<ul>\n<li><code>id</code>: The identifier of the asset.</li>\n<li><code>delegate</code>: The account delegated permission to transfer asset.</li>\n</ul>\n<p>Emits <code>ApprovalCancelled</code> on success.</p>\n<p>Weight: <code>O(1)</code></p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.transfer_approved\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">transfer_approved</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    id: &lt;T as Config&lt;I&gt;&gt;::AssetIdParameter,\n    owner: &lt;&lt;T as Config&gt;::Lookup as StaticLookup&gt;::Source,\n    destination: &lt;&lt;T as Config&gt;::Lookup as StaticLookup&gt;::Source,\n    amount: &lt;T as Config&lt;I&gt;&gt;::Balance,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Transfer some asset balance from a previously delegated account to some third-party\naccount.</p>\n<p>Origin must be Signed and there must be an approval in place by the <code>owner</code> to the\nsigner.</p>\n<p>If the entire amount approved for transfer is transferred, then any deposit previously\nreserved by <code>approve_transfer</code> is unreserved.</p>\n<ul>\n<li><code>id</code>: The identifier of the asset.</li>\n<li><code>owner</code>: The account which previously approved for a transfer of at least <code>amount</code> and\nfrom which the asset balance will be withdrawn.</li>\n<li><code>destination</code>: The account to which the asset balance of <code>amount</code> will be transferred.</li>\n<li><code>amount</code>: The amount of assets to transfer.</li>\n</ul>\n<p>Emits <code>TransferredApproved</code> on success.</p>\n<p>Weight: <code>O(1)</code></p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.touch\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">touch</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    id: &lt;T as Config&lt;I&gt;&gt;::AssetIdParameter,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Create an asset account for non-provider assets.</p>\n<p>A deposit will be taken from the signer account.</p>\n<ul>\n<li><code>origin</code>: Must be Signed; the signer account must have sufficient funds for a deposit\nto be taken.</li>\n<li><code>id</code>: The identifier of the asset for the account to be created.</li>\n</ul>\n<p>Emits <code>Touched</code> event when successful.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.refund\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">refund</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    id: &lt;T as Config&lt;I&gt;&gt;::AssetIdParameter,\n    allow_burn: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.bool.html\">bool</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Return the deposit (if any) of an asset account or a consumer reference (if any) of an\naccount.</p>\n<p>The origin must be Signed.</p>\n<ul>\n<li><code>id</code>: The identifier of the asset for which the caller would like the deposit\nrefunded.</li>\n<li><code>allow_burn</code>: If <code>true</code> then assets may be destroyed in order to complete the refund.</li>\n</ul>\n<p>It will fail with either [<code>Error::ContainsHolds</code>] or [<code>Error::ContainsFreezes</code>] if\nthe asset account contains holds or freezes in place.</p>\n<p>Emits <code>Refunded</code> event when successful.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set_min_balance\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">set_min_balance</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    id: &lt;T as Config&lt;I&gt;&gt;::AssetIdParameter,\n    min_balance: &lt;T as Config&lt;I&gt;&gt;::Balance,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Sets the minimum balance of an asset.</p>\n<p>Only works if there aren’t any accounts that are holding the asset or if\nthe new value of <code>min_balance</code> is less than the old one.</p>\n<p>Origin must be Signed and the sender has to be the Owner of the\nasset <code>id</code>.</p>\n<ul>\n<li><code>id</code>: The identifier of the asset.</li>\n<li><code>min_balance</code>: The new value of <code>min_balance</code>.</li>\n</ul>\n<p>Emits <code>AssetMinBalanceChanged</code> event when successful.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.touch_other\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">touch_other</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    id: &lt;T as Config&lt;I&gt;&gt;::AssetIdParameter,\n    who: &lt;&lt;T as Config&gt;::Lookup as StaticLookup&gt;::Source,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Create an asset account for <code>who</code>.</p>\n<p>A deposit will be taken from the signer account.</p>\n<ul>\n<li><code>origin</code>: Must be Signed by <code>Freezer</code> or <code>Admin</code> of the asset <code>id</code>; the signer account\nmust have sufficient funds for a deposit to be taken.</li>\n<li><code>id</code>: The identifier of the asset for the account to be created.</li>\n<li><code>who</code>: The account to be created.</li>\n</ul>\n<p>Emits <code>Touched</code> event when successful.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.refund_other\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">refund_other</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    id: &lt;T as Config&lt;I&gt;&gt;::AssetIdParameter,\n    who: &lt;&lt;T as Config&gt;::Lookup as StaticLookup&gt;::Source,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Return the deposit (if any) of a target asset account. Useful if you are the depositor.</p>\n<p>The origin must be Signed and either the account owner, depositor, or asset <code>Admin</code>. In\norder to burn a non-zero balance of the asset, the caller must be the account and should\nuse <code>refund</code>.</p>\n<ul>\n<li><code>id</code>: The identifier of the asset for the account holding a deposit.</li>\n<li><code>who</code>: The account to refund.</li>\n</ul>\n<p>It will fail with either [<code>Error::ContainsHolds</code>] or [<code>Error::ContainsFreezes</code>] if\nthe asset account contains holds or freezes in place.</p>\n<p>Emits <code>Refunded</code> event when successful.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.block\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">block</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    id: &lt;T as Config&lt;I&gt;&gt;::AssetIdParameter,\n    who: &lt;&lt;T as Config&gt;::Lookup as StaticLookup&gt;::Source,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Disallow further unprivileged transfers of an asset <code>id</code> to and from an account <code>who</code>.</p>\n<p>Origin must be Signed and the sender should be the Freezer of the asset <code>id</code>.</p>\n<ul>\n<li><code>id</code>: The identifier of the account’s asset.</li>\n<li><code>who</code>: The account to be unblocked.</li>\n</ul>\n<p>Emits <code>Blocked</code>.</p>\n<p>Weight: <code>O(1)</code></p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.transfer_all\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">transfer_all</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    id: &lt;T as Config&lt;I&gt;&gt;::AssetIdParameter,\n    dest: &lt;&lt;T as Config&gt;::Lookup as StaticLookup&gt;::Source,\n    keep_alive: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.bool.html\">bool</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Transfer the entire transferable balance from the caller asset account.</p>\n<p>NOTE: This function only attempts to transfer <em>transferable</em> balances. This means that\nany held, frozen, or minimum balance (when <code>keep_alive</code> is <code>true</code>), will not be\ntransferred by this function. To ensure that this function results in a killed account,\nyou might need to prepare the account by removing any reference counters, storage\ndeposits, etc…</p>\n<p>The dispatch origin of this call must be Signed.</p>\n<ul>\n<li><code>id</code>: The identifier of the asset for the account holding a deposit.</li>\n<li><code>dest</code>: The recipient of the transfer.</li>\n<li><code>keep_alive</code>: A boolean to determine if the <code>transfer_all</code> operation should send all\nof the funds the asset account has, causing the sender asset account to be killed\n(false), or transfer everything except at least the minimum balance, which will\nguarantee to keep the sender asset account alive (true).</li>\n</ul>\n</div></details></div></details>",0,"ink_e2e::preset::mock_network::parachain::Assets"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PalletInfoAccess-for-Pallet%3CT,+I%3E\" class=\"impl\"><a href=\"#impl-PalletInfoAccess-for-Pallet%3CT,+I%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, I&gt; PalletInfoAccess for Pallet&lt;T, I&gt;<div class=\"where\">where\n    T: Config&lt;I&gt;,\n    I: 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.index\" class=\"method trait-impl\"><a href=\"#method.index\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">index</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Index of the pallet as configured in the runtime.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.name\" class=\"method trait-impl\"><a href=\"#method.name\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">name</a>() -&gt; &amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.str.html\">str</a></h4></section></summary><div class='docblock'>Name of the pallet as configured in the runtime.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.name_hash\" class=\"method trait-impl\"><a href=\"#method.name_hash\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">name_hash</a>() -&gt; [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.array.html\">16</a>]</h4></section></summary><div class='docblock'>Two128 hash of name.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.module_name\" class=\"method trait-impl\"><a href=\"#method.module_name\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">module_name</a>() -&gt; &amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.str.html\">str</a></h4></section></summary><div class='docblock'>Name of the Rust module containing the pallet.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.crate_version\" class=\"method trait-impl\"><a href=\"#method.crate_version\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">crate_version</a>() -&gt; CrateVersion</h4></section></summary><div class='docblock'>Version of the crate containing the pallet.</div></details></div></details>","PalletInfoAccess","ink_e2e::preset::mock_network::parachain::Assets"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PalletsInfoAccess-for-Pallet%3CT,+I%3E\" class=\"impl\"><a href=\"#impl-PalletsInfoAccess-for-Pallet%3CT,+I%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, I&gt; PalletsInfoAccess for Pallet&lt;T, I&gt;<div class=\"where\">where\n    T: Config&lt;I&gt;,\n    I: 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.count\" class=\"method trait-impl\"><a href=\"#method.count\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">count</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>The number of pallets’ information that this type represents. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.infos\" class=\"method trait-impl\"><a href=\"#method.infos\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">infos</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.86.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;PalletInfoData&gt;</h4></section></summary><div class='docblock'>All of the pallets’ information that this type represents.</div></details></div></details>","PalletsInfoAccess","ink_e2e::preset::mock_network::parachain::Assets"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq-for-Pallet%3CT,+I%3E\" class=\"impl\"><a href=\"#impl-PartialEq-for-Pallet%3CT,+I%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, I&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a> for Pallet&lt;T, I&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.86.0/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;Pallet&lt;T, I&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>self</code> and <code>other</code> values to be equal, and is used by <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.86.0/src/core/cmp.rs.html#261\">Source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.86.0/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>!=</code>. The default implementation is almost always sufficient,\nand should not be overridden without very good reason.</div></details></div></details>","PartialEq","ink_e2e::preset::mock_network::parachain::Assets"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Refund%3C%3CT+as+SysConfig%3E::AccountId%3E-for-Pallet%3CT,+I%3E\" class=\"impl\"><a href=\"#impl-Refund%3C%3CT+as+SysConfig%3E::AccountId%3E-for-Pallet%3CT,+I%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, I&gt; Refund&lt;&lt;T as Config&gt;::AccountId&gt; for Pallet&lt;T, I&gt;<div class=\"where\">where\n    T: Config&lt;I&gt;,\n    I: 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.AssetId\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.AssetId\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">AssetId</a> = &lt;T as Config&lt;I&gt;&gt;::AssetId</h4></section></summary><div class='docblock'>Means of identifying one asset class from another.</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Balance\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Balance\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Balance</a> = &lt;&lt;T as Config&lt;I&gt;&gt;::Currency as Currency&lt;&lt;T as Config&gt;::AccountId&gt;&gt;::Balance</h4></section></summary><div class='docblock'>Scalar type for representing deposit balance of an account.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.deposit_held\" class=\"method trait-impl\"><a href=\"#method.deposit_held\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">deposit_held</a>(\n    id: &lt;Pallet&lt;T, I&gt; as Refund&lt;&lt;T as Config&gt;::AccountId&gt;&gt;::AssetId,\n    who: &lt;T as Config&gt;::AccountId,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;(&lt;T as Config&gt;::AccountId, &lt;Pallet&lt;T, I&gt; as Refund&lt;&lt;T as Config&gt;::AccountId&gt;&gt;::Balance)&gt;</h4></section></summary><div class='docblock'>Returns the amount of account deposit and depositor address, if any.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.refund\" class=\"method trait-impl\"><a href=\"#method.refund\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">refund</a>(\n    id: &lt;Pallet&lt;T, I&gt; as Refund&lt;&lt;T as Config&gt;::AccountId&gt;&gt;::AssetId,\n    who: &lt;T as Config&gt;::AccountId,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class='docblock'>Return the deposit (if any) of a target asset account.</div></details></div></details>","Refund<<T as Config>::AccountId>","ink_e2e::preset::mock_network::parachain::Assets"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ResetTeam%3C%3CT+as+SysConfig%3E::AccountId%3E-for-Pallet%3CT,+I%3E\" class=\"impl\"><a href=\"#impl-ResetTeam%3C%3CT+as+SysConfig%3E::AccountId%3E-for-Pallet%3CT,+I%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, I&gt; ResetTeam&lt;&lt;T as Config&gt;::AccountId&gt; for Pallet&lt;T, I&gt;<div class=\"where\">where\n    T: Config&lt;I&gt;,\n    I: 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.reset_team\" class=\"method trait-impl\"><a href=\"#method.reset_team\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">reset_team</a>(\n    id: &lt;T as Config&lt;I&gt;&gt;::AssetId,\n    owner: &lt;T as Config&gt;::AccountId,\n    admin: &lt;T as Config&gt;::AccountId,\n    issuer: &lt;T as Config&gt;::AccountId,\n    freezer: &lt;T as Config&gt;::AccountId,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class='docblock'>Reset the team for the asset with the given <code>id</code>. <a>Read more</a></div></details></div></details>","ResetTeam<<T as Config>::AccountId>","ink_e2e::preset::mock_network::parachain::Assets"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageInfoTrait-for-Pallet%3CT,+I%3E\" class=\"impl\"><a href=\"#impl-StorageInfoTrait-for-Pallet%3CT,+I%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, I&gt; StorageInfoTrait for Pallet&lt;T, I&gt;<div class=\"where\">where\n    T: Config&lt;I&gt;,\n    I: 'static,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.storage_info\" class=\"method trait-impl\"><a href=\"#method.storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.86.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","StorageInfoTrait","ink_e2e::preset::mock_network::parachain::Assets"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StoredMap%3C(%3CT+as+Config%3CI%3E%3E::AssetId,+%3CT+as+SysConfig%3E::AccountId),+%3CT+as+Config%3CI%3E%3E::Extra%3E-for-Pallet%3CT,+I%3E\" class=\"impl\"><a href=\"#impl-StoredMap%3C(%3CT+as+Config%3CI%3E%3E::AssetId,+%3CT+as+SysConfig%3E::AccountId),+%3CT+as+Config%3CI%3E%3E::Extra%3E-for-Pallet%3CT,+I%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, I&gt; StoredMap&lt;(&lt;T as Config&lt;I&gt;&gt;::AssetId, &lt;T as Config&gt;::AccountId), &lt;T as Config&lt;I&gt;&gt;::Extra&gt; for Pallet&lt;T, I&gt;<div class=\"where\">where\n    T: Config&lt;I&gt;,\n    I: 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.get\" class=\"method trait-impl\"><a href=\"#method.get\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">get</a>(\n    id_who: &amp;(&lt;T as Config&lt;I&gt;&gt;::AssetId, &lt;T as Config&gt;::AccountId),\n) -&gt; &lt;T as Config&lt;I&gt;&gt;::Extra</h4></section></summary><div class='docblock'>Get the item, or its default if it doesn’t yet exist; we make no distinction between the\ntwo.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate_exists\" class=\"method trait-impl\"><a href=\"#method.try_mutate_exists\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">try_mutate_exists</a>&lt;R, E&gt;(\n    id_who: &amp;(&lt;T as Config&lt;I&gt;&gt;::AssetId, &lt;T as Config&gt;::AccountId),\n    f: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&lt;T as Config&lt;I&gt;&gt;::Extra&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<div class=\"where\">where\n    E: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;DispatchError&gt;,</div></h4></section></summary><div class='docblock'>Maybe mutate the item only if an <code>Ok</code> value is returned from <code>f</code>. Do nothing if an <code>Err</code> is\nreturned. It is removed or reset to default value if it has been mutated to <code>None</code>.\n<code>f</code> will always be called with an option representing if the storage item exists (<code>Some&lt;V&gt;</code>)\nor if the storage item does not exist (<code>None</code>), independent of the <code>QueryType</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate\" class=\"method trait-impl\"><a href=\"#method.mutate\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">mutate</a>&lt;R&gt;(k: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.reference.html\">&amp;K</a>, f: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.reference.html\">&amp;mut T</a>) -&gt; R) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, DispatchError&gt;</h4></section></summary><div class='docblock'>Mutate the item.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_exists\" class=\"method trait-impl\"><a href=\"#method.mutate_exists\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">mutate_exists</a>&lt;R&gt;(\n    k: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.reference.html\">&amp;K</a>,\n    f: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;) -&gt; R,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, DispatchError&gt;</h4></section></summary><div class='docblock'>Mutate the item, removing or resetting to default value if it has been mutated to <code>None</code>. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.insert\" class=\"method trait-impl\"><a href=\"#method.insert\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">insert</a>(k: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.reference.html\">&amp;K</a>, t: T) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class='docblock'>Set the item to something new.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.remove\" class=\"method trait-impl\"><a href=\"#method.remove\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">remove</a>(k: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.reference.html\">&amp;K</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class='docblock'>Remove the item or otherwise replace it with its default value; we don’t care which.</div></details></div></details>","StoredMap<(<T as Config<I>>::AssetId, <T as Config>::AccountId), <T as Config<I>>::Extra>","ink_e2e::preset::mock_network::parachain::Assets"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Unbalanced%3C%3CT+as+SysConfig%3E::AccountId%3E-for-Pallet%3CT,+I%3E\" class=\"impl\"><a href=\"#impl-Unbalanced%3C%3CT+as+SysConfig%3E::AccountId%3E-for-Pallet%3CT,+I%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, I&gt; Unbalanced&lt;&lt;T as Config&gt;::AccountId&gt; for Pallet&lt;T, I&gt;<div class=\"where\">where\n    T: Config&lt;I&gt;,\n    I: 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.handle_raw_dust\" class=\"method trait-impl\"><a href=\"#method.handle_raw_dust\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">handle_raw_dust</a>(\n    _: &lt;Pallet&lt;T, I&gt; as Inspect&lt;&lt;T as Config&gt;::AccountId&gt;&gt;::AssetId,\n    _: &lt;Pallet&lt;T, I&gt; as Inspect&lt;&lt;T as Config&gt;::AccountId&gt;&gt;::Balance,\n)</h4></section></summary><div class='docblock'>Create some dust and handle it with <code>Self::handle_dust</code>. This is an unbalanced operation\nand it must only be used when an account is modified in a raw fashion, outside of the entire\nfungibles API. The <code>amount</code> is capped at <code>Self::minimum_balance() - 1</code>. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.handle_dust\" class=\"method trait-impl\"><a href=\"#method.handle_dust\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">handle_dust</a>(_: Dust&lt;&lt;T as Config&gt;::AccountId, Pallet&lt;T, I&gt;&gt;)</h4></section></summary><div class='docblock'>Do something with the dust which has been destroyed from the system. <code>Dust</code> can be converted\ninto a <code>Credit</code> with the <code>Balanced</code> trait impl.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.write_balance\" class=\"method trait-impl\"><a href=\"#method.write_balance\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">write_balance</a>(\n    _: &lt;Pallet&lt;T, I&gt; as Inspect&lt;&lt;T as Config&gt;::AccountId&gt;&gt;::AssetId,\n    _: &amp;&lt;T as Config&gt;::AccountId,\n    _: &lt;Pallet&lt;T, I&gt; as Inspect&lt;&lt;T as Config&gt;::AccountId&gt;&gt;::Balance,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&lt;Pallet&lt;T, I&gt; as Inspect&lt;&lt;T as Config&gt;::AccountId&gt;&gt;::Balance&gt;, DispatchError&gt;</h4></section></summary><div class='docblock'>Forcefully set the balance of <code>who</code> to <code>amount</code>. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set_total_issuance\" class=\"method trait-impl\"><a href=\"#method.set_total_issuance\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">set_total_issuance</a>(\n    id: &lt;T as Config&lt;I&gt;&gt;::AssetId,\n    amount: &lt;Pallet&lt;T, I&gt; as Inspect&lt;&lt;T as Config&gt;::AccountId&gt;&gt;::Balance,\n)</h4></section></summary><div class='docblock'>Set the total issuance to <code>amount</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decrease_balance\" class=\"method trait-impl\"><a href=\"#method.decrease_balance\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">decrease_balance</a>(\n    asset: &lt;T as Config&lt;I&gt;&gt;::AssetId,\n    who: &amp;&lt;T as Config&gt;::AccountId,\n    amount: &lt;Pallet&lt;T, I&gt; as Inspect&lt;&lt;T as Config&gt;::AccountId&gt;&gt;::Balance,\n    precision: Precision,\n    preservation: Preservation,\n    _: Fortitude,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&lt;Pallet&lt;T, I&gt; as Inspect&lt;&lt;T as Config&gt;::AccountId&gt;&gt;::Balance, DispatchError&gt;</h4></section></summary><div class='docblock'>Reduce the balance of <code>who</code> by <code>amount</code>. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.increase_balance\" class=\"method trait-impl\"><a href=\"#method.increase_balance\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">increase_balance</a>(\n    asset: &lt;T as Config&lt;I&gt;&gt;::AssetId,\n    who: &amp;&lt;T as Config&gt;::AccountId,\n    amount: &lt;Pallet&lt;T, I&gt; as Inspect&lt;&lt;T as Config&gt;::AccountId&gt;&gt;::Balance,\n    _: Precision,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&lt;Pallet&lt;T, I&gt; as Inspect&lt;&lt;T as Config&gt;::AccountId&gt;&gt;::Balance, DispatchError&gt;</h4></section></summary><div class='docblock'>Increase the balance of <code>who</code> by <code>amount</code>. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.deactivate\" class=\"method trait-impl\"><a href=\"#method.deactivate\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">deactivate</a>(_asset: Self::AssetId, _: Self::Balance)</h4></section></summary><div class='docblock'>Reduce the active issuance by some amount.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.reactivate\" class=\"method trait-impl\"><a href=\"#method.reactivate\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">reactivate</a>(_asset: Self::AssetId, _: Self::Balance)</h4></section></summary><div class='docblock'>Increase the active issuance by some amount, up to the outstanding amount reduced.</div></details></div></details>","Unbalanced<<T as Config>::AccountId>","ink_e2e::preset::mock_network::parachain::Assets"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ViewFunctionIdPrefix-for-Pallet%3CT,+I%3E\" class=\"impl\"><a href=\"#impl-ViewFunctionIdPrefix-for-Pallet%3CT,+I%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, I&gt; ViewFunctionIdPrefix for Pallet&lt;T, I&gt;<div class=\"where\">where\n    T: Config&lt;I&gt;,\n    I: 'static,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.prefix\" class=\"method trait-impl\"><a href=\"#method.prefix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">prefix</a>() -&gt; [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.array.html\">16</a>]</h4></section></div></details>","ViewFunctionIdPrefix","ink_e2e::preset::mock_network::parachain::Assets"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-WhitelistedStorageKeys-for-Pallet%3CT,+I%3E\" class=\"impl\"><a href=\"#impl-WhitelistedStorageKeys-for-Pallet%3CT,+I%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, I&gt; WhitelistedStorageKeys for Pallet&lt;T, I&gt;<div class=\"where\">where\n    T: Config&lt;I&gt;,\n    I: 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.whitelisted_storage_keys\" class=\"method trait-impl\"><a href=\"#method.whitelisted_storage_keys\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">whitelisted_storage_keys</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.86.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;TrackedStorageKey&gt;</h4></section></summary><div class='docblock'>Returns a <a href=\"https://doc.rust-lang.org/1.86.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\"><code>Vec&lt;TrackedStorageKey&gt;</code></a> indicating the storage keys that\nshould be whitelisted during benchmarking. This means that those keys\nwill be excluded from the benchmarking performance calculation.</div></details></div></details>","WhitelistedStorageKeys","ink_e2e::preset::mock_network::parachain::Assets"],["<section id=\"impl-Eq-for-Pallet%3CT,+I%3E\" class=\"impl\"><a href=\"#impl-Eq-for-Pallet%3CT,+I%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, I&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> for Pallet&lt;T, I&gt;</h3></section>","Eq","ink_e2e::preset::mock_network::parachain::Assets"]]]]);
    if (window.register_type_impls) {
        window.register_type_impls(type_impls);
    } else {
        window.pending_type_impls = type_impls;
    }
})()
//{"start":55,"fragment_lengths":[147292]}