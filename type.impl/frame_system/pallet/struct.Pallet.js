(function() {
    var type_impls = Object.fromEntries([["ink_e2e",[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BeforeAllRuntimeMigrations-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-BeforeAllRuntimeMigrations-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; BeforeAllRuntimeMigrations for Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.before_all_runtime_migrations\" class=\"method trait-impl\"><a href=\"#method.before_all_runtime_migrations\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">before_all_runtime_migrations</a>() -&gt; <a class=\"struct\" href=\"ink_e2e/struct.Weight.html\" title=\"struct ink_e2e::Weight\">Weight</a></h4></section></summary><div class='docblock'>Something that should happen before runtime migrations are executed.</div></details></div></details>","BeforeAllRuntimeMigrations","ink_e2e::preset::mock_network::parachain::System","ink_e2e::preset::mock_network::relay_chain::System"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BlockNumberProvider-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-BlockNumberProvider-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; BlockNumberProvider for Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.BlockNumber\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.BlockNumber\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">BlockNumber</a> = &lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number</h4></section></summary><div class='docblock'>Type of <code>BlockNumber</code> to provide.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.current_block_number\" class=\"method trait-impl\"><a href=\"#method.current_block_number\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">current_block_number</a>() -&gt; &lt;Pallet&lt;T&gt; as BlockNumberProvider&gt;::BlockNumber</h4></section></summary><div class='docblock'>Returns the current block number. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set_block_number\" class=\"method trait-impl\"><a href=\"#method.set_block_number\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">set_block_number</a>(_block: Self::BlockNumber)</h4></section></summary><div class='docblock'>Utility function only to be used in benchmarking scenarios or tests, to be implemented\noptionally, else a noop. <a>Read more</a></div></details></div></details>","BlockNumberProvider","ink_e2e::preset::mock_network::parachain::System","ink_e2e::preset::mock_network::relay_chain::System"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Callable%3CT%3E-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-Callable%3CT%3E-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; Callable&lt;T&gt; for Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.RuntimeCall\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.RuntimeCall\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">RuntimeCall</a> = Call&lt;T&gt;</h4></section></div></details>","Callable<T>","ink_e2e::preset::mock_network::parachain::System","ink_e2e::preset::mock_network::relay_chain::System"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-Clone-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for Pallet&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a href=\"#method.clone\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.86.0/core/clone/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; Pallet&lt;T&gt;</h4></section></summary><div class='docblock'>Returns a copy of the value. <a href=\"https://doc.rust-lang.org/1.86.0/core/clone/trait.Clone.html#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.86.0/src/core/clone.rs.html#174\">Source</a></span><a href=\"#method.clone_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.86.0/core/clone/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, source: &amp;Self)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"https://doc.rust-lang.org/1.86.0/core/clone/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","ink_e2e::preset::mock_network::parachain::System","ink_e2e::preset::mock_network::relay_chain::System"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-Debug-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for Pallet&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.86.0/core/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, fmt: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.86.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.86.0/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/1.86.0/core/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","ink_e2e::preset::mock_network::parachain::System","ink_e2e::preset::mock_network::relay_chain::System"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-DispatchViewFunction-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-DispatchViewFunction-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; DispatchViewFunction for Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.dispatch_view_function\" class=\"method trait-impl\"><a href=\"#method.dispatch_view_function\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">dispatch_view_function</a>&lt;O&gt;(\n    id: &amp;ViewFunctionId,\n    input: &amp;mut &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.u8.html\">u8</a>],\n    output: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.reference.html\">&amp;mut O</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.unit.html\">()</a>, ViewFunctionDispatchError&gt;<div class=\"where\">where\n    O: Output,</div></h4></section></div></details>","DispatchViewFunction","ink_e2e::preset::mock_network::parachain::System","ink_e2e::preset::mock_network::relay_chain::System"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-GetStorageVersion-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-GetStorageVersion-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; GetStorageVersion for Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.InCodeStorageVersion\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.InCodeStorageVersion\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">InCodeStorageVersion</a> = NoStorageVersionSet</h4></section></summary><div class='docblock'>This type is generated by the <a href=\"crate::pallet\"><code>pallet</code></a> macro. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.in_code_storage_version\" class=\"method trait-impl\"><a href=\"#method.in_code_storage_version\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">in_code_storage_version</a>() -&gt; &lt;Pallet&lt;T&gt; as GetStorageVersion&gt;::InCodeStorageVersion</h4></section></summary><div class='docblock'>Returns the in-code storage version as specified in the\n<a href=\"crate::pallet_macros::storage_version\"><code>storage_version</code></a> attribute, or\n[<code>NoStorageVersionSet</code>] if the attribute is missing.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_chain_storage_version\" class=\"method trait-impl\"><a href=\"#method.on_chain_storage_version\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">on_chain_storage_version</a>() -&gt; StorageVersion</h4></section></summary><div class='docblock'>Returns the storage version of the pallet as last set in the actual on-chain storage.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.current_storage_version\" class=\"method trait-impl\"><a href=\"#method.current_storage_version\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">current_storage_version</a>() -&gt; Self::InCodeStorageVersion</h4></section></summary><span class=\"item-info\"><div class=\"stab deprecated\"><span class=\"emoji\">👎</span><span>Deprecated: This method has been renamed to <code>in_code_storage_version</code> and will be removed after March 2024.</span></div></span><div class='docblock'>DEPRECATED: Use [<code>Self::current_storage_version</code>] instead. <a>Read more</a></div></details></div></details>","GetStorageVersion","ink_e2e::preset::mock_network::parachain::System","ink_e2e::preset::mock_network::relay_chain::System"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Hooks%3C%3C%3C%3CT+as+SysConfig%3E::Block+as+HeaderProvider%3E::HeaderT+as+Header%3E::Number%3E-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-Hooks%3C%3C%3C%3CT+as+SysConfig%3E::Block+as+HeaderProvider%3E::HeaderT+as+Header%3E::Number%3E-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; Hooks&lt;&lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number&gt; for Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.integrity_test\" class=\"method trait-impl\"><a href=\"#method.integrity_test\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">integrity_test</a>()</h4></section></summary><div class='docblock'>Check the integrity of this pallet’s configuration. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_initialize\" class=\"method trait-impl\"><a href=\"#method.on_initialize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">on_initialize</a>(_n: BlockNumber) -&gt; <a class=\"struct\" href=\"ink_e2e/struct.Weight.html\" title=\"struct ink_e2e::Weight\">Weight</a></h4></section></summary><div class='docblock'>Block initialization hook. This is called at the very beginning of block execution. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_finalize\" class=\"method trait-impl\"><a href=\"#method.on_finalize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">on_finalize</a>(_n: BlockNumber)</h4></section></summary><div class='docblock'>Block finalization hook. This is called at the very end of block execution. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_idle\" class=\"method trait-impl\"><a href=\"#method.on_idle\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">on_idle</a>(_n: BlockNumber, _remaining_weight: <a class=\"struct\" href=\"ink_e2e/struct.Weight.html\" title=\"struct ink_e2e::Weight\">Weight</a>) -&gt; <a class=\"struct\" href=\"ink_e2e/struct.Weight.html\" title=\"struct ink_e2e::Weight\">Weight</a></h4></section></summary><div class='docblock'>Hook to consume a block’s idle time. This will run when the block is being finalized (before\n[<code>Hooks::on_finalize</code>]). <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_poll\" class=\"method trait-impl\"><a href=\"#method.on_poll\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">on_poll</a>(_n: BlockNumber, _weight: &amp;mut WeightMeter)</h4></section></summary><div class='docblock'>A hook to run logic after inherent application. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_runtime_upgrade\" class=\"method trait-impl\"><a href=\"#method.on_runtime_upgrade\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">on_runtime_upgrade</a>() -&gt; <a class=\"struct\" href=\"ink_e2e/struct.Weight.html\" title=\"struct ink_e2e::Weight\">Weight</a></h4></section></summary><div class='docblock'>Hook executed when a code change (aka. a “runtime upgrade”) is detected by the FRAME\n<code>Executive</code> pallet. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.offchain_worker\" class=\"method trait-impl\"><a href=\"#method.offchain_worker\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">offchain_worker</a>(_n: BlockNumber)</h4></section></summary><div class='docblock'>Implementing this function on a pallet allows you to perform long-running tasks that are\ndispatched as separate threads, and entirely independent of the main blockchain execution. <a>Read more</a></div></details></div></details>","Hooks<<<<T as Config>::Block as HeaderProvider>::HeaderT as Header>::Number>","ink_e2e::preset::mock_network::parachain::System","ink_e2e::preset::mock_network::relay_chain::System"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IntegrityTest-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-IntegrityTest-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; IntegrityTest for Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.integrity_test\" class=\"method trait-impl\"><a href=\"#method.integrity_test\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">integrity_test</a>()</h4></section></summary><div class='docblock'>See [<code>Hooks::integrity_test</code>].</div></details></div></details>","IntegrityTest","ink_e2e::preset::mock_network::parachain::System","ink_e2e::preset::mock_network::relay_chain::System"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OffchainWorker%3C%3C%3C%3CT+as+SysConfig%3E::Block+as+HeaderProvider%3E::HeaderT+as+Header%3E::Number%3E-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-OffchainWorker%3C%3C%3C%3CT+as+SysConfig%3E::Block+as+HeaderProvider%3E::HeaderT+as+Header%3E::Number%3E-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; OffchainWorker&lt;&lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number&gt; for Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.offchain_worker\" class=\"method trait-impl\"><a href=\"#method.offchain_worker\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">offchain_worker</a>(\n    n: &lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number,\n)</h4></section></summary><div class='docblock'>This function is being called after every block import (when fully synced). <a>Read more</a></div></details></div></details>","OffchainWorker<<<<T as Config>::Block as HeaderProvider>::HeaderT as Header>::Number>","ink_e2e::preset::mock_network::parachain::System","ink_e2e::preset::mock_network::relay_chain::System"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OnFinalize%3C%3C%3C%3CT+as+SysConfig%3E::Block+as+HeaderProvider%3E::HeaderT+as+Header%3E::Number%3E-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-OnFinalize%3C%3C%3C%3CT+as+SysConfig%3E::Block+as+HeaderProvider%3E::HeaderT+as+Header%3E::Number%3E-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; OnFinalize&lt;&lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number&gt; for Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_finalize\" class=\"method trait-impl\"><a href=\"#method.on_finalize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">on_finalize</a>(\n    n: &lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number,\n)</h4></section></summary><div class='docblock'>See [<code>Hooks::on_finalize</code>].</div></details></div></details>","OnFinalize<<<<T as Config>::Block as HeaderProvider>::HeaderT as Header>::Number>","ink_e2e::preset::mock_network::parachain::System","ink_e2e::preset::mock_network::relay_chain::System"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OnGenesis-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-OnGenesis-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; OnGenesis for Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_genesis\" class=\"method trait-impl\"><a href=\"#method.on_genesis\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">on_genesis</a>()</h4></section></summary><div class='docblock'>Something that should happen at genesis.</div></details></div></details>","OnGenesis","ink_e2e::preset::mock_network::parachain::System","ink_e2e::preset::mock_network::relay_chain::System"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OnIdle%3C%3C%3C%3CT+as+SysConfig%3E::Block+as+HeaderProvider%3E::HeaderT+as+Header%3E::Number%3E-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-OnIdle%3C%3C%3C%3CT+as+SysConfig%3E::Block+as+HeaderProvider%3E::HeaderT+as+Header%3E::Number%3E-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; OnIdle&lt;&lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number&gt; for Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_idle\" class=\"method trait-impl\"><a href=\"#method.on_idle\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">on_idle</a>(\n    n: &lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number,\n    remaining_weight: <a class=\"struct\" href=\"ink_e2e/struct.Weight.html\" title=\"struct ink_e2e::Weight\">Weight</a>,\n) -&gt; <a class=\"struct\" href=\"ink_e2e/struct.Weight.html\" title=\"struct ink_e2e::Weight\">Weight</a></h4></section></summary><div class='docblock'>See [<code>Hooks::on_idle</code>].</div></details></div></details>","OnIdle<<<<T as Config>::Block as HeaderProvider>::HeaderT as Header>::Number>","ink_e2e::preset::mock_network::parachain::System","ink_e2e::preset::mock_network::relay_chain::System"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OnInitialize%3C%3C%3C%3CT+as+SysConfig%3E::Block+as+HeaderProvider%3E::HeaderT+as+Header%3E::Number%3E-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-OnInitialize%3C%3C%3C%3CT+as+SysConfig%3E::Block+as+HeaderProvider%3E::HeaderT+as+Header%3E::Number%3E-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; OnInitialize&lt;&lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number&gt; for Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_initialize\" class=\"method trait-impl\"><a href=\"#method.on_initialize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">on_initialize</a>(\n    n: &lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number,\n) -&gt; <a class=\"struct\" href=\"ink_e2e/struct.Weight.html\" title=\"struct ink_e2e::Weight\">Weight</a></h4></section></summary><div class='docblock'>See [<code>Hooks::on_initialize</code>].</div></details></div></details>","OnInitialize<<<<T as Config>::Block as HeaderProvider>::HeaderT as Header>::Number>","ink_e2e::preset::mock_network::parachain::System","ink_e2e::preset::mock_network::relay_chain::System"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OnPoll%3C%3C%3C%3CT+as+SysConfig%3E::Block+as+HeaderProvider%3E::HeaderT+as+Header%3E::Number%3E-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-OnPoll%3C%3C%3C%3CT+as+SysConfig%3E::Block+as+HeaderProvider%3E::HeaderT+as+Header%3E::Number%3E-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; OnPoll&lt;&lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number&gt; for Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_poll\" class=\"method trait-impl\"><a href=\"#method.on_poll\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">on_poll</a>(\n    n: &lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number,\n    weight: &amp;mut WeightMeter,\n)</h4></section></summary><div class='docblock'>Code to execute every now and then at the beginning of the block after inherent application. <a>Read more</a></div></details></div></details>","OnPoll<<<<T as Config>::Block as HeaderProvider>::HeaderT as Header>::Number>","ink_e2e::preset::mock_network::parachain::System","ink_e2e::preset::mock_network::relay_chain::System"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OnRuntimeUpgrade-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-OnRuntimeUpgrade-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; OnRuntimeUpgrade for Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_runtime_upgrade\" class=\"method trait-impl\"><a href=\"#method.on_runtime_upgrade\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">on_runtime_upgrade</a>() -&gt; <a class=\"struct\" href=\"ink_e2e/struct.Weight.html\" title=\"struct ink_e2e::Weight\">Weight</a></h4></section></summary><div class='docblock'>See [<code>Hooks::on_runtime_upgrade</code>].</div></details></div></details>","OnRuntimeUpgrade","ink_e2e::preset::mock_network::parachain::System","ink_e2e::preset::mock_network::relay_chain::System"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.account\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">account</a>&lt;KArg&gt;(\n    k: KArg,\n) -&gt; AccountInfo&lt;&lt;T as Config&gt;::Nonce, &lt;T as Config&gt;::AccountData&gt;<div class=\"where\">where\n    KArg: EncodeLike&lt;&lt;T as Config&gt;::AccountId&gt;,</div></h4></section></summary><div class=\"docblock\"><p>An auto-generated getter for [<code>Account</code>].</p>\n</div></details></div></details>",0,"ink_e2e::preset::mock_network::parachain::System","ink_e2e::preset::mock_network::relay_chain::System"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.authorized_upgrade\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">authorized_upgrade</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;CodeUpgradeAuthorization&lt;T&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>An auto-generated getter for <code>AuthorizedUpgrade</code>.</p>\n</div></details></div></details>",0,"ink_e2e::preset::mock_network::parachain::System","ink_e2e::preset::mock_network::relay_chain::System"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.block_hash\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">block_hash</a>&lt;KArg&gt;(k: KArg) -&gt; &lt;T as Config&gt;::Hash<div class=\"where\">where\n    KArg: EncodeLike&lt;&lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number&gt;,</div></h4></section></summary><div class=\"docblock\"><p>An auto-generated getter for [<code>BlockHash</code>].</p>\n</div></details></div></details>",0,"ink_e2e::preset::mock_network::parachain::System","ink_e2e::preset::mock_network::relay_chain::System"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.block_number\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">block_number</a>() -&gt; &lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number</h4></section></summary><div class=\"docblock\"><p>An auto-generated getter for <code>Number</code>.</p>\n</div></details></div></details>",0,"ink_e2e::preset::mock_network::parachain::System","ink_e2e::preset::mock_network::relay_chain::System"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.block_weight\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">block_weight</a>() -&gt; PerDispatchClass&lt;<a class=\"struct\" href=\"ink_e2e/struct.Weight.html\" title=\"struct ink_e2e::Weight\">Weight</a>&gt;</h4></section></summary><div class=\"docblock\"><p>An auto-generated getter for [<code>BlockWeight</code>].</p>\n</div></details></div></details>",0,"ink_e2e::preset::mock_network::parachain::System","ink_e2e::preset::mock_network::relay_chain::System"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.digest\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">digest</a>() -&gt; Digest</h4></section></summary><div class=\"docblock\"><p>An auto-generated getter for <code>Digest</code>.</p>\n</div></details></div></details>",0,"ink_e2e::preset::mock_network::parachain::System","ink_e2e::preset::mock_network::relay_chain::System"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.event_count\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">event_count</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class=\"docblock\"><p>An auto-generated getter for <code>EventCount</code>.</p>\n</div></details></div></details>",0,"ink_e2e::preset::mock_network::parachain::System","ink_e2e::preset::mock_network::relay_chain::System"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.event_topics\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">event_topics</a>&lt;KArg&gt;(\n    k: KArg,\n) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.86.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;(&lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.u32.html\">u32</a>)&gt;<div class=\"where\">where\n    KArg: EncodeLike&lt;&lt;T as Config&gt;::Hash&gt;,</div></h4></section></summary><div class=\"docblock\"><p>An auto-generated getter for <code>EventTopics</code>.</p>\n</div></details></div></details>",0,"ink_e2e::preset::mock_network::parachain::System","ink_e2e::preset::mock_network::relay_chain::System"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.extrinsic_data\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">extrinsic_data</a>&lt;KArg&gt;(k: KArg) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.86.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.u8.html\">u8</a>&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"Vec&lt;u8&gt;\">ⓘ</a><div class=\"where\">where\n    KArg: EncodeLike&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.u32.html\">u32</a>&gt;,</div></h4></section></summary><div class=\"docblock\"><p>An auto-generated getter for <code>ExtrinsicData</code>.</p>\n</div></details></div></details>",0,"ink_e2e::preset::mock_network::parachain::System","ink_e2e::preset::mock_network::relay_chain::System"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.last_runtime_upgrade_spec_version\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">last_runtime_upgrade_spec_version</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class=\"docblock\"><p>Returns the <code>spec_version</code> of the last runtime upgrade.</p>\n<p>This function is useful for writing guarded runtime migrations in the runtime. A runtime\nmigration can use the <code>spec_version</code> to ensure that it isn’t applied twice. This works\nsimilar as the storage version for pallets.</p>\n<p>This functions returns the <code>spec_version</code> of the last runtime upgrade while executing the\nruntime migrations\n<a href=\"frame_support::traits::OnRuntimeUpgrade::on_runtime_upgrade\"><code>on_runtime_upgrade</code></a>\nfunction. After all migrations are executed, this will return the <code>spec_version</code> of the\ncurrent runtime until there is another runtime upgrade.</p>\n<p>Example:</p>\n\n<div class=\"example-wrap ignore\"><a href=\"#\" class=\"tooltip\" title=\"This example is not tested\">ⓘ</a><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#[test]\n</span><span class=\"kw\">fn </span>last_runtime_upgrade_spec_version_usage() {\n\t<span class=\"attr\">#[allow(dead_code)]\n\t</span><span class=\"kw\">struct </span>Migration;\n\n\t<span class=\"kw\">impl </span>OnRuntimeUpgrade <span class=\"kw\">for </span>Migration {\n\t\t<span class=\"kw\">fn </span>on_runtime_upgrade() -&gt; Weight {\n\t\t\t<span class=\"comment\">// Ensure to compare the spec version against some static version to prevent applying\n\t\t\t// the same migration multiple times.\n\t\t\t//\n\t\t\t// `1337` here is the spec version of the runtime running on chain. If there is maybe\n\t\t\t// a runtime upgrade in the pipeline of being applied, you should use the spec version\n\t\t\t// of this upgrade.\n\t\t\t</span><span class=\"kw\">if </span>System::last_runtime_upgrade_spec_version() &gt; <span class=\"number\">1337 </span>{\n\t\t\t\t<span class=\"kw\">return </span>Weight::zero()\n\t\t\t}\n\n\t\t\t<span class=\"comment\">// Do the migration.\n\t\t\t</span>Weight::zero()\n\t\t}\n\t}\n}</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.account_exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">account_exists</a>(who: &amp;&lt;T as Config&gt;::AccountId) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Returns true if the given account exists.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.update_code_in_storage\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">update_code_in_storage</a>(code: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.u8.html\">u8</a>])</h4></section></summary><div class=\"docblock\"><p>Write code to the storage and emit related events and digest items.</p>\n<p>Note this function almost never should be used directly. It is exposed\nfor <code>OnSetCode</code> implementations that defer actual code being written to\nthe storage (for instance in case of parachains).</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.inherents_applied\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">inherents_applied</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Whether all inherents have been applied.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.note_inherents_applied\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">note_inherents_applied</a>()</h4></section></summary><div class=\"docblock\"><p>Note that all inherents have been applied.</p>\n<p>Should be called immediately after all inherents have been applied. Must be called at least\nonce per block.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.inc_ref\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">inc_ref</a>(who: &amp;&lt;T as Config&gt;::AccountId)</h4></section><span class=\"item-info\"><div class=\"stab deprecated\"><span class=\"emoji\">👎</span><span>Deprecated: Use <code>inc_consumers</code> instead</span></div></span></summary><div class=\"docblock\"><p>Increment the reference counter on an account.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.dec_ref\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">dec_ref</a>(who: &amp;&lt;T as Config&gt;::AccountId)</h4></section><span class=\"item-info\"><div class=\"stab deprecated\"><span class=\"emoji\">👎</span><span>Deprecated: Use <code>dec_consumers</code> instead</span></div></span></summary><div class=\"docblock\"><p>Decrement the reference counter on an account. This <em>MUST</em> only be done once for every time\nyou called <code>inc_consumers</code> on <code>who</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.refs\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">refs</a>(who: &amp;&lt;T as Config&gt;::AccountId) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.u32.html\">u32</a></h4></section><span class=\"item-info\"><div class=\"stab deprecated\"><span class=\"emoji\">👎</span><span>Deprecated: Use <code>consumers</code> instead</span></div></span></summary><div class=\"docblock\"><p>The number of outstanding references for the account <code>who</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.allow_death\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">allow_death</a>(who: &amp;&lt;T as Config&gt;::AccountId) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.bool.html\">bool</a></h4></section><span class=\"item-info\"><div class=\"stab deprecated\"><span class=\"emoji\">👎</span><span>Deprecated: Use <code>!is_provider_required</code> instead</span></div></span></summary><div class=\"docblock\"><p>True if the account has no outstanding references.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.inc_providers\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">inc_providers</a>(who: &amp;&lt;T as Config&gt;::AccountId) -&gt; IncRefStatus</h4></section></summary><div class=\"docblock\"><p>Increment the provider reference counter on an account.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.dec_providers\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">dec_providers</a>(\n    who: &amp;&lt;T as Config&gt;::AccountId,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;DecRefStatus, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Decrement the provider reference counter on an account.</p>\n<p>This <em>MUST</em> only be done once for every time you called <code>inc_providers</code> on <code>who</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.inc_sufficients\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">inc_sufficients</a>(who: &amp;&lt;T as Config&gt;::AccountId) -&gt; IncRefStatus</h4></section></summary><div class=\"docblock\"><p>Increment the self-sufficient reference counter on an account.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.dec_sufficients\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">dec_sufficients</a>(who: &amp;&lt;T as Config&gt;::AccountId) -&gt; DecRefStatus</h4></section></summary><div class=\"docblock\"><p>Decrement the sufficients reference counter on an account.</p>\n<p>This <em>MUST</em> only be done once for every time you called <code>inc_sufficients</code> on <code>who</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.providers\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">providers</a>(who: &amp;&lt;T as Config&gt;::AccountId) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class=\"docblock\"><p>The number of outstanding provider references for the account <code>who</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.sufficients\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">sufficients</a>(who: &amp;&lt;T as Config&gt;::AccountId) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class=\"docblock\"><p>The number of outstanding sufficient references for the account <code>who</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.reference_count\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">reference_count</a>(who: &amp;&lt;T as Config&gt;::AccountId) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class=\"docblock\"><p>The number of outstanding provider and sufficient references for the account <code>who</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.inc_consumers\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">inc_consumers</a>(\n    who: &amp;&lt;T as Config&gt;::AccountId,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Increment the reference counter on an account.</p>\n<p>The account <code>who</code>’s <code>providers</code> must be non-zero and the current number of consumers must\nbe less than <code>MaxConsumers::max_consumers()</code> or this will return an error.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.inc_consumers_without_limit\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">inc_consumers_without_limit</a>(\n    who: &amp;&lt;T as Config&gt;::AccountId,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Increment the reference counter on an account, ignoring the <code>MaxConsumers</code> limits.</p>\n<p>The account <code>who</code>’s <code>providers</code> must be non-zero or this will return an error.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.dec_consumers\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">dec_consumers</a>(who: &amp;&lt;T as Config&gt;::AccountId)</h4></section></summary><div class=\"docblock\"><p>Decrement the reference counter on an account. This <em>MUST</em> only be done once for every time\nyou called <code>inc_consumers</code> on <code>who</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.consumers\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">consumers</a>(who: &amp;&lt;T as Config&gt;::AccountId) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class=\"docblock\"><p>The number of outstanding references for the account <code>who</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_provider_required\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">is_provider_required</a>(who: &amp;&lt;T as Config&gt;::AccountId) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>True if the account has some outstanding consumer references.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.can_dec_provider\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">can_dec_provider</a>(who: &amp;&lt;T as Config&gt;::AccountId) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>True if the account has no outstanding consumer references or more than one provider.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.can_accrue_consumers\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">can_accrue_consumers</a>(who: &amp;&lt;T as Config&gt;::AccountId, amount: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>True if the account has at least one provider reference and adding <code>amount</code> consumer\nreferences would not take it above the the maximum.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.can_inc_consumer\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">can_inc_consumer</a>(who: &amp;&lt;T as Config&gt;::AccountId) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>True if the account has at least one provider reference and fewer consumer references than\nthe maximum.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.deposit_event\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">deposit_event</a>(event: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;&lt;T as Config&gt;::RuntimeEvent&gt;)</h4></section></summary><div class=\"docblock\"><p>Deposits an event into this block’s event record.</p>\n<p>NOTE: Events not registered at the genesis block and quietly omitted.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.deposit_event_indexed\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">deposit_event_indexed</a>(\n    topics: &amp;[&lt;T as Config&gt;::Hash],\n    event: &lt;T as Config&gt;::RuntimeEvent,\n)</h4></section></summary><div class=\"docblock\"><p>Deposits an event into this block’s event record adding this event\nto the corresponding topic indexes.</p>\n<p>This will update storage entries that correspond to the specified topics.\nIt is expected that light-clients could subscribe to this topics.</p>\n<p>NOTE: Events not registered at the genesis block and quietly omitted.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.extrinsic_index\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">extrinsic_index</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.u32.html\">u32</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Gets the index of extrinsic that is currently executing.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.extrinsic_count\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">extrinsic_count</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class=\"docblock\"><p>Gets extrinsics count.</p>\n</div></details><section id=\"method.all_extrinsics_len\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">all_extrinsics_len</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.u32.html\">u32</a></h4></section><details class=\"toggle method-toggle\" open><summary><section id=\"method.register_extra_weight_unchecked\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">register_extra_weight_unchecked</a>(weight: <a class=\"struct\" href=\"ink_e2e/struct.Weight.html\" title=\"struct ink_e2e::Weight\">Weight</a>, class: DispatchClass)</h4></section></summary><div class=\"docblock\"><p>Inform the system pallet of some additional weight that should be accounted for, in the\ncurrent block.</p>\n<p>NOTE: use with extra care; this function is made public only be used for certain pallets\nthat need it. A runtime that does not have dynamic calls should never need this and should\nstick to static weights. A typical use case for this is inner calls or smart contract calls.\nFurthermore, it only makes sense to use this when it is presumably  <em>cheap</em> to provide the\nargument <code>weight</code>; In other words, if this function is to be used to account for some\nunknown, user provided call’s weight, it would only make sense to use it if you are sure you\ncan rapidly compute the weight of the inner call.</p>\n<p>Even more dangerous is to note that this function does NOT take any action, if the new sum\nof block weight is more than the block weight limit. This is what the <em>unchecked</em>.</p>\n<p>Another potential use-case could be for the <code>on_initialize</code> and <code>on_finalize</code> hooks.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.initialize\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">initialize</a>(\n    number: &amp;&lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number,\n    parent_hash: &amp;&lt;T as Config&gt;::Hash,\n    digest: &amp;Digest,\n)</h4></section></summary><div class=\"docblock\"><p>Start the execution of a particular block.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.finalize\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">finalize</a>() -&gt; &lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT</h4></section></summary><div class=\"docblock\"><p>Remove temporary “environment” entries in storage, compute the storage root and return the\nresulting header for this block.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.deposit_log\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">deposit_log</a>(item: DigestItem)</h4></section></summary><div class=\"docblock\"><p>Deposits a log and ensures it matches the block’s log data.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.externalities\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">externalities</a>() -&gt; TestExternalities&lt;Blake2Hasher&gt;</h4></section></summary><div class=\"docblock\"><p>Get the basic externalities for this pallet, useful for tests.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.events\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">events</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.86.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;EventRecord&lt;&lt;T as Config&gt;::RuntimeEvent, &lt;T as Config&gt;::Hash&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Get the current events deposited by the runtime.</p>\n<p>NOTE: This should only be used in tests. Reading events from the runtime can have a large\nimpact on the PoV size of a block. Users should use alternative and well bounded storage\nitems for any behavior like this.</p>\n<p>NOTE: Events not registered at the genesis block and quietly omitted.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.event_no_consensus\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">event_no_consensus</a>(index: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&lt;T as Config&gt;::RuntimeEvent&gt;</h4></section></summary><div class=\"docblock\"><p>Get a single event at specified index.</p>\n<p>Should only be called if you know what you are doing and outside of the runtime block\nexecution else it can have a large impact on the PoV size of a block.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.read_events_no_consensus\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">read_events_no_consensus</a>() -&gt; impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"struct\" href=\"https://doc.rust-lang.org/1.86.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;EventRecord&lt;&lt;T as Config&gt;::RuntimeEvent, &lt;T as Config&gt;::Hash&gt;&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Get the current events deposited by the runtime.</p>\n<p>Should only be called if you know what you are doing and outside of the runtime block\nexecution else it can have a large impact on the PoV size of a block.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.read_events_for_pallet\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">read_events_for_pallet</a>&lt;E&gt;() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.86.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;E&gt;<div class=\"where\">where\n    &lt;T as Config&gt;::RuntimeEvent: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/convert/trait.TryInto.html\" title=\"trait core::convert::TryInto\">TryInto</a>&lt;E&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Read and return the events of a specific pallet, as denoted by <code>E</code>.</p>\n<p>This is useful for a pallet that wishes to read only the events it has deposited into\n<code>frame_system</code> using the standard <code>fn deposit_event</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.run_to_block_with\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">run_to_block_with</a>&lt;AllPalletsWithSystem&gt;(\n    n: &lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number,\n    hooks: RunToBlockHooks&lt;'_, T&gt;,\n)<div class=\"where\">where\n    AllPalletsWithSystem: OnInitialize&lt;&lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number&gt; + OnFinalize&lt;&lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Simulate the execution of a block sequence up to a specified height, injecting the\nprovided hooks at each block.</p>\n<p><code>on_finalize</code> is always called before <code>on_initialize</code> with the current block number.\n<code>on_initalize</code> is always called with the next block number.</p>\n<p>These hooks allows custom logic to be executed at each block at specific location.\nFor example, you might use one of them to set a timestamp for each block.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.run_to_block\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">run_to_block</a>&lt;AllPalletsWithSystem&gt;(\n    n: &lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number,\n)<div class=\"where\">where\n    AllPalletsWithSystem: OnInitialize&lt;&lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number&gt; + OnFinalize&lt;&lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Simulate the execution of a block sequence up to a specified height.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set_block_number\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">set_block_number</a>(\n    n: &lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number,\n)</h4></section></summary><div class=\"docblock\"><p>Set the block number to something in particular. Can be used as an alternative to\n<code>initialize</code> for tests that don’t need to bother with the other environment entries.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set_extrinsic_index\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">set_extrinsic_index</a>(extrinsic_index: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.u32.html\">u32</a>)</h4></section></summary><div class=\"docblock\"><p>Sets the index of extrinsic that is currently executing.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set_parent_hash\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">set_parent_hash</a>(n: &lt;T as Config&gt;::Hash)</h4></section></summary><div class=\"docblock\"><p>Set the parent hash number to something in particular. Can be used as an alternative to\n<code>initialize</code> for tests that don’t need to bother with the other environment entries.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set_block_consumed_resources\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">set_block_consumed_resources</a>(weight: <a class=\"struct\" href=\"ink_e2e/struct.Weight.html\" title=\"struct ink_e2e::Weight\">Weight</a>, len: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.usize.html\">usize</a>)</h4></section></summary><div class=\"docblock\"><p>Set the current block weight. This should only be used in some integration tests.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.reset_events\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">reset_events</a>()</h4></section></summary><div class=\"docblock\"><p>Reset events.</p>\n<p>This needs to be used in prior calling <a href=\"Self::initialize\"><code>initialize</code></a> for each new block\nto clear events from previous block.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.assert_has_event\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">assert_has_event</a>(event: &lt;T as Config&gt;::RuntimeEvent)</h4></section></summary><div class=\"docblock\"><p>Assert the given <code>event</code> exists.</p>\n<p>NOTE: Events not registered at the genesis block and quietly omitted.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.assert_last_event\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">assert_last_event</a>(event: &lt;T as Config&gt;::RuntimeEvent)</h4></section></summary><div class=\"docblock\"><p>Assert the last event equal to the given <code>event</code>.</p>\n<p>NOTE: Events not registered at the genesis block and quietly omitted.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.runtime_version\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">runtime_version</a>() -&gt; RuntimeVersion</h4></section></summary><div class=\"docblock\"><p>Return the chain’s current runtime version.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.account_nonce\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">account_nonce</a>(\n    who: impl EncodeLike&lt;&lt;T as Config&gt;::AccountId&gt;,\n) -&gt; &lt;T as Config&gt;::Nonce</h4></section></summary><div class=\"docblock\"><p>Retrieve the account transaction counter from storage.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.inc_account_nonce\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">inc_account_nonce</a>(who: impl EncodeLike&lt;&lt;T as Config&gt;::AccountId&gt;)</h4></section></summary><div class=\"docblock\"><p>Increment a particular account’s nonce by 1.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.note_extrinsic\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">note_extrinsic</a>(encoded_xt: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.86.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.u8.html\">u8</a>&gt;)</h4></section></summary><div class=\"docblock\"><p>Note what the extrinsic data of the current extrinsic index is.</p>\n<p>This is required to be called before applying an extrinsic. The data will used\nin [<code>Self::finalize</code>] to calculate the correct extrinsics root.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.note_applied_extrinsic\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">note_applied_extrinsic</a>(\n    r: &amp;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;PostDispatchInfo, DispatchErrorWithPostInfo&lt;PostDispatchInfo&gt;&gt;,\n    info: DispatchInfo,\n)</h4></section></summary><div class=\"docblock\"><p>To be called immediately after an extrinsic has been applied.</p>\n<p>Emits an <code>ExtrinsicSuccess</code> or <code>ExtrinsicFailed</code> event depending on the outcome.\nThe emitted event contains the post-dispatch corrected weight including\nthe base-weight for its dispatch class.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.note_finished_extrinsics\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">note_finished_extrinsics</a>()</h4></section></summary><div class=\"docblock\"><p>To be called immediately after <code>note_applied_extrinsic</code> of the last extrinsic of the block\nhas been called.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.note_finished_initialize\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">note_finished_initialize</a>()</h4></section></summary><div class=\"docblock\"><p>To be called immediately after finishing the initialization of the block\n(e.g., called <code>on_initialize</code> for all pallets).</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_created_account\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">on_created_account</a>(\n    who: &lt;T as Config&gt;::AccountId,\n    _a: &amp;mut AccountInfo&lt;&lt;T as Config&gt;::Nonce, &lt;T as Config&gt;::AccountData&gt;,\n)</h4></section></summary><div class=\"docblock\"><p>An account is being created.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.can_set_code\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">can_set_code</a>(code: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.u8.html\">u8</a>], check_version: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.bool.html\">bool</a>) -&gt; CanSetCodeResult&lt;T&gt;</h4></section></summary><div class=\"docblock\"><p>Determine whether or not it is possible to update the code.</p>\n<ul>\n<li><code>check_version</code>: Should the runtime version be checked?</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.do_authorize_upgrade\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">do_authorize_upgrade</a>(code_hash: &lt;T as Config&gt;::Hash, check_version: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.bool.html\">bool</a>)</h4></section></summary><div class=\"docblock\"><p>Authorize the given <code>code_hash</code> as upgrade.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.reclaim_weight\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">reclaim_weight</a>(\n    info: &amp;&lt;&lt;T as Config&gt;::RuntimeCall as Dispatchable&gt;::Info,\n    post_info: &amp;&lt;&lt;T as Config&gt;::RuntimeCall as Dispatchable&gt;::PostInfo,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.unit.html\">()</a>, TransactionValidityError&gt;<div class=\"where\">where\n    &lt;T as Config&gt;::RuntimeCall: Dispatchable&lt;Info = DispatchInfo, PostInfo = PostDispatchInfo&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Reclaim the weight for the extrinsic given info and post info.</p>\n<p>This function will check the already reclaimed weight, and reclaim more if the\ndifference between pre dispatch and post dispatch weight is higher.</p>\n</div></details></div></details>",0,"ink_e2e::preset::mock_network::parachain::System","ink_e2e::preset::mock_network::relay_chain::System"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.parent_hash\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">parent_hash</a>() -&gt; &lt;T as Config&gt;::Hash</h4></section></summary><div class=\"docblock\"><p>An auto-generated getter for <code>ParentHash</code>.</p>\n</div></details></div></details>",0,"ink_e2e::preset::mock_network::parachain::System","ink_e2e::preset::mock_network::relay_chain::System"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.remark\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">remark</a>(\n    _origin: &lt;T as Config&gt;::RuntimeOrigin,\n    remark: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.86.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.u8.html\">u8</a>&gt;,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;PostDispatchInfo, DispatchErrorWithPostInfo&lt;PostDispatchInfo&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Make some on-chain remark.</p>\n<p>Can be executed by every <code>origin</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set_heap_pages\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">set_heap_pages</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    pages: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.u64.html\">u64</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;PostDispatchInfo, DispatchErrorWithPostInfo&lt;PostDispatchInfo&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Set the number of pages in the WebAssembly environment’s heap.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set_code\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">set_code</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    code: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.86.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.u8.html\">u8</a>&gt;,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;PostDispatchInfo, DispatchErrorWithPostInfo&lt;PostDispatchInfo&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Set the new runtime code.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set_code_without_checks\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">set_code_without_checks</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    code: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.86.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.u8.html\">u8</a>&gt;,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;PostDispatchInfo, DispatchErrorWithPostInfo&lt;PostDispatchInfo&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Set the new runtime code without doing any checks of the given <code>code</code>.</p>\n<p>Note that runtime upgrades will not run if this is called with a not-increasing spec\nversion!</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set_storage\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">set_storage</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    items: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.86.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;(<a class=\"struct\" href=\"https://doc.rust-lang.org/1.86.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.u8.html\">u8</a>&gt;, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.86.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.u8.html\">u8</a>&gt;)&gt;,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;PostDispatchInfo, DispatchErrorWithPostInfo&lt;PostDispatchInfo&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Set some items of storage.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.kill_storage\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">kill_storage</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    keys: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.86.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.86.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.u8.html\">u8</a>&gt;&gt;,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;PostDispatchInfo, DispatchErrorWithPostInfo&lt;PostDispatchInfo&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Kill some items from storage.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.kill_prefix\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">kill_prefix</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    prefix: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.86.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.u8.html\">u8</a>&gt;,\n    subkeys: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.u32.html\">u32</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;PostDispatchInfo, DispatchErrorWithPostInfo&lt;PostDispatchInfo&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Kill all storage items with a key that starts with the given prefix.</p>\n<p><strong>NOTE:</strong> We rely on the Root origin to provide us the number of subkeys under\nthe prefix we are removing to accurately calculate the weight of this function.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.remark_with_event\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">remark_with_event</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    remark: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.86.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.u8.html\">u8</a>&gt;,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;PostDispatchInfo, DispatchErrorWithPostInfo&lt;PostDispatchInfo&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Make some on-chain remark and emit event.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.authorize_upgrade\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">authorize_upgrade</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    code_hash: &lt;T as Config&gt;::Hash,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Authorize an upgrade to a given <code>code_hash</code> for the runtime. The runtime can be supplied\nlater.</p>\n<p>This call requires Root origin.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.authorize_upgrade_without_checks\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">authorize_upgrade_without_checks</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    code_hash: &lt;T as Config&gt;::Hash,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Authorize an upgrade to a given <code>code_hash</code> for the runtime. The runtime can be supplied\nlater.</p>\n<p>WARNING: This authorizes an upgrade that will take place without any safety checks, for\nexample that the spec name remains the same and that the version number increases. Not\nrecommended for normal use. Use <code>authorize_upgrade</code> instead.</p>\n<p>This call requires Root origin.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.apply_authorized_upgrade\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">apply_authorized_upgrade</a>(\n    _: &lt;T as Config&gt;::RuntimeOrigin,\n    code: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.86.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.u8.html\">u8</a>&gt;,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;PostDispatchInfo, DispatchErrorWithPostInfo&lt;PostDispatchInfo&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Provide the preimage (runtime binary) <code>code</code> for an upgrade that has been authorized.</p>\n<p>If the authorization required a version check, this call will ensure the spec name\nremains unchanged and that the spec version has increased.</p>\n<p>Depending on the runtime’s <code>OnSetCode</code> configuration, this function may directly apply\nthe new <code>code</code> in the same block or attempt to schedule the upgrade.</p>\n<p>All origins are allowed.</p>\n</div></details></div></details>",0,"ink_e2e::preset::mock_network::parachain::System","ink_e2e::preset::mock_network::relay_chain::System"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PalletInfoAccess-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-PalletInfoAccess-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; PalletInfoAccess for Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.index\" class=\"method trait-impl\"><a href=\"#method.index\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">index</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Index of the pallet as configured in the runtime.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.name\" class=\"method trait-impl\"><a href=\"#method.name\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">name</a>() -&gt; &amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.str.html\">str</a></h4></section></summary><div class='docblock'>Name of the pallet as configured in the runtime.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.name_hash\" class=\"method trait-impl\"><a href=\"#method.name_hash\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">name_hash</a>() -&gt; [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.array.html\">16</a>]</h4></section></summary><div class='docblock'>Two128 hash of name.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.module_name\" class=\"method trait-impl\"><a href=\"#method.module_name\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">module_name</a>() -&gt; &amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.str.html\">str</a></h4></section></summary><div class='docblock'>Name of the Rust module containing the pallet.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.crate_version\" class=\"method trait-impl\"><a href=\"#method.crate_version\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">crate_version</a>() -&gt; CrateVersion</h4></section></summary><div class='docblock'>Version of the crate containing the pallet.</div></details></div></details>","PalletInfoAccess","ink_e2e::preset::mock_network::parachain::System","ink_e2e::preset::mock_network::relay_chain::System"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PalletsInfoAccess-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-PalletsInfoAccess-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; PalletsInfoAccess for Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.count\" class=\"method trait-impl\"><a href=\"#method.count\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">count</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>The number of pallets’ information that this type represents. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.infos\" class=\"method trait-impl\"><a href=\"#method.infos\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">infos</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.86.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;PalletInfoData&gt;</h4></section></summary><div class='docblock'>All of the pallets’ information that this type represents.</div></details></div></details>","PalletsInfoAccess","ink_e2e::preset::mock_network::parachain::System","ink_e2e::preset::mock_network::relay_chain::System"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-PartialEq-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a> for Pallet&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.86.0/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;Pallet&lt;T&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>self</code> and <code>other</code> values to be equal, and is used by <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.86.0/src/core/cmp.rs.html#261\">Source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.86.0/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>!=</code>. The default implementation is almost always sufficient,\nand should not be overridden without very good reason.</div></details></div></details>","PartialEq","ink_e2e::preset::mock_network::parachain::System","ink_e2e::preset::mock_network::relay_chain::System"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageInfoTrait-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-StorageInfoTrait-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; StorageInfoTrait for Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.storage_info\" class=\"method trait-impl\"><a href=\"#method.storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.86.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","StorageInfoTrait","ink_e2e::preset::mock_network::parachain::System","ink_e2e::preset::mock_network::relay_chain::System"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StoredMap%3C%3CT+as+SysConfig%3E::AccountId,+%3CT+as+SysConfig%3E::AccountData%3E-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-StoredMap%3C%3CT+as+SysConfig%3E::AccountId,+%3CT+as+SysConfig%3E::AccountData%3E-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; StoredMap&lt;&lt;T as Config&gt;::AccountId, &lt;T as Config&gt;::AccountData&gt; for Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3><div class=\"docblock\"><p>Implement StoredMap for a simple single-item, provide-when-not-default system. This works fine\nfor storing a single item which allows the account to continue existing as long as it’s not\nempty/default.</p>\n</div></section></summary><div class=\"docblock\"><p>Anything more complex will need more sophisticated logic.</p>\n</div><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.get\" class=\"method trait-impl\"><a href=\"#method.get\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">get</a>(k: &amp;&lt;T as Config&gt;::AccountId) -&gt; &lt;T as Config&gt;::AccountData</h4></section></summary><div class='docblock'>Get the item, or its default if it doesn’t yet exist; we make no distinction between the\ntwo.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate_exists\" class=\"method trait-impl\"><a href=\"#method.try_mutate_exists\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">try_mutate_exists</a>&lt;R, E&gt;(\n    k: &amp;&lt;T as Config&gt;::AccountId,\n    f: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&lt;T as Config&gt;::AccountData&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<div class=\"where\">where\n    E: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;DispatchError&gt;,</div></h4></section></summary><div class='docblock'>Maybe mutate the item only if an <code>Ok</code> value is returned from <code>f</code>. Do nothing if an <code>Err</code> is\nreturned. It is removed or reset to default value if it has been mutated to <code>None</code>.\n<code>f</code> will always be called with an option representing if the storage item exists (<code>Some&lt;V&gt;</code>)\nor if the storage item does not exist (<code>None</code>), independent of the <code>QueryType</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate\" class=\"method trait-impl\"><a href=\"#method.mutate\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">mutate</a>&lt;R&gt;(k: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.reference.html\">&amp;K</a>, f: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.reference.html\">&amp;mut T</a>) -&gt; R) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, DispatchError&gt;</h4></section></summary><div class='docblock'>Mutate the item.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_exists\" class=\"method trait-impl\"><a href=\"#method.mutate_exists\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">mutate_exists</a>&lt;R&gt;(\n    k: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.reference.html\">&amp;K</a>,\n    f: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;) -&gt; R,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, DispatchError&gt;</h4></section></summary><div class='docblock'>Mutate the item, removing or resetting to default value if it has been mutated to <code>None</code>. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.insert\" class=\"method trait-impl\"><a href=\"#method.insert\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">insert</a>(k: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.reference.html\">&amp;K</a>, t: T) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class='docblock'>Set the item to something new.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.remove\" class=\"method trait-impl\"><a href=\"#method.remove\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">remove</a>(k: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.reference.html\">&amp;K</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class='docblock'>Remove the item or otherwise replace it with its default value; we don’t care which.</div></details></div></details>","StoredMap<<T as Config>::AccountId, <T as Config>::AccountData>","ink_e2e::preset::mock_network::parachain::System","ink_e2e::preset::mock_network::relay_chain::System"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ValidateUnsigned-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-ValidateUnsigned-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; ValidateUnsigned for Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Call\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Call\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Call</a> = Call&lt;T&gt;</h4></section></summary><div class='docblock'>The call to validate</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.validate_unsigned\" class=\"method trait-impl\"><a href=\"#method.validate_unsigned\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">validate_unsigned</a>(\n    _source: TransactionSource,\n    call: &amp;&lt;Pallet&lt;T&gt; as ValidateUnsigned&gt;::Call,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;ValidTransaction, TransactionValidityError&gt;</h4></section></summary><div class='docblock'>Return the validity of the call <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.pre_dispatch\" class=\"method trait-impl\"><a href=\"#method.pre_dispatch\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">pre_dispatch</a>(call: &amp;Self::Call) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.unit.html\">()</a>, TransactionValidityError&gt;</h4></section></summary><div class='docblock'>Validate the call right before dispatch. <a>Read more</a></div></details></div></details>","ValidateUnsigned","ink_e2e::preset::mock_network::parachain::System","ink_e2e::preset::mock_network::relay_chain::System"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ViewFunctionIdPrefix-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-ViewFunctionIdPrefix-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; ViewFunctionIdPrefix for Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.prefix\" class=\"method trait-impl\"><a href=\"#method.prefix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">prefix</a>() -&gt; [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.array.html\">16</a>]</h4></section></div></details>","ViewFunctionIdPrefix","ink_e2e::preset::mock_network::parachain::System","ink_e2e::preset::mock_network::relay_chain::System"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-WhitelistedStorageKeys-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-WhitelistedStorageKeys-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; WhitelistedStorageKeys for Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.whitelisted_storage_keys\" class=\"method trait-impl\"><a href=\"#method.whitelisted_storage_keys\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">whitelisted_storage_keys</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.86.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;TrackedStorageKey&gt;</h4></section></summary><div class='docblock'>Returns a <a href=\"https://doc.rust-lang.org/1.86.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\"><code>Vec&lt;TrackedStorageKey&gt;</code></a> indicating the storage keys that\nshould be whitelisted during benchmarking. This means that those keys\nwill be excluded from the benchmarking performance calculation.</div></details></div></details>","WhitelistedStorageKeys","ink_e2e::preset::mock_network::parachain::System","ink_e2e::preset::mock_network::relay_chain::System"],["<section id=\"impl-Eq-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-Eq-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> for Pallet&lt;T&gt;</h3></section>","Eq","ink_e2e::preset::mock_network::parachain::System","ink_e2e::preset::mock_network::relay_chain::System"]]],["ink_sandbox",[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BeforeAllRuntimeMigrations-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-BeforeAllRuntimeMigrations-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; BeforeAllRuntimeMigrations for Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.before_all_runtime_migrations\" class=\"method trait-impl\"><a href=\"#method.before_all_runtime_migrations\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">before_all_runtime_migrations</a>() -&gt; <a class=\"struct\" href=\"ink_sandbox/struct.Weight.html\" title=\"struct ink_sandbox::Weight\">Weight</a></h4></section></summary><div class='docblock'>Something that should happen before runtime migrations are executed.</div></details></div></details>","BeforeAllRuntimeMigrations","ink_sandbox::macros::construct_runtime::System"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BlockNumberProvider-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-BlockNumberProvider-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; BlockNumberProvider for Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.BlockNumber\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.BlockNumber\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">BlockNumber</a> = &lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number</h4></section></summary><div class='docblock'>Type of <code>BlockNumber</code> to provide.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.current_block_number\" class=\"method trait-impl\"><a href=\"#method.current_block_number\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">current_block_number</a>() -&gt; &lt;Pallet&lt;T&gt; as BlockNumberProvider&gt;::BlockNumber</h4></section></summary><div class='docblock'>Returns the current block number. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set_block_number\" class=\"method trait-impl\"><a href=\"#method.set_block_number\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">set_block_number</a>(_block: Self::BlockNumber)</h4></section></summary><div class='docblock'>Utility function only to be used in benchmarking scenarios or tests, to be implemented\noptionally, else a noop. <a>Read more</a></div></details></div></details>","BlockNumberProvider","ink_sandbox::macros::construct_runtime::System"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Callable%3CT%3E-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-Callable%3CT%3E-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; Callable&lt;T&gt; for Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.RuntimeCall\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.RuntimeCall\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">RuntimeCall</a> = Call&lt;T&gt;</h4></section></div></details>","Callable<T>","ink_sandbox::macros::construct_runtime::System"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-Clone-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for Pallet&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a href=\"#method.clone\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.86.0/core/clone/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; Pallet&lt;T&gt;</h4></section></summary><div class='docblock'>Returns a copy of the value. <a href=\"https://doc.rust-lang.org/1.86.0/core/clone/trait.Clone.html#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.86.0/src/core/clone.rs.html#174\">Source</a></span><a href=\"#method.clone_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.86.0/core/clone/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, source: &amp;Self)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"https://doc.rust-lang.org/1.86.0/core/clone/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","ink_sandbox::macros::construct_runtime::System"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-Debug-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for Pallet&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.86.0/core/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, fmt: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.86.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.86.0/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/1.86.0/core/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","ink_sandbox::macros::construct_runtime::System"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-DispatchViewFunction-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-DispatchViewFunction-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; DispatchViewFunction for Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.dispatch_view_function\" class=\"method trait-impl\"><a href=\"#method.dispatch_view_function\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">dispatch_view_function</a>&lt;O&gt;(\n    id: &amp;ViewFunctionId,\n    input: &amp;mut &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.u8.html\">u8</a>],\n    output: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.reference.html\">&amp;mut O</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.unit.html\">()</a>, ViewFunctionDispatchError&gt;<div class=\"where\">where\n    O: Output,</div></h4></section></div></details>","DispatchViewFunction","ink_sandbox::macros::construct_runtime::System"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-GetStorageVersion-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-GetStorageVersion-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; GetStorageVersion for Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.InCodeStorageVersion\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.InCodeStorageVersion\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">InCodeStorageVersion</a> = NoStorageVersionSet</h4></section></summary><div class='docblock'>This type is generated by the <a href=\"crate::pallet\"><code>pallet</code></a> macro. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.in_code_storage_version\" class=\"method trait-impl\"><a href=\"#method.in_code_storage_version\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">in_code_storage_version</a>() -&gt; &lt;Pallet&lt;T&gt; as GetStorageVersion&gt;::InCodeStorageVersion</h4></section></summary><div class='docblock'>Returns the in-code storage version as specified in the\n<a href=\"crate::pallet_macros::storage_version\"><code>storage_version</code></a> attribute, or\n[<code>NoStorageVersionSet</code>] if the attribute is missing.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_chain_storage_version\" class=\"method trait-impl\"><a href=\"#method.on_chain_storage_version\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">on_chain_storage_version</a>() -&gt; StorageVersion</h4></section></summary><div class='docblock'>Returns the storage version of the pallet as last set in the actual on-chain storage.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.current_storage_version\" class=\"method trait-impl\"><a href=\"#method.current_storage_version\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">current_storage_version</a>() -&gt; Self::InCodeStorageVersion</h4></section></summary><span class=\"item-info\"><div class=\"stab deprecated\"><span class=\"emoji\">👎</span><span>Deprecated: This method has been renamed to <code>in_code_storage_version</code> and will be removed after March 2024.</span></div></span><div class='docblock'>DEPRECATED: Use [<code>Self::current_storage_version</code>] instead. <a>Read more</a></div></details></div></details>","GetStorageVersion","ink_sandbox::macros::construct_runtime::System"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Hooks%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+Header%3E::Number%3E-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-Hooks%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+Header%3E::Number%3E-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; Hooks&lt;&lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number&gt; for Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.integrity_test\" class=\"method trait-impl\"><a href=\"#method.integrity_test\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">integrity_test</a>()</h4></section></summary><div class='docblock'>Check the integrity of this pallet’s configuration. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_initialize\" class=\"method trait-impl\"><a href=\"#method.on_initialize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">on_initialize</a>(_n: BlockNumber) -&gt; <a class=\"struct\" href=\"ink_sandbox/struct.Weight.html\" title=\"struct ink_sandbox::Weight\">Weight</a></h4></section></summary><div class='docblock'>Block initialization hook. This is called at the very beginning of block execution. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_finalize\" class=\"method trait-impl\"><a href=\"#method.on_finalize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">on_finalize</a>(_n: BlockNumber)</h4></section></summary><div class='docblock'>Block finalization hook. This is called at the very end of block execution. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_idle\" class=\"method trait-impl\"><a href=\"#method.on_idle\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">on_idle</a>(_n: BlockNumber, _remaining_weight: <a class=\"struct\" href=\"ink_sandbox/struct.Weight.html\" title=\"struct ink_sandbox::Weight\">Weight</a>) -&gt; <a class=\"struct\" href=\"ink_sandbox/struct.Weight.html\" title=\"struct ink_sandbox::Weight\">Weight</a></h4></section></summary><div class='docblock'>Hook to consume a block’s idle time. This will run when the block is being finalized (before\n[<code>Hooks::on_finalize</code>]). <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_poll\" class=\"method trait-impl\"><a href=\"#method.on_poll\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">on_poll</a>(_n: BlockNumber, _weight: &amp;mut WeightMeter)</h4></section></summary><div class='docblock'>A hook to run logic after inherent application. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_runtime_upgrade\" class=\"method trait-impl\"><a href=\"#method.on_runtime_upgrade\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">on_runtime_upgrade</a>() -&gt; <a class=\"struct\" href=\"ink_sandbox/struct.Weight.html\" title=\"struct ink_sandbox::Weight\">Weight</a></h4></section></summary><div class='docblock'>Hook executed when a code change (aka. a “runtime upgrade”) is detected by the FRAME\n<code>Executive</code> pallet. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.offchain_worker\" class=\"method trait-impl\"><a href=\"#method.offchain_worker\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">offchain_worker</a>(_n: BlockNumber)</h4></section></summary><div class='docblock'>Implementing this function on a pallet allows you to perform long-running tasks that are\ndispatched as separate threads, and entirely independent of the main blockchain execution. <a>Read more</a></div></details></div></details>","Hooks<<<<T as Config>::Block as HeaderProvider>::HeaderT as Header>::Number>","ink_sandbox::macros::construct_runtime::System"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IntegrityTest-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-IntegrityTest-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; IntegrityTest for Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.integrity_test\" class=\"method trait-impl\"><a href=\"#method.integrity_test\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">integrity_test</a>()</h4></section></summary><div class='docblock'>See [<code>Hooks::integrity_test</code>].</div></details></div></details>","IntegrityTest","ink_sandbox::macros::construct_runtime::System"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OffchainWorker%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+Header%3E::Number%3E-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-OffchainWorker%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+Header%3E::Number%3E-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; OffchainWorker&lt;&lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number&gt; for Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.offchain_worker\" class=\"method trait-impl\"><a href=\"#method.offchain_worker\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">offchain_worker</a>(\n    n: &lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number,\n)</h4></section></summary><div class='docblock'>This function is being called after every block import (when fully synced). <a>Read more</a></div></details></div></details>","OffchainWorker<<<<T as Config>::Block as HeaderProvider>::HeaderT as Header>::Number>","ink_sandbox::macros::construct_runtime::System"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OnFinalize%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+Header%3E::Number%3E-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-OnFinalize%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+Header%3E::Number%3E-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; OnFinalize&lt;&lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number&gt; for Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_finalize\" class=\"method trait-impl\"><a href=\"#method.on_finalize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">on_finalize</a>(\n    n: &lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number,\n)</h4></section></summary><div class='docblock'>See [<code>Hooks::on_finalize</code>].</div></details></div></details>","OnFinalize<<<<T as Config>::Block as HeaderProvider>::HeaderT as Header>::Number>","ink_sandbox::macros::construct_runtime::System"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OnGenesis-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-OnGenesis-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; OnGenesis for Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_genesis\" class=\"method trait-impl\"><a href=\"#method.on_genesis\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">on_genesis</a>()</h4></section></summary><div class='docblock'>Something that should happen at genesis.</div></details></div></details>","OnGenesis","ink_sandbox::macros::construct_runtime::System"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OnIdle%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+Header%3E::Number%3E-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-OnIdle%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+Header%3E::Number%3E-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; OnIdle&lt;&lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number&gt; for Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_idle\" class=\"method trait-impl\"><a href=\"#method.on_idle\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">on_idle</a>(\n    n: &lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number,\n    remaining_weight: <a class=\"struct\" href=\"ink_sandbox/struct.Weight.html\" title=\"struct ink_sandbox::Weight\">Weight</a>,\n) -&gt; <a class=\"struct\" href=\"ink_sandbox/struct.Weight.html\" title=\"struct ink_sandbox::Weight\">Weight</a></h4></section></summary><div class='docblock'>See [<code>Hooks::on_idle</code>].</div></details></div></details>","OnIdle<<<<T as Config>::Block as HeaderProvider>::HeaderT as Header>::Number>","ink_sandbox::macros::construct_runtime::System"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OnInitialize%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+Header%3E::Number%3E-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-OnInitialize%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+Header%3E::Number%3E-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; OnInitialize&lt;&lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number&gt; for Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_initialize\" class=\"method trait-impl\"><a href=\"#method.on_initialize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">on_initialize</a>(\n    n: &lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number,\n) -&gt; <a class=\"struct\" href=\"ink_sandbox/struct.Weight.html\" title=\"struct ink_sandbox::Weight\">Weight</a></h4></section></summary><div class='docblock'>See [<code>Hooks::on_initialize</code>].</div></details></div></details>","OnInitialize<<<<T as Config>::Block as HeaderProvider>::HeaderT as Header>::Number>","ink_sandbox::macros::construct_runtime::System"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OnPoll%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+Header%3E::Number%3E-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-OnPoll%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+Header%3E::Number%3E-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; OnPoll&lt;&lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number&gt; for Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_poll\" class=\"method trait-impl\"><a href=\"#method.on_poll\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">on_poll</a>(\n    n: &lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number,\n    weight: &amp;mut WeightMeter,\n)</h4></section></summary><div class='docblock'>Code to execute every now and then at the beginning of the block after inherent application. <a>Read more</a></div></details></div></details>","OnPoll<<<<T as Config>::Block as HeaderProvider>::HeaderT as Header>::Number>","ink_sandbox::macros::construct_runtime::System"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OnRuntimeUpgrade-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-OnRuntimeUpgrade-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; OnRuntimeUpgrade for Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_runtime_upgrade\" class=\"method trait-impl\"><a href=\"#method.on_runtime_upgrade\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">on_runtime_upgrade</a>() -&gt; <a class=\"struct\" href=\"ink_sandbox/struct.Weight.html\" title=\"struct ink_sandbox::Weight\">Weight</a></h4></section></summary><div class='docblock'>See [<code>Hooks::on_runtime_upgrade</code>].</div></details></div></details>","OnRuntimeUpgrade","ink_sandbox::macros::construct_runtime::System"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.account\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">account</a>&lt;KArg&gt;(\n    k: KArg,\n) -&gt; AccountInfo&lt;&lt;T as Config&gt;::Nonce, &lt;T as Config&gt;::AccountData&gt;<div class=\"where\">where\n    KArg: EncodeLike&lt;&lt;T as Config&gt;::AccountId&gt;,</div></h4></section></summary><div class=\"docblock\"><p>An auto-generated getter for [<code>Account</code>].</p>\n</div></details></div></details>",0,"ink_sandbox::macros::construct_runtime::System"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.authorized_upgrade\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">authorized_upgrade</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;CodeUpgradeAuthorization&lt;T&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>An auto-generated getter for <code>AuthorizedUpgrade</code>.</p>\n</div></details></div></details>",0,"ink_sandbox::macros::construct_runtime::System"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.block_hash\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">block_hash</a>&lt;KArg&gt;(k: KArg) -&gt; &lt;T as Config&gt;::Hash<div class=\"where\">where\n    KArg: EncodeLike&lt;&lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number&gt;,</div></h4></section></summary><div class=\"docblock\"><p>An auto-generated getter for [<code>BlockHash</code>].</p>\n</div></details></div></details>",0,"ink_sandbox::macros::construct_runtime::System"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.block_number\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">block_number</a>() -&gt; &lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number</h4></section></summary><div class=\"docblock\"><p>An auto-generated getter for <code>Number</code>.</p>\n</div></details></div></details>",0,"ink_sandbox::macros::construct_runtime::System"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.block_weight\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">block_weight</a>() -&gt; PerDispatchClass&lt;<a class=\"struct\" href=\"ink_sandbox/struct.Weight.html\" title=\"struct ink_sandbox::Weight\">Weight</a>&gt;</h4></section></summary><div class=\"docblock\"><p>An auto-generated getter for [<code>BlockWeight</code>].</p>\n</div></details></div></details>",0,"ink_sandbox::macros::construct_runtime::System"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.digest\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">digest</a>() -&gt; Digest</h4></section></summary><div class=\"docblock\"><p>An auto-generated getter for <code>Digest</code>.</p>\n</div></details></div></details>",0,"ink_sandbox::macros::construct_runtime::System"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.event_count\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">event_count</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class=\"docblock\"><p>An auto-generated getter for <code>EventCount</code>.</p>\n</div></details></div></details>",0,"ink_sandbox::macros::construct_runtime::System"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.event_topics\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">event_topics</a>&lt;KArg&gt;(\n    k: KArg,\n) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.86.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;(&lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.u32.html\">u32</a>)&gt;<div class=\"where\">where\n    KArg: EncodeLike&lt;&lt;T as Config&gt;::Hash&gt;,</div></h4></section></summary><div class=\"docblock\"><p>An auto-generated getter for <code>EventTopics</code>.</p>\n</div></details></div></details>",0,"ink_sandbox::macros::construct_runtime::System"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.extrinsic_data\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">extrinsic_data</a>&lt;KArg&gt;(k: KArg) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.86.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.u8.html\">u8</a>&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"Vec&lt;u8&gt;\">ⓘ</a><div class=\"where\">where\n    KArg: EncodeLike&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.u32.html\">u32</a>&gt;,</div></h4></section></summary><div class=\"docblock\"><p>An auto-generated getter for <code>ExtrinsicData</code>.</p>\n</div></details></div></details>",0,"ink_sandbox::macros::construct_runtime::System"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.last_runtime_upgrade_spec_version\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">last_runtime_upgrade_spec_version</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class=\"docblock\"><p>Returns the <code>spec_version</code> of the last runtime upgrade.</p>\n<p>This function is useful for writing guarded runtime migrations in the runtime. A runtime\nmigration can use the <code>spec_version</code> to ensure that it isn’t applied twice. This works\nsimilar as the storage version for pallets.</p>\n<p>This functions returns the <code>spec_version</code> of the last runtime upgrade while executing the\nruntime migrations\n<a href=\"frame_support::traits::OnRuntimeUpgrade::on_runtime_upgrade\"><code>on_runtime_upgrade</code></a>\nfunction. After all migrations are executed, this will return the <code>spec_version</code> of the\ncurrent runtime until there is another runtime upgrade.</p>\n<p>Example:</p>\n\n<div class=\"example-wrap ignore\"><a href=\"#\" class=\"tooltip\" title=\"This example is not tested\">ⓘ</a><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#[test]\n</span><span class=\"kw\">fn </span>last_runtime_upgrade_spec_version_usage() {\n\t<span class=\"attr\">#[allow(dead_code)]\n\t</span><span class=\"kw\">struct </span>Migration;\n\n\t<span class=\"kw\">impl </span>OnRuntimeUpgrade <span class=\"kw\">for </span>Migration {\n\t\t<span class=\"kw\">fn </span>on_runtime_upgrade() -&gt; Weight {\n\t\t\t<span class=\"comment\">// Ensure to compare the spec version against some static version to prevent applying\n\t\t\t// the same migration multiple times.\n\t\t\t//\n\t\t\t// `1337` here is the spec version of the runtime running on chain. If there is maybe\n\t\t\t// a runtime upgrade in the pipeline of being applied, you should use the spec version\n\t\t\t// of this upgrade.\n\t\t\t</span><span class=\"kw\">if </span>System::last_runtime_upgrade_spec_version() &gt; <span class=\"number\">1337 </span>{\n\t\t\t\t<span class=\"kw\">return </span>Weight::zero()\n\t\t\t}\n\n\t\t\t<span class=\"comment\">// Do the migration.\n\t\t\t</span>Weight::zero()\n\t\t}\n\t}\n}</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.account_exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">account_exists</a>(who: &amp;&lt;T as Config&gt;::AccountId) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Returns true if the given account exists.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.update_code_in_storage\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">update_code_in_storage</a>(code: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.u8.html\">u8</a>])</h4></section></summary><div class=\"docblock\"><p>Write code to the storage and emit related events and digest items.</p>\n<p>Note this function almost never should be used directly. It is exposed\nfor <code>OnSetCode</code> implementations that defer actual code being written to\nthe storage (for instance in case of parachains).</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.inherents_applied\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">inherents_applied</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Whether all inherents have been applied.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.note_inherents_applied\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">note_inherents_applied</a>()</h4></section></summary><div class=\"docblock\"><p>Note that all inherents have been applied.</p>\n<p>Should be called immediately after all inherents have been applied. Must be called at least\nonce per block.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.inc_ref\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">inc_ref</a>(who: &amp;&lt;T as Config&gt;::AccountId)</h4></section><span class=\"item-info\"><div class=\"stab deprecated\"><span class=\"emoji\">👎</span><span>Deprecated: Use <code>inc_consumers</code> instead</span></div></span></summary><div class=\"docblock\"><p>Increment the reference counter on an account.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.dec_ref\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">dec_ref</a>(who: &amp;&lt;T as Config&gt;::AccountId)</h4></section><span class=\"item-info\"><div class=\"stab deprecated\"><span class=\"emoji\">👎</span><span>Deprecated: Use <code>dec_consumers</code> instead</span></div></span></summary><div class=\"docblock\"><p>Decrement the reference counter on an account. This <em>MUST</em> only be done once for every time\nyou called <code>inc_consumers</code> on <code>who</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.refs\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">refs</a>(who: &amp;&lt;T as Config&gt;::AccountId) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.u32.html\">u32</a></h4></section><span class=\"item-info\"><div class=\"stab deprecated\"><span class=\"emoji\">👎</span><span>Deprecated: Use <code>consumers</code> instead</span></div></span></summary><div class=\"docblock\"><p>The number of outstanding references for the account <code>who</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.allow_death\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">allow_death</a>(who: &amp;&lt;T as Config&gt;::AccountId) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.bool.html\">bool</a></h4></section><span class=\"item-info\"><div class=\"stab deprecated\"><span class=\"emoji\">👎</span><span>Deprecated: Use <code>!is_provider_required</code> instead</span></div></span></summary><div class=\"docblock\"><p>True if the account has no outstanding references.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.inc_providers\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">inc_providers</a>(who: &amp;&lt;T as Config&gt;::AccountId) -&gt; IncRefStatus</h4></section></summary><div class=\"docblock\"><p>Increment the provider reference counter on an account.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.dec_providers\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">dec_providers</a>(\n    who: &amp;&lt;T as Config&gt;::AccountId,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;DecRefStatus, <a class=\"enum\" href=\"ink_sandbox/enum.DispatchError.html\" title=\"enum ink_sandbox::DispatchError\">DispatchError</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Decrement the provider reference counter on an account.</p>\n<p>This <em>MUST</em> only be done once for every time you called <code>inc_providers</code> on <code>who</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.inc_sufficients\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">inc_sufficients</a>(who: &amp;&lt;T as Config&gt;::AccountId) -&gt; IncRefStatus</h4></section></summary><div class=\"docblock\"><p>Increment the self-sufficient reference counter on an account.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.dec_sufficients\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">dec_sufficients</a>(who: &amp;&lt;T as Config&gt;::AccountId) -&gt; DecRefStatus</h4></section></summary><div class=\"docblock\"><p>Decrement the sufficients reference counter on an account.</p>\n<p>This <em>MUST</em> only be done once for every time you called <code>inc_sufficients</code> on <code>who</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.providers\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">providers</a>(who: &amp;&lt;T as Config&gt;::AccountId) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class=\"docblock\"><p>The number of outstanding provider references for the account <code>who</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.sufficients\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">sufficients</a>(who: &amp;&lt;T as Config&gt;::AccountId) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class=\"docblock\"><p>The number of outstanding sufficient references for the account <code>who</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.reference_count\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">reference_count</a>(who: &amp;&lt;T as Config&gt;::AccountId) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class=\"docblock\"><p>The number of outstanding provider and sufficient references for the account <code>who</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.inc_consumers\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">inc_consumers</a>(\n    who: &amp;&lt;T as Config&gt;::AccountId,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.unit.html\">()</a>, <a class=\"enum\" href=\"ink_sandbox/enum.DispatchError.html\" title=\"enum ink_sandbox::DispatchError\">DispatchError</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Increment the reference counter on an account.</p>\n<p>The account <code>who</code>’s <code>providers</code> must be non-zero and the current number of consumers must\nbe less than <code>MaxConsumers::max_consumers()</code> or this will return an error.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.inc_consumers_without_limit\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">inc_consumers_without_limit</a>(\n    who: &amp;&lt;T as Config&gt;::AccountId,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.unit.html\">()</a>, <a class=\"enum\" href=\"ink_sandbox/enum.DispatchError.html\" title=\"enum ink_sandbox::DispatchError\">DispatchError</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Increment the reference counter on an account, ignoring the <code>MaxConsumers</code> limits.</p>\n<p>The account <code>who</code>’s <code>providers</code> must be non-zero or this will return an error.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.dec_consumers\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">dec_consumers</a>(who: &amp;&lt;T as Config&gt;::AccountId)</h4></section></summary><div class=\"docblock\"><p>Decrement the reference counter on an account. This <em>MUST</em> only be done once for every time\nyou called <code>inc_consumers</code> on <code>who</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.consumers\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">consumers</a>(who: &amp;&lt;T as Config&gt;::AccountId) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class=\"docblock\"><p>The number of outstanding references for the account <code>who</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_provider_required\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">is_provider_required</a>(who: &amp;&lt;T as Config&gt;::AccountId) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>True if the account has some outstanding consumer references.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.can_dec_provider\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">can_dec_provider</a>(who: &amp;&lt;T as Config&gt;::AccountId) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>True if the account has no outstanding consumer references or more than one provider.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.can_accrue_consumers\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">can_accrue_consumers</a>(who: &amp;&lt;T as Config&gt;::AccountId, amount: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>True if the account has at least one provider reference and adding <code>amount</code> consumer\nreferences would not take it above the the maximum.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.can_inc_consumer\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">can_inc_consumer</a>(who: &amp;&lt;T as Config&gt;::AccountId) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>True if the account has at least one provider reference and fewer consumer references than\nthe maximum.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.deposit_event\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">deposit_event</a>(event: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;&lt;T as Config&gt;::RuntimeEvent&gt;)</h4></section></summary><div class=\"docblock\"><p>Deposits an event into this block’s event record.</p>\n<p>NOTE: Events not registered at the genesis block and quietly omitted.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.deposit_event_indexed\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">deposit_event_indexed</a>(\n    topics: &amp;[&lt;T as Config&gt;::Hash],\n    event: &lt;T as Config&gt;::RuntimeEvent,\n)</h4></section></summary><div class=\"docblock\"><p>Deposits an event into this block’s event record adding this event\nto the corresponding topic indexes.</p>\n<p>This will update storage entries that correspond to the specified topics.\nIt is expected that light-clients could subscribe to this topics.</p>\n<p>NOTE: Events not registered at the genesis block and quietly omitted.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.extrinsic_index\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">extrinsic_index</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.u32.html\">u32</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Gets the index of extrinsic that is currently executing.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.extrinsic_count\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">extrinsic_count</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class=\"docblock\"><p>Gets extrinsics count.</p>\n</div></details><section id=\"method.all_extrinsics_len\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">all_extrinsics_len</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.u32.html\">u32</a></h4></section><details class=\"toggle method-toggle\" open><summary><section id=\"method.register_extra_weight_unchecked\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">register_extra_weight_unchecked</a>(weight: <a class=\"struct\" href=\"ink_sandbox/struct.Weight.html\" title=\"struct ink_sandbox::Weight\">Weight</a>, class: DispatchClass)</h4></section></summary><div class=\"docblock\"><p>Inform the system pallet of some additional weight that should be accounted for, in the\ncurrent block.</p>\n<p>NOTE: use with extra care; this function is made public only be used for certain pallets\nthat need it. A runtime that does not have dynamic calls should never need this and should\nstick to static weights. A typical use case for this is inner calls or smart contract calls.\nFurthermore, it only makes sense to use this when it is presumably  <em>cheap</em> to provide the\nargument <code>weight</code>; In other words, if this function is to be used to account for some\nunknown, user provided call’s weight, it would only make sense to use it if you are sure you\ncan rapidly compute the weight of the inner call.</p>\n<p>Even more dangerous is to note that this function does NOT take any action, if the new sum\nof block weight is more than the block weight limit. This is what the <em>unchecked</em>.</p>\n<p>Another potential use-case could be for the <code>on_initialize</code> and <code>on_finalize</code> hooks.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.initialize\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">initialize</a>(\n    number: &amp;&lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number,\n    parent_hash: &amp;&lt;T as Config&gt;::Hash,\n    digest: &amp;Digest,\n)</h4></section></summary><div class=\"docblock\"><p>Start the execution of a particular block.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.finalize\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">finalize</a>() -&gt; &lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT</h4></section></summary><div class=\"docblock\"><p>Remove temporary “environment” entries in storage, compute the storage root and return the\nresulting header for this block.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.deposit_log\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">deposit_log</a>(item: DigestItem)</h4></section></summary><div class=\"docblock\"><p>Deposits a log and ensures it matches the block’s log data.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.externalities\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">externalities</a>() -&gt; TestExternalities&lt;Blake2Hasher&gt;</h4></section></summary><div class=\"docblock\"><p>Get the basic externalities for this pallet, useful for tests.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.events\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">events</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.86.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;EventRecord&lt;&lt;T as Config&gt;::RuntimeEvent, &lt;T as Config&gt;::Hash&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Get the current events deposited by the runtime.</p>\n<p>NOTE: This should only be used in tests. Reading events from the runtime can have a large\nimpact on the PoV size of a block. Users should use alternative and well bounded storage\nitems for any behavior like this.</p>\n<p>NOTE: Events not registered at the genesis block and quietly omitted.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.event_no_consensus\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">event_no_consensus</a>(index: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&lt;T as Config&gt;::RuntimeEvent&gt;</h4></section></summary><div class=\"docblock\"><p>Get a single event at specified index.</p>\n<p>Should only be called if you know what you are doing and outside of the runtime block\nexecution else it can have a large impact on the PoV size of a block.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.read_events_no_consensus\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">read_events_no_consensus</a>() -&gt; impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"struct\" href=\"https://doc.rust-lang.org/1.86.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;EventRecord&lt;&lt;T as Config&gt;::RuntimeEvent, &lt;T as Config&gt;::Hash&gt;&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Get the current events deposited by the runtime.</p>\n<p>Should only be called if you know what you are doing and outside of the runtime block\nexecution else it can have a large impact on the PoV size of a block.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.read_events_for_pallet\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">read_events_for_pallet</a>&lt;E&gt;() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.86.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;E&gt;<div class=\"where\">where\n    &lt;T as Config&gt;::RuntimeEvent: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/convert/trait.TryInto.html\" title=\"trait core::convert::TryInto\">TryInto</a>&lt;E&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Read and return the events of a specific pallet, as denoted by <code>E</code>.</p>\n<p>This is useful for a pallet that wishes to read only the events it has deposited into\n<code>frame_system</code> using the standard <code>fn deposit_event</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.run_to_block_with\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">run_to_block_with</a>&lt;AllPalletsWithSystem&gt;(\n    n: &lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number,\n    hooks: RunToBlockHooks&lt;'_, T&gt;,\n)<div class=\"where\">where\n    AllPalletsWithSystem: OnInitialize&lt;&lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number&gt; + OnFinalize&lt;&lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Simulate the execution of a block sequence up to a specified height, injecting the\nprovided hooks at each block.</p>\n<p><code>on_finalize</code> is always called before <code>on_initialize</code> with the current block number.\n<code>on_initalize</code> is always called with the next block number.</p>\n<p>These hooks allows custom logic to be executed at each block at specific location.\nFor example, you might use one of them to set a timestamp for each block.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.run_to_block\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">run_to_block</a>&lt;AllPalletsWithSystem&gt;(\n    n: &lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number,\n)<div class=\"where\">where\n    AllPalletsWithSystem: OnInitialize&lt;&lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number&gt; + OnFinalize&lt;&lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Simulate the execution of a block sequence up to a specified height.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set_block_number\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">set_block_number</a>(\n    n: &lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number,\n)</h4></section></summary><div class=\"docblock\"><p>Set the block number to something in particular. Can be used as an alternative to\n<code>initialize</code> for tests that don’t need to bother with the other environment entries.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set_extrinsic_index\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">set_extrinsic_index</a>(extrinsic_index: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.u32.html\">u32</a>)</h4></section></summary><div class=\"docblock\"><p>Sets the index of extrinsic that is currently executing.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set_parent_hash\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">set_parent_hash</a>(n: &lt;T as Config&gt;::Hash)</h4></section></summary><div class=\"docblock\"><p>Set the parent hash number to something in particular. Can be used as an alternative to\n<code>initialize</code> for tests that don’t need to bother with the other environment entries.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set_block_consumed_resources\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">set_block_consumed_resources</a>(weight: <a class=\"struct\" href=\"ink_sandbox/struct.Weight.html\" title=\"struct ink_sandbox::Weight\">Weight</a>, len: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.usize.html\">usize</a>)</h4></section></summary><div class=\"docblock\"><p>Set the current block weight. This should only be used in some integration tests.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.reset_events\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">reset_events</a>()</h4></section></summary><div class=\"docblock\"><p>Reset events.</p>\n<p>This needs to be used in prior calling <a href=\"Self::initialize\"><code>initialize</code></a> for each new block\nto clear events from previous block.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.assert_has_event\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">assert_has_event</a>(event: &lt;T as Config&gt;::RuntimeEvent)</h4></section></summary><div class=\"docblock\"><p>Assert the given <code>event</code> exists.</p>\n<p>NOTE: Events not registered at the genesis block and quietly omitted.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.assert_last_event\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">assert_last_event</a>(event: &lt;T as Config&gt;::RuntimeEvent)</h4></section></summary><div class=\"docblock\"><p>Assert the last event equal to the given <code>event</code>.</p>\n<p>NOTE: Events not registered at the genesis block and quietly omitted.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.runtime_version\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">runtime_version</a>() -&gt; RuntimeVersion</h4></section></summary><div class=\"docblock\"><p>Return the chain’s current runtime version.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.account_nonce\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">account_nonce</a>(\n    who: impl EncodeLike&lt;&lt;T as Config&gt;::AccountId&gt;,\n) -&gt; &lt;T as Config&gt;::Nonce</h4></section></summary><div class=\"docblock\"><p>Retrieve the account transaction counter from storage.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.inc_account_nonce\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">inc_account_nonce</a>(who: impl EncodeLike&lt;&lt;T as Config&gt;::AccountId&gt;)</h4></section></summary><div class=\"docblock\"><p>Increment a particular account’s nonce by 1.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.note_extrinsic\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">note_extrinsic</a>(encoded_xt: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.86.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.u8.html\">u8</a>&gt;)</h4></section></summary><div class=\"docblock\"><p>Note what the extrinsic data of the current extrinsic index is.</p>\n<p>This is required to be called before applying an extrinsic. The data will used\nin [<code>Self::finalize</code>] to calculate the correct extrinsics root.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.note_applied_extrinsic\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">note_applied_extrinsic</a>(\n    r: &amp;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;PostDispatchInfo, DispatchErrorWithPostInfo&lt;PostDispatchInfo&gt;&gt;,\n    info: DispatchInfo,\n)</h4></section></summary><div class=\"docblock\"><p>To be called immediately after an extrinsic has been applied.</p>\n<p>Emits an <code>ExtrinsicSuccess</code> or <code>ExtrinsicFailed</code> event depending on the outcome.\nThe emitted event contains the post-dispatch corrected weight including\nthe base-weight for its dispatch class.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.note_finished_extrinsics\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">note_finished_extrinsics</a>()</h4></section></summary><div class=\"docblock\"><p>To be called immediately after <code>note_applied_extrinsic</code> of the last extrinsic of the block\nhas been called.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.note_finished_initialize\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">note_finished_initialize</a>()</h4></section></summary><div class=\"docblock\"><p>To be called immediately after finishing the initialization of the block\n(e.g., called <code>on_initialize</code> for all pallets).</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_created_account\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">on_created_account</a>(\n    who: &lt;T as Config&gt;::AccountId,\n    _a: &amp;mut AccountInfo&lt;&lt;T as Config&gt;::Nonce, &lt;T as Config&gt;::AccountData&gt;,\n)</h4></section></summary><div class=\"docblock\"><p>An account is being created.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.can_set_code\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">can_set_code</a>(code: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.u8.html\">u8</a>], check_version: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.bool.html\">bool</a>) -&gt; CanSetCodeResult&lt;T&gt;</h4></section></summary><div class=\"docblock\"><p>Determine whether or not it is possible to update the code.</p>\n<ul>\n<li><code>check_version</code>: Should the runtime version be checked?</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.do_authorize_upgrade\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">do_authorize_upgrade</a>(code_hash: &lt;T as Config&gt;::Hash, check_version: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.bool.html\">bool</a>)</h4></section></summary><div class=\"docblock\"><p>Authorize the given <code>code_hash</code> as upgrade.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.reclaim_weight\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">reclaim_weight</a>(\n    info: &amp;&lt;&lt;T as Config&gt;::RuntimeCall as Dispatchable&gt;::Info,\n    post_info: &amp;&lt;&lt;T as Config&gt;::RuntimeCall as Dispatchable&gt;::PostInfo,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.unit.html\">()</a>, TransactionValidityError&gt;<div class=\"where\">where\n    &lt;T as Config&gt;::RuntimeCall: Dispatchable&lt;Info = DispatchInfo, PostInfo = PostDispatchInfo&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Reclaim the weight for the extrinsic given info and post info.</p>\n<p>This function will check the already reclaimed weight, and reclaim more if the\ndifference between pre dispatch and post dispatch weight is higher.</p>\n</div></details></div></details>",0,"ink_sandbox::macros::construct_runtime::System"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.parent_hash\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">parent_hash</a>() -&gt; &lt;T as Config&gt;::Hash</h4></section></summary><div class=\"docblock\"><p>An auto-generated getter for <code>ParentHash</code>.</p>\n</div></details></div></details>",0,"ink_sandbox::macros::construct_runtime::System"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.remark\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">remark</a>(\n    _origin: &lt;T as Config&gt;::RuntimeOrigin,\n    remark: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.86.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.u8.html\">u8</a>&gt;,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;PostDispatchInfo, DispatchErrorWithPostInfo&lt;PostDispatchInfo&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Make some on-chain remark.</p>\n<p>Can be executed by every <code>origin</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set_heap_pages\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">set_heap_pages</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    pages: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.u64.html\">u64</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;PostDispatchInfo, DispatchErrorWithPostInfo&lt;PostDispatchInfo&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Set the number of pages in the WebAssembly environment’s heap.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set_code\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">set_code</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    code: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.86.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.u8.html\">u8</a>&gt;,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;PostDispatchInfo, DispatchErrorWithPostInfo&lt;PostDispatchInfo&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Set the new runtime code.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set_code_without_checks\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">set_code_without_checks</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    code: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.86.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.u8.html\">u8</a>&gt;,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;PostDispatchInfo, DispatchErrorWithPostInfo&lt;PostDispatchInfo&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Set the new runtime code without doing any checks of the given <code>code</code>.</p>\n<p>Note that runtime upgrades will not run if this is called with a not-increasing spec\nversion!</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set_storage\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">set_storage</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    items: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.86.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;(<a class=\"struct\" href=\"https://doc.rust-lang.org/1.86.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.u8.html\">u8</a>&gt;, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.86.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.u8.html\">u8</a>&gt;)&gt;,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;PostDispatchInfo, DispatchErrorWithPostInfo&lt;PostDispatchInfo&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Set some items of storage.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.kill_storage\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">kill_storage</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    keys: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.86.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.86.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.u8.html\">u8</a>&gt;&gt;,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;PostDispatchInfo, DispatchErrorWithPostInfo&lt;PostDispatchInfo&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Kill some items from storage.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.kill_prefix\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">kill_prefix</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    prefix: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.86.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.u8.html\">u8</a>&gt;,\n    subkeys: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.u32.html\">u32</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;PostDispatchInfo, DispatchErrorWithPostInfo&lt;PostDispatchInfo&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Kill all storage items with a key that starts with the given prefix.</p>\n<p><strong>NOTE:</strong> We rely on the Root origin to provide us the number of subkeys under\nthe prefix we are removing to accurately calculate the weight of this function.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.remark_with_event\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">remark_with_event</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    remark: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.86.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.u8.html\">u8</a>&gt;,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;PostDispatchInfo, DispatchErrorWithPostInfo&lt;PostDispatchInfo&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Make some on-chain remark and emit event.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.authorize_upgrade\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">authorize_upgrade</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    code_hash: &lt;T as Config&gt;::Hash,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.unit.html\">()</a>, <a class=\"enum\" href=\"ink_sandbox/enum.DispatchError.html\" title=\"enum ink_sandbox::DispatchError\">DispatchError</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Authorize an upgrade to a given <code>code_hash</code> for the runtime. The runtime can be supplied\nlater.</p>\n<p>This call requires Root origin.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.authorize_upgrade_without_checks\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">authorize_upgrade_without_checks</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    code_hash: &lt;T as Config&gt;::Hash,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.unit.html\">()</a>, <a class=\"enum\" href=\"ink_sandbox/enum.DispatchError.html\" title=\"enum ink_sandbox::DispatchError\">DispatchError</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Authorize an upgrade to a given <code>code_hash</code> for the runtime. The runtime can be supplied\nlater.</p>\n<p>WARNING: This authorizes an upgrade that will take place without any safety checks, for\nexample that the spec name remains the same and that the version number increases. Not\nrecommended for normal use. Use <code>authorize_upgrade</code> instead.</p>\n<p>This call requires Root origin.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.apply_authorized_upgrade\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">apply_authorized_upgrade</a>(\n    _: &lt;T as Config&gt;::RuntimeOrigin,\n    code: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.86.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.u8.html\">u8</a>&gt;,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;PostDispatchInfo, DispatchErrorWithPostInfo&lt;PostDispatchInfo&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Provide the preimage (runtime binary) <code>code</code> for an upgrade that has been authorized.</p>\n<p>If the authorization required a version check, this call will ensure the spec name\nremains unchanged and that the spec version has increased.</p>\n<p>Depending on the runtime’s <code>OnSetCode</code> configuration, this function may directly apply\nthe new <code>code</code> in the same block or attempt to schedule the upgrade.</p>\n<p>All origins are allowed.</p>\n</div></details></div></details>",0,"ink_sandbox::macros::construct_runtime::System"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PalletInfoAccess-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-PalletInfoAccess-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; PalletInfoAccess for Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.index\" class=\"method trait-impl\"><a href=\"#method.index\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">index</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Index of the pallet as configured in the runtime.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.name\" class=\"method trait-impl\"><a href=\"#method.name\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">name</a>() -&gt; &amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.str.html\">str</a></h4></section></summary><div class='docblock'>Name of the pallet as configured in the runtime.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.name_hash\" class=\"method trait-impl\"><a href=\"#method.name_hash\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">name_hash</a>() -&gt; [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.array.html\">16</a>]</h4></section></summary><div class='docblock'>Two128 hash of name.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.module_name\" class=\"method trait-impl\"><a href=\"#method.module_name\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">module_name</a>() -&gt; &amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.str.html\">str</a></h4></section></summary><div class='docblock'>Name of the Rust module containing the pallet.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.crate_version\" class=\"method trait-impl\"><a href=\"#method.crate_version\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">crate_version</a>() -&gt; CrateVersion</h4></section></summary><div class='docblock'>Version of the crate containing the pallet.</div></details></div></details>","PalletInfoAccess","ink_sandbox::macros::construct_runtime::System"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PalletsInfoAccess-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-PalletsInfoAccess-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; PalletsInfoAccess for Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.count\" class=\"method trait-impl\"><a href=\"#method.count\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">count</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>The number of pallets’ information that this type represents. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.infos\" class=\"method trait-impl\"><a href=\"#method.infos\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">infos</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.86.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;PalletInfoData&gt;</h4></section></summary><div class='docblock'>All of the pallets’ information that this type represents.</div></details></div></details>","PalletsInfoAccess","ink_sandbox::macros::construct_runtime::System"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-PartialEq-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a> for Pallet&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.86.0/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;Pallet&lt;T&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>self</code> and <code>other</code> values to be equal, and is used by <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.86.0/src/core/cmp.rs.html#261\">Source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.86.0/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>!=</code>. The default implementation is almost always sufficient,\nand should not be overridden without very good reason.</div></details></div></details>","PartialEq","ink_sandbox::macros::construct_runtime::System"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageInfoTrait-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-StorageInfoTrait-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; StorageInfoTrait for Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.storage_info\" class=\"method trait-impl\"><a href=\"#method.storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.86.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","StorageInfoTrait","ink_sandbox::macros::construct_runtime::System"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StoredMap%3C%3CT+as+Config%3E::AccountId,+%3CT+as+Config%3E::AccountData%3E-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-StoredMap%3C%3CT+as+Config%3E::AccountId,+%3CT+as+Config%3E::AccountData%3E-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; StoredMap&lt;&lt;T as Config&gt;::AccountId, &lt;T as Config&gt;::AccountData&gt; for Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3><div class=\"docblock\"><p>Implement StoredMap for a simple single-item, provide-when-not-default system. This works fine\nfor storing a single item which allows the account to continue existing as long as it’s not\nempty/default.</p>\n</div></section></summary><div class=\"docblock\"><p>Anything more complex will need more sophisticated logic.</p>\n</div><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.get\" class=\"method trait-impl\"><a href=\"#method.get\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">get</a>(k: &amp;&lt;T as Config&gt;::AccountId) -&gt; &lt;T as Config&gt;::AccountData</h4></section></summary><div class='docblock'>Get the item, or its default if it doesn’t yet exist; we make no distinction between the\ntwo.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate_exists\" class=\"method trait-impl\"><a href=\"#method.try_mutate_exists\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">try_mutate_exists</a>&lt;R, E&gt;(\n    k: &amp;&lt;T as Config&gt;::AccountId,\n    f: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&lt;T as Config&gt;::AccountData&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<div class=\"where\">where\n    E: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"enum\" href=\"ink_sandbox/enum.DispatchError.html\" title=\"enum ink_sandbox::DispatchError\">DispatchError</a>&gt;,</div></h4></section></summary><div class='docblock'>Maybe mutate the item only if an <code>Ok</code> value is returned from <code>f</code>. Do nothing if an <code>Err</code> is\nreturned. It is removed or reset to default value if it has been mutated to <code>None</code>.\n<code>f</code> will always be called with an option representing if the storage item exists (<code>Some&lt;V&gt;</code>)\nor if the storage item does not exist (<code>None</code>), independent of the <code>QueryType</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate\" class=\"method trait-impl\"><a href=\"#method.mutate\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">mutate</a>&lt;R&gt;(k: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.reference.html\">&amp;K</a>, f: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.reference.html\">&amp;mut T</a>) -&gt; R) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, <a class=\"enum\" href=\"ink_sandbox/enum.DispatchError.html\" title=\"enum ink_sandbox::DispatchError\">DispatchError</a>&gt;</h4></section></summary><div class='docblock'>Mutate the item.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_exists\" class=\"method trait-impl\"><a href=\"#method.mutate_exists\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">mutate_exists</a>&lt;R&gt;(\n    k: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.reference.html\">&amp;K</a>,\n    f: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;) -&gt; R,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, <a class=\"enum\" href=\"ink_sandbox/enum.DispatchError.html\" title=\"enum ink_sandbox::DispatchError\">DispatchError</a>&gt;</h4></section></summary><div class='docblock'>Mutate the item, removing or resetting to default value if it has been mutated to <code>None</code>. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.insert\" class=\"method trait-impl\"><a href=\"#method.insert\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">insert</a>(k: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.reference.html\">&amp;K</a>, t: T) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.unit.html\">()</a>, <a class=\"enum\" href=\"ink_sandbox/enum.DispatchError.html\" title=\"enum ink_sandbox::DispatchError\">DispatchError</a>&gt;</h4></section></summary><div class='docblock'>Set the item to something new.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.remove\" class=\"method trait-impl\"><a href=\"#method.remove\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">remove</a>(k: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.reference.html\">&amp;K</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.unit.html\">()</a>, <a class=\"enum\" href=\"ink_sandbox/enum.DispatchError.html\" title=\"enum ink_sandbox::DispatchError\">DispatchError</a>&gt;</h4></section></summary><div class='docblock'>Remove the item or otherwise replace it with its default value; we don’t care which.</div></details></div></details>","StoredMap<<T as Config>::AccountId, <T as Config>::AccountData>","ink_sandbox::macros::construct_runtime::System"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ValidateUnsigned-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-ValidateUnsigned-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; ValidateUnsigned for Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Call\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Call\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Call</a> = Call&lt;T&gt;</h4></section></summary><div class='docblock'>The call to validate</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.validate_unsigned\" class=\"method trait-impl\"><a href=\"#method.validate_unsigned\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">validate_unsigned</a>(\n    _source: TransactionSource,\n    call: &amp;&lt;Pallet&lt;T&gt; as ValidateUnsigned&gt;::Call,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;ValidTransaction, TransactionValidityError&gt;</h4></section></summary><div class='docblock'>Return the validity of the call <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.pre_dispatch\" class=\"method trait-impl\"><a href=\"#method.pre_dispatch\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">pre_dispatch</a>(call: &amp;Self::Call) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.unit.html\">()</a>, TransactionValidityError&gt;</h4></section></summary><div class='docblock'>Validate the call right before dispatch. <a>Read more</a></div></details></div></details>","ValidateUnsigned","ink_sandbox::macros::construct_runtime::System"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ViewFunctionIdPrefix-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-ViewFunctionIdPrefix-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; ViewFunctionIdPrefix for Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.prefix\" class=\"method trait-impl\"><a href=\"#method.prefix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">prefix</a>() -&gt; [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.array.html\">16</a>]</h4></section></div></details>","ViewFunctionIdPrefix","ink_sandbox::macros::construct_runtime::System"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-WhitelistedStorageKeys-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-WhitelistedStorageKeys-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; WhitelistedStorageKeys for Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.whitelisted_storage_keys\" class=\"method trait-impl\"><a href=\"#method.whitelisted_storage_keys\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">whitelisted_storage_keys</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.86.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;TrackedStorageKey&gt;</h4></section></summary><div class='docblock'>Returns a <a href=\"https://doc.rust-lang.org/1.86.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\"><code>Vec&lt;TrackedStorageKey&gt;</code></a> indicating the storage keys that\nshould be whitelisted during benchmarking. This means that those keys\nwill be excluded from the benchmarking performance calculation.</div></details></div></details>","WhitelistedStorageKeys","ink_sandbox::macros::construct_runtime::System"],["<section id=\"impl-Eq-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-Eq-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> for Pallet&lt;T&gt;</h3></section>","Eq","ink_sandbox::macros::construct_runtime::System"]]]]);
    if (window.register_type_impls) {
        window.register_type_impls(type_impls);
    } else {
        window.pending_type_impls = type_impls;
    }
})()
//{"start":55,"fragment_lengths":[98969,98077]}