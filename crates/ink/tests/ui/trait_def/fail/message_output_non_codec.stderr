error[E0277]: the trait bound `NonCodec: WrapperTypeEncode` is not satisfied
 --> tests/ui/trait_def/fail/message_output_non_codec.rs:6:26
  |
6 |     fn message(&self) -> NonCodec;
  |                          ^^^^^^^^ the trait `WrapperTypeEncode` is not implemented for `NonCodec`
  |
  = help: the following other types implement trait `WrapperTypeEncode`:
            &T
            &mut T
            Arc<T>
            Box<T>
            Cow<'_, T>
            Rc<T>
            String
            Vec<T>
          and $N others
  = note: required for `NonCodec` to implement `Encode`
note: required by a bound in `DispatchOutput`
 --> src/codegen/dispatch/type_check.rs
  |
  | pub struct DispatchOutput<T>(T)
  |            -------------- required by a bound in this struct
  | where
  |     T: scale::Encode + 'static;
  |        ^^^^^^^^^^^^^ required by this bound in `DispatchOutput`

error[E0277]: the trait bound `Result<NonCodec, LangError>: ink::parity_scale_codec::Decode` is not satisfied
 --> tests/ui/trait_def/fail/message_output_non_codec.rs:5:5
  |
5 | /     #[ink(message)]
6 | |     fn message(&self) -> NonCodec;
  | |__________________________________^ the trait `ink::parity_scale_codec::Decode` is not implemented for `Result<NonCodec, LangError>`
  |
  = help: the trait `ink::parity_scale_codec::Decode` is implemented for `Result<T, E>`
  = note: required for `NonCodec` to implement `DecodeMessageResult<ScaleEncoding>`
note: required by a bound in `Execution::<Args, Output, Abi>::new`
 --> $WORKSPACE/crates/env/src/call/execution.rs
  |
  |     Output: AbiDecodeWith<Abi> + DecodeMessageResult<Abi>,
  |                                  ^^^^^^^^^^^^^^^^^^^^^^^^ required by this bound in `Execution::<Args, Output, Abi>::new`
...
  |     pub fn new(input: ExecutionInput<Args, Abi>) -> Self {
  |            --- required by a bound in this associated function

error[E0277]: the trait bound `NonCodec: AbiDecodeWith<ScaleEncoding>` is not satisfied
 --> tests/ui/trait_def/fail/message_output_non_codec.rs:5:5
  |
5 | /     #[ink(message)]
6 | |     fn message(&self) -> NonCodec;
  | |__________________________________^ the trait `WrapperTypeDecode` is not implemented for `NonCodec`
  |
  = help: the following other types implement trait `WrapperTypeDecode`:
            Arc<T>
            Box<T>
            Rc<T>
            sp_core::Bytes
  = note: required for `NonCodec` to implement `ink::parity_scale_codec::Decode`
  = note: required for `NonCodec` to implement `AbiDecodeWith<ScaleEncoding>`
note: required by a bound in `Execution::<Args, Output, Abi>::new`
 --> $WORKSPACE/crates/env/src/call/execution.rs
  |
  |     Output: AbiDecodeWith<Abi> + DecodeMessageResult<Abi>,
  |             ^^^^^^^^^^^^^^^^^^ required by this bound in `Execution::<Args, Output, Abi>::new`
...
  |     pub fn new(input: ExecutionInput<Args, Abi>) -> Self {
  |            --- required by a bound in this associated function

error[E0599]: the method `try_invoke` exists for struct `CallBuilder<E, Set<Call>, Set<ExecutionInput<ArgumentList<ArgumentListEnd, ArgumentListEnd, ScaleEncoding>, ScaleEncoding>>, Set<ReturnType<NonCodec>>>`, but its trait bounds were not satisfied
 --> tests/ui/trait_def/fail/message_output_non_codec.rs:5:5
  |
1 |   pub struct NonCodec;
  |   ------------------- doesn't satisfy `NonCodec: AbiDecodeWith<ScaleEncoding>`, `NonCodec: DecodeMessageResult<ScaleEncoding>` or `NonCodec: WrapperTypeDecode`
...
5 |       #[ink(message)]
  |  _____^
6 | |     fn message(&self) -> NonCodec;
  | |__________________________________^
  |
 ::: $RUST/core/src/result.rs
  |
  |   pub enum Result<T, E> {
  |   --------------------- doesn't satisfy `_: Decode`
  |
  = note: the following trait bounds were not satisfied:
          `Result<NonCodec, LangError>: ink::parity_scale_codec::Decode`
          which is required by `NonCodec: DecodeMessageResult<ScaleEncoding>`
          `NonCodec: WrapperTypeDecode`
          which is required by `NonCodec: AbiDecodeWith<ScaleEncoding>`
note: the trait `WrapperTypeDecode` must be implemented
 --> $CARGO/parity-scale-codec-3.7.4/src/codec.rs
  |
  | pub trait WrapperTypeDecode: Sized {
  | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
