error[E0277]: the trait bound `NonCodec: WrapperTypeDecode` is not satisfied
 --> tests/ui/trait_def/fail/message_input_non_codec.rs:6:23
  |
6 |     fn message(&self, input: NonCodec);
  |                       ^^^^^^^^^^^^^^^ the trait `WrapperTypeDecode` is not implemented for `NonCodec`, which is required by `NonCodec: ink::parity_scale_codec::Decode`
  |
  = help: the following other types implement trait `WrapperTypeDecode`:
            Arc<T>
            Box<T>
            Rc<T>
  = note: required for `NonCodec` to implement `ink::parity_scale_codec::Decode`
note: required by a bound in `DispatchInput`
 --> src/codegen/dispatch/type_check.rs
  |
  | pub struct DispatchInput<T>(T)
  |            ------------- required by a bound in this struct
  | where
  |     T: scale::Decode + 'static;
  |        ^^^^^^^^^^^^^ required by this bound in `DispatchInput`

error[E0277]: the trait bound `NonCodec: Encode` is not satisfied
 --> tests/ui/trait_def/fail/message_input_non_codec.rs:3:1
  |
3 |   #[ink::trait_definition]
  |   ^^^^^^^^^^^^^^^^^^^^^^^^ the trait `WrapperTypeEncode` is not implemented for `NonCodec`, which is required by `NonCodec: Encode`
4 |   pub trait TraitDefinition {
5 | /     #[ink(message)]
6 | |     fn message(&self, input: NonCodec);
  | |_______________________________________- required by a bound introduced by this call
  |
  = help: the following other types implement trait `WrapperTypeEncode`:
            &T
            &mut T
            Arc<T>
            Box<T>
            Cow<'a, T>
            Rc<T>
            String
            Vec<T>
            ink::parity_scale_codec::Ref<'a, T, U>
  = note: required for `NonCodec` to implement `Encode`
note: required by a bound in `ExecutionInput::<ArgumentList<ArgumentListEnd, ArgumentListEnd>>::push_arg`
 --> $WORKSPACE/crates/env/src/call/execution.rs
  |
  |     pub fn push_arg<T>(
  |            -------- required by a bound in this associated function
...
  |         T: scale::Encode,
  |            ^^^^^^^^^^^^^ required by this bound in `ExecutionInput::<ArgumentList<ArgumentListEnd, ArgumentListEnd>>::push_arg`

error[E0277]: the trait bound `ArgumentList<Argument<NonCodec>, ArgumentList<ArgumentListEnd, ArgumentListEnd>>: Encode` is not satisfied
 --> tests/ui/trait_def/fail/message_input_non_codec.rs:5:5
  |
5 | /     #[ink(message)]
6 | |     fn message(&self, input: NonCodec);
  | |_______________________________________^ the trait `Encode` is not implemented for `ArgumentList<Argument<NonCodec>, ArgumentList<ArgumentListEnd, ArgumentListEnd>>`
  |
  = help: the following other types implement trait `Encode`:
            ArgumentList<Argument<Head>, Rest>
            ArgumentList<ArgumentListEnd, ArgumentListEnd>
note: required by a bound in `Execution::<Args, Output>::new`
 --> $WORKSPACE/crates/env/src/call/execution.rs
  |
  |     Args: scale::Encode,
  |           ^^^^^^^^^^^^^ required by this bound in `Execution::<Args, Output>::new`
...
  |     pub fn new(input: ExecutionInput<Args>) -> Self {
  |            --- required by a bound in this associated function
help: consider removing this method call, as the receiver has type `ExecutionInput<ArgumentList<ArgumentListEnd, ArgumentListEnd>>` and `ExecutionInput<ArgumentList<ArgumentListEnd, ArgumentListEnd>>: Encode` trivially holds
  |
6 |     fn message(&self, input: NonCodec);
  |

error[E0599]: the method `try_invoke` exists for struct `CallBuilder<E, Set<Call<E>>, Set<ExecutionInput<ArgumentList<Argument<NonCodec>, ArgumentList<ArgumentListEnd, ArgumentListEnd>>>>, Set<ReturnType<()>>>`, but its trait bounds were not satisfied
 --> tests/ui/trait_def/fail/message_input_non_codec.rs:5:5
  |
5 |       #[ink(message)]
  |  _____^
6 | |     fn message(&self, input: NonCodec);
  | |_______________________________________^
  |
 ::: $WORKSPACE/crates/env/src/call/execution.rs
  |
  |   pub struct ArgumentList<Head, Rest> {
  |   ----------------------------------- doesn't satisfy `_: Encode`
  |
  = note: the following trait bounds were not satisfied:
          `ArgumentList<Argument<NonCodec>, ArgumentList<ArgumentListEnd, ArgumentListEnd>>: Encode`
