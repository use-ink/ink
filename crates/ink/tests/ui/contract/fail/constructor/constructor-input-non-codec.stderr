error[E0277]: the trait bound `NonCodecType: WrapperTypeDecode` is not satisfied
  --> tests/ui/contract/fail/constructor/constructor-input-non-codec.rs:13:28
   |
13 |         pub fn constructor(_input: NonCodecType) -> Self {
   |                            ^^^^^^^^^^^^^^^^^^^^ the trait `WrapperTypeDecode` is not implemented for `NonCodecType`
   |
   = help: the following other types implement trait `WrapperTypeDecode`:
             Arc<T>
             Box<T>
             Rc<T>
             sp_core::Bytes
   = note: required for `NonCodecType` to implement `ink::parity_scale_codec::Decode`
note: required by a bound in `DispatchInput`
  --> src/codegen/dispatch/type_check.rs
   |
   | pub struct DispatchInput<T>(T)
   |            ------------- required by a bound in this struct
   | where
   |     T: scale::Decode + 'static;
   |        ^^^^^^^^^^^^^ required by this bound in `DispatchInput`

error[E0277]: the trait bound `NonCodecType: ink::parity_scale_codec::Decode` is not satisfied
  --> tests/ui/contract/fail/constructor/constructor-input-non-codec.rs:13:9
   |
13 | /         pub fn constructor(_input: NonCodecType) -> Self {
14 | |             Self {}
15 | |         }
   | |_________^ the trait `WrapperTypeDecode` is not implemented for `NonCodecType`
   |
   = help: the following other types implement trait `WrapperTypeDecode`:
             Arc<T>
             Box<T>
             Rc<T>
             sp_core::Bytes
   = note: required for `NonCodecType` to implement `ink::parity_scale_codec::Decode`

error[E0277]: the trait bound `NonCodecType: AbiEncodeWith<_>` is not satisfied
  --> tests/ui/contract/fail/constructor/constructor-input-non-codec.rs:3:1
   |
3  |   #[ink::contract]
   |   ^^^^^^^^^^^^^^^^ the trait `AbiEncodeWith<_>` is not implemented for `NonCodecType`
...
13 | /         pub fn constructor(_input: NonCodecType) -> Self {
14 | |             Self {}
15 | |         }
   | |_________- required by a bound introduced by this call
   |
note: required by a bound in `ExecutionInput::<ArgumentList<ArgumentListEnd, ArgumentListEnd, Abi>, Abi>::push_arg`
  --> $WORKSPACE/crates/env/src/call/execution.rs
   |
   |     pub fn push_arg<T>(
   |            -------- required by a bound in this associated function
...
   |         T: AbiEncodeWith<Abi>,
   |            ^^^^^^^^^^^^^^^^^^ required by this bound in `ExecutionInput::<ArgumentList<ArgumentListEnd, ArgumentListEnd, Abi>, Abi>::push_arg`
