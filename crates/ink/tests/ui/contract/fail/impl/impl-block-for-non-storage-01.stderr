error[E0308]: mismatched types
  --> tests/ui/contract/fail/impl/impl-block-for-non-storage-01.rs:20:10
   |
20 |     impl NonContract {
   |          ^^^^^^^^^^^ expected `IsSameType<Contract>`, found `IsSameType<NonContract>`
   |
   = note: expected struct `IsSameType<Contract>`
              found struct `IsSameType<NonContract>`

error[E0599]: no function or associated item named `constructor_2` found for struct `Contract` in the current scope
  --> tests/ui/contract/fail/impl/impl-block-for-non-storage-01.rs:22:16
   |
6  |       pub struct Contract {}
   |  _____-------------------
   | |     |
   | |     function or associated item `constructor_2` not found for this struct
7  | |
8  | |     impl Contract {
9  | |         #[ink(constructor)]
...  |
21 | |         #[ink(constructor)]
22 | |         pub fn constructor_2() -> Self {
   | |               -^^^^^^^^^^^^^ function or associated item not found in `Contract`
   | |_______________|
   |
   |
note: if you're trying to build a new `Contract`, consider using `contract::_::<impl Contract>::constructor_1` which returns `Contract`
  --> tests/ui/contract/fail/impl/impl-block-for-non-storage-01.rs:10:9
   |
10 |         pub fn constructor_1() -> Self {
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
help: there is an associated function `constructor_1` with a similar name
   |
22 -         pub fn constructor_2() -> Self {
22 +         pub fn constructor_1() -> Self {
   |

error[E0599]: no function or associated item named `message_2` found for struct `Contract` in the current scope
  --> tests/ui/contract/fail/impl/impl-block-for-non-storage-01.rs:27:16
   |
6  |       pub struct Contract {}
   |  _____-------------------
   | |     |
   | |     function or associated item `message_2` not found for this struct
7  | |
8  | |     impl Contract {
9  | |         #[ink(constructor)]
...  |
26 | |         #[ink(message)]
27 | |         pub fn message_2(&self) {}
   | |               -^^^^^^^^^ function or associated item not found in `Contract`
   | |_______________|
   |
   |
note: if you're trying to build a new `Contract`, consider using `contract::_::<impl Contract>::constructor_1` which returns `Contract`
  --> tests/ui/contract/fail/impl/impl-block-for-non-storage-01.rs:10:9
   |
10 |         pub fn constructor_1() -> Self {
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
help: there is a method `message_1` with a similar name, but with different arguments
  --> tests/ui/contract/fail/impl/impl-block-for-non-storage-01.rs:15:9
   |
15 |         pub fn message_1(&self) {}
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^
