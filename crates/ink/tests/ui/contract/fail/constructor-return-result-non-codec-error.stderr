error[E0277]: the trait bound `Result<Result<(), &contract::Error>, LangError>: Encode` is not satisfied
  --> tests/ui/contract/fail/constructor-return-result-non-codec-error.rs:13:9
   |
13 | /         pub fn constructor() -> Result<Self, Error> {
14 | |             Ok(Self {})
15 | |         }
   | |_________^ the trait `Encode` is not implemented for `Result<Result<(), &contract::Error>, LangError>`
   |
   = help: the trait `Encode` is implemented for `Result<T, E>`
note: required by a bound in `return_value`
  --> $WORKSPACE/crates/env/src/api.rs
   |
   | pub fn return_value<R>(return_flags: ReturnFlags, return_value: &R) -> !
   |        ------------ required by a bound in this function
   | where
   |     R: scale::Encode,
   |        ^^^^^^^^^^^^^ required by this bound in `return_value`

error[E0277]: the trait bound `contract::Error: WrapperTypeDecode` is not satisfied
  --> tests/ui/contract/fail/constructor-return-result-non-codec-error.rs:13:33
   |
13 |           pub fn constructor() -> Result<Self, Error> {
   |           -                       ^^^^^^^^^^^^^^^^^^^ the trait `WrapperTypeDecode` is not implemented for `contract::Error`, which is required by `Result<ContractRef, contract::Error>: ConstructorReturnType<ContractRef>`
   |  _________|
   | |
14 | |             Ok(Self {})
15 | |         }
   | |_________- required by a bound introduced by this call
   |
   = help: the following other types implement trait `WrapperTypeDecode`:
             Arc<T>
             Box<T>
             Rc<T>
   = note: required for `contract::Error` to implement `ink::parity_scale_codec::Decode`
   = note: required for `Result<ContractRef, contract::Error>` to implement `ConstructorReturnType<ContractRef>`
note: required by a bound in `CreateBuilder::<E, ContractRef, CodeHash, Limits, Endowment, Args, Salt, Unset<ReturnType<()>>>::returns`
  --> $WORKSPACE/crates/env/src/call/create_builder.rs
   |
   |     pub fn returns<R>(
   |            ------- required by a bound in this associated function
...
   |         R: ConstructorReturnType<ContractRef>,
   |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ required by this bound in `CreateBuilder::<E, ContractRef, CodeHash, Limits, Endowment, Args, Salt, Unset<ReturnType<()>>>::returns`

error[E0277]: the trait bound `contract::Error: TypeInfo` is not satisfied
 --> tests/ui/contract/fail/constructor-return-result-non-codec-error.rs:4:16
  |
4 |     pub struct Contract {}
  |                ^^^^^^^^ the trait `TypeInfo` is not implemented for `contract::Error`, which is required by `Result<Result<(), contract::Error>, LangError>: TypeInfo`
  |
  = help: the following other types implement trait `TypeInfo`:
            &T
            &mut T
            ()
            (A, B)
            (A, B, C)
            (A, B, C, D)
            (A, B, C, D, E)
            (A, B, C, D, E, F)
            (A, B, C, D, E, F, G)
            (A, B, C, D, E, F, G, H)
            (A, B, C, D, E, F, G, H, I)
            (A, B, C, D, E, F, G, H, I, J)
            (A, B, C, D, E, F, G, H, I, J, K)
            (A, B, C, D, E, F, G, H, I, J, K, L)
            (A, B, C, D, E, F, G, H, I, J, K, L, M)
            (A, B, C, D, E, F, G, H, I, J, K, L, M, N)
            (A, B, C, D, E, F, G, H, I, J, K, L, M, N, O)
            (A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P)
            (A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q)
            (A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R)
            (A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S)
            (A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S, T)
            (A,)
            Arc<T>
            Asset
            AssetFilter
            AutoKey
            BTreeMap<K, V>
            BTreeSet<T>
            BinaryHeap<T>
            Box<T>
            Contract
            ContractRef
            Cow<'static, T>
            DefaultEnvironment
            DoubleEncoded<T>
            Duration
            LangError
            Lazy<V, KeyType>
            ManualKey<KEY, ParentKey>
            Mapping<K, V, KeyType>
            MaybeErrorCode
            NoChainExtension
            NonZero<i128>
            NonZero<i16>
            NonZero<i32>
            NonZero<i64>
            NonZero<i8>
            NonZero<u128>
            NonZero<u16>
            NonZero<u32>
            NonZero<u64>
            NonZero<u8>
            Option<T>
            OriginKind
            PhantomData<T>
            Rc<T>
            ResolverKey<L, R>
            Result<T, E>
            StorageVec<V, KeyType>
            String
            Vec<T>
            VecDeque<T>
            VersionedAsset
            VersionedAssetId
            VersionedAssets
            VersionedInteriorLocation
            VersionedJunction
            VersionedLocation
            VersionedNetworkId
            VersionedResponse
            VersionedXcm<RuntimeCall>
            Weight
            WildAsset
            [T; N]
            [T]
            bool
            bounded_collections::bounded_btree_map::BoundedBTreeMap<K, V, S>
            bounded_collections::bounded_btree_set::BoundedBTreeSet<T, S>
            bounded_collections::bounded_vec::BoundedSlice<'a, T, S>
            bounded_collections::bounded_vec::BoundedVec<T, S>
            bounded_collections::weak_bounded_vec::WeakBoundedVec<T, S>
            char
            contract::_::CallBuilder
            i128
            i16
            i32
            i64
            i8
            ink::ink_primitives::AccountId
            ink::ink_primitives::Hash
            ink::parity_scale_codec::Compact<T>
            ink::staging_xcm::v2::AssetId
            ink::staging_xcm::v2::AssetInstance
            ink::staging_xcm::v2::BodyId
            ink::staging_xcm::v2::BodyPart
            ink::staging_xcm::v2::Error
            ink::staging_xcm::v2::Fungibility
            ink::staging_xcm::v2::Instruction<RuntimeCall>
            ink::staging_xcm::v2::Junction
            ink::staging_xcm::v2::Junctions
            ink::staging_xcm::v2::MultiAsset
            ink::staging_xcm::v2::MultiAssetFilter
            ink::staging_xcm::v2::MultiAssets
            ink::staging_xcm::v2::MultiLocation
            ink::staging_xcm::v2::NetworkId
            ink::staging_xcm::v2::Outcome
            ink::staging_xcm::v2::Response
            ink::staging_xcm::v2::SendError
            ink::staging_xcm::v2::WeightLimit
            ink::staging_xcm::v2::WildFungibility
            ink::staging_xcm::v2::WildMultiAsset
            ink::staging_xcm::v2::Xcm<RuntimeCall>
            ink::staging_xcm::v3::AssetId
            ink::staging_xcm::v3::AssetInstance
            ink::staging_xcm::v3::BodyId
            ink::staging_xcm::v3::BodyPart
            ink::staging_xcm::v3::Error
            ink::staging_xcm::v3::Fungibility
            ink::staging_xcm::v3::Instruction<Call>
            ink::staging_xcm::v3::Junction
            ink::staging_xcm::v3::Junctions
            ink::staging_xcm::v3::MultiAsset
            ink::staging_xcm::v3::MultiAssetFilter
            ink::staging_xcm::v3::MultiAssets
            ink::staging_xcm::v3::MultiLocation
            ink::staging_xcm::v3::NetworkId
            ink::staging_xcm::v3::Outcome
            ink::staging_xcm::v3::PalletInfo
            ink::staging_xcm::v3::QueryResponseInfo
            ink::staging_xcm::v3::Response
            ink::staging_xcm::v3::SendError
            ink::staging_xcm::v3::WeightLimit
            ink::staging_xcm::v3::WildFungibility
            ink::staging_xcm::v3::WildMultiAsset
            ink::staging_xcm::v3::Xcm<Call>
            ink::staging_xcm::v4::AssetId
            ink::staging_xcm::v4::AssetInstance
            ink::staging_xcm::v4::Assets
            ink::staging_xcm::v4::Fungibility
            ink::staging_xcm::v4::Instruction<Call>
            ink::staging_xcm::v4::Junction
            ink::staging_xcm::v4::Junctions
            ink::staging_xcm::v4::Location
            ink::staging_xcm::v4::NetworkId
            ink::staging_xcm::v4::Outcome
            ink::staging_xcm::v4::PalletInfo
            ink::staging_xcm::v4::QueryResponseInfo
            ink::staging_xcm::v4::Response
            ink::staging_xcm::v4::WildFungibility
            ink::staging_xcm::v4::Xcm<Call>
            sp_arithmetic::ArithmeticError
            sp_arithmetic::fixed_point::FixedI128
            sp_arithmetic::fixed_point::FixedI64
            sp_arithmetic::fixed_point::FixedU128
            sp_arithmetic::fixed_point::FixedU64
            sp_arithmetic::per_things::PerU16
            sp_arithmetic::per_things::Perbill
            sp_arithmetic::per_things::Percent
            sp_arithmetic::per_things::Permill
            sp_arithmetic::per_things::Perquintill
            sp_weights::RuntimeDbWeight
            sp_weights::WeightToFeeCoefficient<Balance>
            std::ops::Range<Idx>
            std::ops::RangeInclusive<Idx>
            str
            u128
            u16
            u32
            u64
            u8
  = note: required for `Result<(), contract::Error>` to implement `TypeInfo`
  = note: 1 redundant requirement hidden
  = note: required for `Result<Result<(), contract::Error>, LangError>` to implement `TypeInfo`
note: required by a bound in `TypeSpec::with_name_str`
 --> $WORKSPACE/crates/metadata/src/specs.rs
  |
  |     pub fn with_name_str<T>(display_name: &'static str) -> Self
  |            ------------- required by a bound in this associated function
  |     where
  |         T: TypeInfo + 'static,
  |            ^^^^^^^^ required by this bound in `TypeSpec::with_name_str`
