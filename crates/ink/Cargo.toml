[package]
name = "ink"
version.workspace = true
authors = ["Use Ink <ink@use.ink>"]
edition.workspace = true
rust-version.workspace = true

license.workspace = true
readme = "README.md"
repository.workspace = true
documentation = "https://docs.rs/ink"
homepage.workspace = true
description = "[ink!] Rust based eDSL for writing smart contracts for Polkadot SDK"
keywords.workspace = true
categories.workspace = true
include = ["Cargo.toml", "src/**/*.rs", "README.md", "LICENSE"]

[dependencies]
ink_env = { workspace = true }
ink_storage = { workspace = true }
ink_primitives = { workspace = true }
ink_metadata = { workspace = true, optional = true }
ink_prelude = { workspace = true }
ink_macro = { workspace = true }
pallet-revive-uapi = { workspace = true }
scale = { workspace = true }
scale-info = { workspace = true, default-features = false, features = ["derive"], optional = true }
derive_more = { workspace = true, features = ["from"] }
const_format = { workspace = true }
keccak-const = { workspace = true }
linkme = { workspace = true, optional = true }

polkavm-derive = { workspace = true }
xcm = { workspace = true, optional = true }

sp-io = { git = "https://github.com/use-ink/polkadot-sdk.git", rev = "a71ec19a94702ea71767ba5ac97603ea6c6305c1", default-features = false, features = ["disable_panic_handler", "disable_oom", "disable_allocator"] }
sp-runtime-interface = { git = "https://github.com/use-ink/polkadot-sdk.git", rev = "a71ec19a94702ea71767ba5ac97603ea6c6305c1", default-features = false, features = ["disable_target_static_assertions"] }

[dev-dependencies]
ink_ir = { workspace = true, default-features = true }
ink_metadata = { workspace = true } # todo why here too?
trybuild = { workspace = true, features = ["diff"] }

[features]
default = ["std"]
std = [
    "ink_env/std",
    "ink_macro/std",
    "ink_metadata/std",
    "ink_prelude/std",
    "ink_primitives/std",
    "ink_storage/std",
    "scale-info/std",
    "scale/std",
    "xcm?/std",
    "derive_more/std",
    "sp-runtime-interface/std",
    "sp-io/std",
    "dep:linkme"
]

# Enable contract debug messages via `debug_print!` and `debug_println!`.
ink-debug = ["ink_env/ink-debug"]

show-codegen-docs = []

# Disable the ink! provided global memory allocator.
no-allocator = ["ink_env/no-allocator"]

# Disable the ink! provided panic handler.
no-panic-handler = ["ink_env/no-panic-handler"]

unstable-hostfn = ["ink_env/unstable-hostfn"]

# Enable xcm utilities.
xcm = ["dep:xcm", "ink_env/xcm"]

# For the ui tests, which use this `Cargo.toml`
[lints.rust.unexpected_cfgs]
level = "warn"
check-cfg = [
    'cfg(feature, values(any()))',
    'cfg(ink_abi, values("ink", "sol", "all"))'
]
