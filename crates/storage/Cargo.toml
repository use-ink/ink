[package]
name = "ink_storage"
version.workspace = true
authors = ["Use Ink <ink@use.ink>"]
edition.workspace = true

license.workspace = true
readme = "README.md"
repository.workspace = true
documentation = "https://docs.rs/ink_storage/"
homepage.workspace = true
description = "[ink!] Data structures to organize and manipulate ink! contract storage."
keywords.workspace = true
categories.workspace = true
include = ["Cargo.toml", "src/**/*.rs", "README.md", "LICENSE"]

[dependencies]
ink_env = { workspace = true }
ink_metadata = { workspace = true, optional = true }
ink_primitives = { workspace = true }
ink_storage_traits = { workspace = true }
ink_prelude = { workspace = true }
pallet-contracts-uapi = { workspace = true}

scale = { workspace = true }
derive_more = { workspace = true, features = ["from", "display"] }
scale-info = { workspace = true, features = ["derive"], optional = true }
cfg-if = { workspace = true }
array-init = { workspace = true }

[dev-dependencies]
quickcheck = { workspace = true }
quickcheck_macros = { workspace = true }
itertools = { workspace = true, default-features = true }

ink = { path = "../ink"}

[features]
default = [ "std" ]
std = [
	"ink_env/std",
	"ink_metadata/std",
	"ink_prelude/std",
	"ink_primitives/std",
	"ink_storage_traits/std",
	"scale-info/std",
	"scale/std",
	"derive_more/std"
]
ink-fuzz-tests = [ "std" ]
