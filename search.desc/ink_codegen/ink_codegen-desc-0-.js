searchState.loadedDescShard("ink_codegen", 0, "The ink! code generation.\nTypes for which code can be generated by this crate.\nThe underlying generator generating the code.\nGenerates the entire code for the given ink! contract.\nGenerates the ink! metadata for the given type.\nDefinitions and utilities for ink! smart contract static …\nTrait for ABI-specific decoding.\nTrait for ABI-specific encoding with support for both …\nThe closure that can be used to dispatch into the …\nThe closure that can be used to dispatch into the …\nGuards against using invalid contract initializer types.\nStores the actual value of the constructor return type.\nGenerated type used to decode all dispatchable ink! …\nGenerated type used to decode all dispatchable ink! …\nStores the name of the ink! smart contract.\nFailed to read execution input for the dispatchable.\nclosure for decoding\nDecodes an ink! dispatch input into a known selector and …\nAn error that can occur during dispatch of ink! …\nStores various information of the respective dispatchable …\nStores various information of the respective dispatchable …\nThe encoding of input and output data for the message\ntodo: comment\nThe type of the error returned from the constructor. …\nThe error type that can occur during decoding.\nThe error type of the constructor return type.\nStarts the execution of the respective ink! message or …\nThe unique id of the ink! trait definition.\nTrue if the constructor returns a <code>Result</code>.\nIs <code>true</code> if <code>Self</code> is <code>Result&lt;C, E&gt;</code>.\nReflects the input types of the dispatchable ink! message.\nReflects the input types of the dispatchable ink! …\nFailed to decode the parameters for the selected …\nFailed to decode into a valid dispatch selector.\nThe label of the dispatchable ink! message.\nThe label of the dispatchable ink! constructor.\nYields <code>true</code> if the dispatchable ink! message mutates the …\nThe name of the ink! smart contract.\nThe name of the ink! trait.\nReflects the output type of the dispatchable ink! message.\nReflects the output type of the dispatchable ink! …\nThe module path of the ink! trait definition.\nYields <code>true</code> if the dispatchable ink! message is payable.\nYields <code>true</code> if the dispatchable ink! constructor is …\nIs <code>true</code> if the ink! trait message has been annotated with …\nInvalidly paid an unpayable dispatchable.\nclosure for returning per encoding todo: docs\nThe selectors of the dispatchable ink! message.\nThe selectors of the dispatchable ink! constructor.\nThe unique selector of the ink! trait message.\nMarker type for SCALE encoding. Used with <code>AbiEncodeWith</code>, …\nMarker type for Solidity ABI encoding. Used with …\nThe ink! storage struct type.\nThe ink! storage struct type.\nType that is guaranteed by ink! to implement all ink! …\nCaptures info about an ink! trait definition.\nStores information for every ink! trait message of an ink! …\nThe ink! smart contract message decoder type.\nThe ink! smart contract constructor decoder type.\nThe decoded selector is not known to the dispatch decoder.\nConverts the return value into a <code>Result</code> instance.\ntodo: docs\nDecodes the data from a buffer using the provided ABI.\nEncodes the data into a fixed-size buffer, returning the …\nEncodes the data into a dynamically resizing vector.\nExecutes the ink! smart contract message or constructor.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nStores the actual value of the constructor return type.")