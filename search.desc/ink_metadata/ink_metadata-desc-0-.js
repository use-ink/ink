searchState.loadedDescShard("ink_metadata", 0, "Describes a constructor of a contract.\nA builder for constructors.\nDescribes a contract.\nFailed to read execution input for the dispatchable.\nDescribes the syntactical name of a type at a given type …\nDescribes a contract environment.\nAn environment specification builder.\nProvides metadata about an ink! event.\nDescribes a pair of parameter label and type.\nUsed to construct an event parameter specification.\nDescribes an event definition.\nAn event specification builder.\nThe type identifying for which type info is provided.\nAn entire ink! project for metadata file generation …\nAn error emitted by the smart contracting language.\nThe full path to the event type, usually provided by …\nDescribes a pair of parameter label and type.\nUsed to construct a message parameter specification.\nDescribes a contract message.\nA builder for messages.\nDescribes the contract message return type.\nThe 4 byte selector to identify constructors and messages\nImplementors return their meta type information.\nA type specification.\nSets the <code>AccountId</code> type of the environment.\nReturns the <code>AccountId</code> type of the environment.\nSets the input arguments of the constructor specification.\nSets the input arguments of the message specification.\nSets the input arguments of the event specification.\nReturns the parameters of the deployment handler.\nReturns the parameters of the message.\nThe event arguments.\nThe parameters of the deployment handler.\nSets the <code>Balance</code> type of the environment.\nReturns the <code>Balance</code> type of the environment.\nSets the <code>BlockNumber</code> type of the environment.\nReturns the <code>BlockNumber</code> type of the environment.\nSets the constructors of the contract specification.\nReturns the set of constructors of the contract.\nSets the default of the constructor specification.\nSets the default of the message specification.\nReturns the compile-time known displayed representation of …\nSets the documentation of the contract specification.\nSets the documentation of the constructor specification.\nSets the documentation of the message specification.\nSets the input arguments of the event specification.\nSets the documentation of the event parameter.\nReturns the contract documentation.\nReturns the deployment handler documentation.\nReturns the message documentation.\nThe event documentation.\nReturns the documentation associated with the arguments.\nThe deployment handler documentation.\nFinalizes construction of the contract specification.\nFinishes construction of the constructor.\nFinishes construction of the message.\nFinalizes building the event specification.\nFinishes constructing the event parameter spec.\nFinishes construction of the message parameter.\nFinished constructing the <code>EnvironmentSpec</code> object.\nSets the environment types of the contract specification.\nReturns the metadata of the event.\nSets the events of the contract specification.\nReturns the events of the contract.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreates a new constructor spec builder.\nCreates a new message spec builder.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nSets the <code>Hash</code> type of the environment.\nReturns the <code>Hash</code> type of the environment.\nIf the event parameter is indexed as a topic.\nReturns true if the event parameter is indexed as a topic.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the label of the constructor.\nReturns the label of the message.\nReturns the label of the event.\nReturns the label of the parameter.\nReturns the label of the parameter.\nThe label of the constructor.\nSets the language error of the contract specification.\nReturns the language error type.\nReturns the storage layout of the contract.\nSets the messages of the contract specification.\nReturns the external messages of the contract.\nSets the module path to the event type definition.\nSets if the message is mutable, thus taking <code>&amp;mut self</code> or …\nReturns true if the message is allowed to mutate the …\nSets the <code>NATIVE_TO_ETH_RATIO</code> value of the environment.\nReturns the <code>NATIVE_TO_ETH_RATIO</code> value of the environment.\nCreates a new contract specification.\nCreates a new event specification builder.\nCreate a new custom selector.\nCreates a new type specification for a given type and …\nCreates a new event parameter specification builder.\nCreates a new return type specification from the given …\nConstructs a new message parameter specification via …\nCreate a new ink! project from a layout and a spec.\nCreate a new portable ink! project.\nSets the type of the event parameter.\nSets the type of the message parameter.\nCreates a new type specification without a display name.\nSets if the constructor is payable, thus accepting value …\nSets if the message is payable, thus accepting value for …\nReturns if the constructor is payable by the caller.\nReturns true if the message is payable by the caller.\nIf the constructor accepts any <code>value</code> from the caller.\nReturns a read-only registry of types in the contract.\nReturns the return type\nReturns the return type of the constructor.\nReturns the return type of the message.\nThe return type of the constructor..\nSets the return type of the constructor.\nSets the return type of the message.\nThe segments of the namespace.\nSets the function selector of the message.\nSets the function selector of the message.\nReturns the selector hash of the constructor.\nReturns the selector hash of the message.\nThe selector hash of the message.\nSets the signature topic of the event specification.\nThe signature topic of the event. <code>None</code> if the event is …\nTypes for representing Solidity ABI compatibility metadata …\nReturns the specification of the contract.\nSets the size of the static buffer configured via …\nSets the <code>Timestamp</code> type of the environment.\nReturns the <code>Timestamp</code> type of the environment.\nReturns the underlying selector bytes.\nReturns the actual type.\nReturns the type of the parameter.\nReturns the type of the parameter.\nReturns the static type identifier for <code>Self</code>.\nReturns the metadata version used by the contract.\nCreates a new type specification with a display name …\nCreates a new type specification with a display name.\nAn array of type associated with storage cell.\nA layout for an array of associated cells with the same …\nThe BLAKE-2 crypto hasher with an output of 256 bits.\nStorage keys of two types intersect\nOne of the supported crypto hashers.\nThe discriminant of an enum variant.\nAn enum layout with a discriminant telling which variant …\nAn enum storage layout.\nThe layout for a particular field of a struct layout.\nA layout that hashes values into the entire storage key …\nA hashing layout potentially hitting all cells of the …\nThe unbounded hashing strategy.\nThe KECCAK crypto hasher with an output of 256 bits.\nRepresents the static storage layout of an ink! smart …\nA pointer into some storage region.\nAn encoded cell.\nA SCALE encoded cell.\nAn error that can occur during ink! metadata generation.\nThe root cell defines the storage key for all sub-trees.\nSub-tree root.\nThe SHA-2 crypto hasher with an output of 256 bits.\nA struct layout with fields of different types.\nA struct layout with consecutive fields of different …\nIt validates that the storage layout doesn’t have …\nReturns the key where the discriminant is stored to …\nReturns the fields of the struct layout.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreates a new cell layout.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nReturns the supported crypto hasher.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the key of the layout key.\nReturns the offset key into the storage.\nReturns the storage layout of the unbounded layout …\nReturns the storage layout of the unbounded layout …\nReturns the layout of the elements stored in the array …\nReturns the kind of the field.\nReturns the number of elements in the array layout.\nReturns the name of the struct.\nReturns the name of the field.\nReturns the name of the field.\nConstruct a custom layout key.\nCreate a new root layout\nCreates a new unbounded layout.\nCreates a new unbounded hashing strategy.\nCreates an array layout with the given length.\nCreates a new struct layout.\nCreates a new custom field layout.\nCreates a new enum layout.\nCreates a new root layout with empty root type.\nReturns the key offset used by the strategy.\nReturns the offset key of the array layout.\nReturns the optional postfix to the computed hash.\nReturns the optional prefix to the computed hash.\nReturns the root key of the sub-tree.\nReturns the hashing strategy to layout the underlying …\nReturns the type of the encoded entity.\nReturns the type of the encoded entity.\nValidates the storage layout.\nReturns the value of the discriminant\nReturns the variants of the enum.\nink! constructor info for Solidity ABI compatible metadata …\nink! contract metadata for Solidity ABI compatible …\nError info for Solidity ABI compatible metadata generation.\nError parameter info.\nink! event info for Solidity ABI compatible metadata …\nink! event parameter info.\nink! message info for Solidity ABI compatible metadata …\nink! constructor and message parameter info.\nProvides Solidity custom error metadata for an error type.\nMetadata for all constructors of ink! contract.\nDocumentation for ink! contract.\nDocumentation for ink! constructor.\nDocumentation for ink! message.\nDocumentation for ink! event.\nDocumentation for parameter.\nDocumentation for error or error variant.\nDocumentation for parameter.\nReturns the metadata for the error type.\nMetadata for all errors encoded as Solidity custom errors …\nMetadata for all events of ink! contract.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nMetadata for all messages of ink! contract.\nParameter info for ink! constructor.\nParameter info for ink! message.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nWhether the ink! event is marked as anonymous.\nWhether the ink! constructor is marked as default.\nWhether the ink! message is marked as default.\nWhether the ink! constructor is marked as payable.\nWhether the ink! message is marked as payable.\nWhether the parameter is marked as a topic (i.e. is …\nWhether the ink! message has a mutable self receiver.\nName of ink! contract.\nName of ink! constructor.\nName of ink! message.\nName of ink! event.\nName of parameter.\nName of parameter.\nName of error.\nName of parameter.\nReturn type of ink! message.\nParameter info for ink! event.\nParameter info for error.\nSolidity ABI type of parameter.\nSolidity ABI type of parameter.\nSolidity ABI type of parameter.")