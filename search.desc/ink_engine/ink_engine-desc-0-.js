searchState.loadedDescShard("ink_engine", 0, "Errors encountered upon interacting with accounts.\nTypes implementing this trait can be used as chain …\nErrors which can happen when interacting with this crate.\nCalls the chain extension with the given input.\nProvides the same interface as Substrate’s FRAME <code>revive</code> …\nThe static ID of the chain extension.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nImplementations of supported cryptographic hash functions.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe call dispatched by <code>call_runtime</code> was executed but …\nThe called function ran to completion but decided to …\nThe called function trapped and has its state changes …\nThe chain specification.\nContract instantiation failed because the address already …\nECDSA public key recovery failed. Most probably wrong …\nThe off-chain engine.\nEvery error that can be returned to a contract when it …\nThe passed key does not exist in storage.\nThe subcall ran out of weight or storage deposit.\nsr25519 signature verification failed.\nAPI call successful.\nTransfer failed for other not further specified reason. …\nReturns if an unknown error was received from the host …\nThe <code>xcm_execute</code> call failed.\nThe <code>xcm_send</code> call failed.\nReturns the address of the executed contract.\nAdvances the chain by a single block.\nReturns the balance of the executed contract.\nReturns the current block number.\nThe targeted block time.\nReturns the timestamp of the current block.\nCalls the chain extension method registered at <code>func_id</code> …\nReturns the address of the caller.\nHandler for registered chain extensions.\nThe chain specification.\nRemoves the storage entries at the given key. Returns the …\nReturns the size of the value stored in the contract …\nReturns the total number of reads executed.\nReturns the amount of storage cells used by the contract …\nReturns the total number of writes executed.\nThe environment database.\nDeposits an event identified by the supplied topics and …\nRecovers the compressed ECDSA public key for given …\nThe current execution context.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nThe current gas price.\nReturns the current balance of <code>addr</code>.\nReturns the current balance of <code>addr</code>.\nReturns the callee, i.e. the currently executing contract.\nReturns the total number of reads and writes of the …\nReturns the recorded emitted events in order.\nReturns the contract storage bytes at the key if any.\nConduct the BLAKE-2 128-bit hash and place the result into …\nConduct the BLAKE-2 256-bit hash and place the result into …\nConduct the KECCAK 256-bit hash and place the result into …\nConduct the SHA-2 256-bit hash and place the result into …\nResets the environment.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns boolean value indicating whether the account is a …\nReturns the minimum balance that is required for creating …\nThe minimum value an account of the chain must have (i.e. …\nSets the balance of <code>addr</code> to <code>new_balance</code>.\nSets the balance of <code>addr</code> to <code>new_balance</code>.\nSet the block number for the execution context.\nSet the block timestamp for the execution context.\nSets the callee for the next call.\nSets a caller for the next call.\nSets a known contract by adding it to a vector of known …\nWrites the encoded value into the storage at the given key.\nSets the value transferred from the caller to the callee …\nRemoves the storage entries at the given key, returning …\nRemove the calling account and transfer remaining balance.\nTransfers value from the contract to the destination …\nReturns the transferred value for the called contract.\nEmulates gas price calculation.\nConduct the BLAKE2 128-bit hash and place the result into …\nConduct the BLAKE2 256-bit hash and place the result into …\nConduct the KECCAK 256-bit hash and place the result into …\nConduct the SHA-2 256-bit hash and place the result into …\nRecorder for relevant interactions with this crate.\nRecord for an emitted event.\nRecorded encoding of the emitted event.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nIncreases the number of storage reads for the supplied …\nIncreases the number of storage writes for the supplied …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nRecords that a cell exists for an account under <code>key</code>.\nRecords an event.\nRemoves the cell under <code>key</code> for the supplied account.\nResets the recorder.\nRecorded topics of the emitted event.")