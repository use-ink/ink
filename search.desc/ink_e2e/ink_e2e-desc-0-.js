searchState.loadedDescShard("ink_e2e", 0, "Module for the logic behind ink!’s End-to-End testing …\nAccount type.\nBalance type.\nResult of a contract instantiation using bare call.\nAllows to build an end-to-end call using a builder pattern.\nRepresents an initialized contract message builder.\nResult of the dry run of a contract call.\nResult of a contract call.\nA smart contract execution call trace.\nGeneral chain operations useful in contract testing.\nThe <code>Client</code> takes care of communicating with the node.\nAlias for the contract exec result.\nResult type of a <code>bare_call</code>, <code>bare_instantiate</code>, …\nContract-specific operations.\nRegistry of contracts that can be loaded.\nThe type returned from <code>ContractRef</code> constructors, partially …\nFull E2E testing backend: combines general chain API and …\nError type.\nError type.\nEvent log type.\nEvent log type.\nWe use this to only initialize <code>env_logger</code> once.\nAllows to build an end-to-end instantiation call using a …\nResult of the dry run of a contract call.\nResult of a contract instantiation.\nAn sr25519 keypair implementation. While the API is …\nThis prefix will be used for log output. It is set by each …\nThe maximal weight in all dimensions.\nDefault set of commonly used types by Polkadot nodes.\nA concrete wrapper around an <code>RpcClientT</code> which provides …\nSet of test accounts.\nSpawn a local substrate node for testing.\nConstruct a test node process.\nResult of a contract upload.\nPhantom data for return type and its ABI encoding.\nPhantom data for return type and its ABI encoding.\nGet an ink! <code>ink_primitives::AccountId</code> for a given keyring …\nThe account id at which the contract was instantiated.\nConstant version of Add for <code>proof_size</code> component with u64.\nConstant version of Add for <code>ref_time</code> component with u64.\nThe address at which the contract was instantiated.\nReturns the <code>ink::Address</code> for a given keyring account.\nReturns the <code>ink::Address</code> for a given account id.\nReturns the <code>ink::Address</code> for a given <code>Keypair</code>.\nEquivalent to <code>{DEV_PHRASE}//Alice</code>.\nReturns true if all of <code>self</code>’s constituent weights is …\nReturns true if all of <code>self</code>’s constituent weights is …\nReturns true if all of <code>self</code>’s constituent weights is …\nReturns true if all of <code>self</code>’s constituent weights is …\nReturns true if any of <code>self</code>’s constituent weights is …\nReturns true if any of <code>self</code>’s constituent weights is …\nReturns true if any of <code>self</code>’s constituent weights is …\nReturns true if any of <code>self</code>’s constituent weights is …\nReturns true if any of <code>self</code>’s constituent weights is …\nExecutes a bare <code>call</code> for the contract at <code>account_id</code>. This …\nExecutes a dry-run <code>call</code>.\nDry-runs a bare call.\nBare instantiate call. This function does not perform a …\nDry run contract instantiation.\nImportant: For an uncomplicated UX of the E2E testing …\nRemoves the code of the contract at <code>code_hash</code>.\nUploads the contract call.\nEquivalent to <code>{DEV_PHRASE}//Bob</code>.\nConstruct a builder for spawning a test node process.\nBuilds the “root” contract (the contract in which the …\nConstruct a builder for spawning a test node process, …\nStart building a call using a builder pattern.\nStart building a call using a builder pattern.\nReturns a call builder for the contract which was …\nReturns a call builder for the specified ABI for the …\nType of call.\nList of sub-calls.\nEquivalent to <code>{DEV_PHRASE}//Charlie</code>.\nTry to increase <code>self</code> by <code>amount</code> via checked addition.\nChecked <code>Weight</code> addition. Computes <code>self + rhs</code>, returning …\nChecked <code>Weight</code> scalar division. Computes …\nCalculates how many <code>other</code> fit into <code>self</code>.\nChecked <code>Weight</code> scalar multiplication. Computes …\nTry to reduce <code>self</code> by <code>amount</code> via checked subtraction.\nChecked <code>Weight</code> subtraction. Computes <code>self - rhs</code>, returning …\nReturns the <code>subxt</code> client connected to the running node.\nReturns the <code>H256</code> hash of the code slice.\nCode hash of the instantiated contract.\ntodo\nThe hash with which the contract can be instantiated.\nGet the encoded constructor arguments from the partially …\nReturns the encoded return value from the constructor.\nReturns true if the specified event was triggered by the …\nReturns all the <code>ContractEmitted</code> events emitted by the …\nThe result of the dry run, contains debug messages if …\nGenerate a new account and fund it with the given <code>amount</code> …\nCreates a call builder for <code>Contract</code>, based on an account …\nCreates a call builder for <code>Contract</code> for the specified ABI, …\nEquivalent to <code>{DEV_PHRASE}//Dave</code>.\nDerive a child key from this one given a series of …\nReturns true if the message call reverted.\nReturns true if the instantiation dry-run reverted.\nConstant version of Div with u64.\nDry run the call.\nDry run the instantiate call.\nThe result of the dry run, contains debug messages if …\nThe result of the dry run, contains debug messages if …\nThe result of the dry run, contains debug messages if …\nThe error message if the call failed.\nEquivalent to <code>{DEV_PHRASE}//Eve</code>.\nEvents that happened with the contract instantiation.\nEvents that happened with the contract instantiation.\nEvents that happened with the contract instantiation.\nEvents that happened with the contract instantiation.\nThe result of the dry run, contains debug messages if …\nReturns the <code>ExecReturnValue</code> resulting from the dry-run …\nIncreases the gas limit marginally by a specified percent. …\nIncreases the gas limit marginally by a specified percent. …\nEquivalent to <code>{DEV_PHRASE}//Ferdie</code>.\nReturns the free balance of <code>account</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nAddress of the sender.\nConstruct <code>Weight</code> from the same weight for all parts.\nCreate a default RPC client pointed at some URL, currently …\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nConstruct <code>Weight</code> from weight parts, namely reference time …\nCreate am sr25519 keypair from a BIP-39 mnemonic phrase …\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nTurn a 32 byte secret key into a keypair.\nCreate am sr25519 keypair from a <code>SecretUri</code>. See the …\nCreate a default RPC client pointed at some URL, currently …\nAmount of gas provided for the call.\nHow much weight was consumed during execution.\nHow much weight was consumed during execution.\nSpecifies the raw gas limit as part of the call.\nSpecifies the raw gas limit as part of the call.\nHow much weight is required as gas limit in order to …\nHow much weight is required as gas limit in order to …\nAmount of gas used.\nCall input data.\nStart building an instantiate call using a builder pattern.\nStart building an instantiate call using a builder pattern.\nReturns the <code>InstantiateReturnValue</code> resulting from the …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns true if the dry-run execution resulted in an error.\nReturns true if the dry-run execution resulted in an error.\nReturns an iterator over all test accounts.\nTransforms a <code>Keypair</code> into an account id.\nAttempt to kill the running substrate process.\nLoad the binary code for the given contract.\nWrites <code>msg</code> to stderr.\nWrites <code>msg</code> to stdout.\nReturns the name of the test which is currently executed.\nList of logs emitted during the call.\nChecks if <code>caller</code> was already mapped in <code>pallet-revive</code>. If …\nChecks if <code>caller</code> was already mapped in <code>pallet-revive</code>. If …\nGet the aggressive max of <code>self</code> and <code>other</code> weight.\nReturns the <code>MessageResult</code> from the execution of the …\nReturns the <code>MessageResult</code> from the execution of the …\nGet the conservative min of <code>self</code> and <code>other</code> weight.\nConstant version of Mul with u64.\nInitialize a call builder with defaults values.\nInitialize a call builder with essential values.\nCreate a new registry with the given contracts.\nCreates a new <code>Client</code> instance using a <code>subxt</code> client.\nCreate a new <code>RpcClient</code> from an arbitrary <code>RpcClientT</code> …\nCreate a crypto <code>Pair</code> from a numeric value.\nGet account id of a <code>numeric</code> account.\nEquivalent to <code>{DEV_PHRASE}//One</code>.\nReturn data.\nReturn the storage size part of the weight.\nReturn a mutable reference to the storage size part of the …\nObtain the <code>PublicKey</code> part of this key pair, which can be …\nExecutes a dry-run <code>call</code>.\nExecutes a dry-run <code>call</code>.\nImportant: For an uncomplicated UX of the E2E testing …\nReturn the reference time part of the weight.\nReturn a mutable reference to the reference time part of …\nStart building a remove code call.\nStart building a remove code call.\nMake an RPC request, given a method name and some …\nThe execution result of the code.\nThe execution result of the code.\nReturns the return value of the message dry-run as raw …\nReturns the return value as raw bytes of the message from …\nReturns the return value of the instantiation dry-run as …\nReturns the decoded return value of the message from the …\nReturns the decoded return value of the message from the …\nThe revert reason, if the call reverted.\nReturns the <code>subxt</code> RPC client connected to the running node.\nExecutes a runtime call <code>call_name</code> for the <code>pallet_name</code>. The …\nGenerates a unique salt based on the system time.\nIncrement <code>Weight</code> by <code>amount</code> via saturating addition.\nSaturating <code>Weight</code> addition. Computes <code>self + rhs</code>, …\nSaturating <code>Weight</code> scalar division. Computes …\nSaturating <code>Weight</code> scalar multiplication. Computes …\nSaturating <code>Weight</code> scalar exponentiation. Computes …\nReduce <code>Weight</code> by <code>amount</code> via saturating subtraction.\nSaturating <code>Weight</code> subtraction. Computes <code>self - rhs</code>, …\nSet the storage size part of the weight.\nSet the reference time part of the weight.\nSign some message. These bytes can be used directly in a …\nSpawn the substrate node at the given path, and wait for …\nAn sr25519 keypair implementation.\nHow much balance was paid by the origin into the contract…\nHow much balance was paid by the origin into the contract…\nSpecify the max amount of funds that can be charged for …\nSpecify the max amount of funds that can be charged for …\nConstant version of Sub for <code>proof_size</code> component with u64.\nConstant version of Sub for <code>ref_time</code> component with u64.\nSubmit the call for the on-chain execution.\nSubmit the instantiate call for the on-chain execution.\nSubscribe to an RPC endpoint, providing the parameters and …\nDefines an End-to-End test.\nAddress of the receiver.\nReturns the <code>Environment::AccountId</code> for an <code>H160</code> address.\nReturns the <code>AccountId</code> for a <code>H160</code>.\nTrace of the instantiated contract.\ntodo\ntodo\nThe execution trace (if any).\nAttempt to transfer the <code>value</code> from <code>origin</code> to <code>dest</code>.\nTry to add some <code>other</code> weight while upholding the <code>limit</code>.\nEquivalent to <code>{DEV_PHRASE}//Two</code>.\nStart building an upload call.\nStart building an upload call.\nReturns the URL of the running node.\nReturns the URL of the running node.\nProvide value with a call\nProvide value with a call\nAmount of value transferred.\nSet the authority development account for a node in …\nReturn a <code>Weight</code> where all fields are zero.\nCode with the specified hash has been stored.\nA custom event emitted by the contract.\nA contract was successfully instantiated.\nA decoded event with its associated topics.\nHash under which the contract code was stored.\nAddress where the contract was instantiated to.\nAddress of the deployer.\nSCALE encode this type to bytes, possibly with the help of …\nSCALE encode this type to bytes, possibly with the help of …\nSCALE encode this type to bytes, possibly with the help of …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nAn error handed back if creating a keypair fails.\nInvalid hex.\nInvalid seed.\nAn sr25519 keypair implementation. While the API is …\nInvalid phrase.\nThe public key for an <code>Keypair</code> key pair. This is equivalent …\nSeed bytes used to generate a key pair.\nA signature generated by <code>Keypair::sign()</code>. These bytes are …\nSignature error.\nDev accounts, helpful for testing but not to be used in …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nA shortcut to obtain an <code>AccountId32</code> from a <code>PublicKey</code>. We …\nA shortcut to obtain a <code>MultiAddress</code> from a <code>PublicKey</code>. We …\nVerify that some signature for a message was created by …\nEquivalent to <code>{DEV_PHRASE}//Alice</code>.\nEquivalent to <code>{DEV_PHRASE}//Bob</code>.\nEquivalent to <code>{DEV_PHRASE}//Charlie</code>.\nEquivalent to <code>{DEV_PHRASE}//Dave</code>.\nEquivalent to <code>{DEV_PHRASE}//Eve</code>.\nEquivalent to <code>{DEV_PHRASE}//Ferdie</code>.\nEquivalent to <code>{DEV_PHRASE}//One</code>.\nEquivalent to <code>{DEV_PHRASE}//Two</code>.")